{"version":3,"file":"bundle.js","sources":["node_modules/ol/util.js","node_modules/ol/AssertionError.js","node_modules/ol/events/Event.js","node_modules/ol/ObjectEventType.js","node_modules/ol/Disposable.js","node_modules/ol/array.js","node_modules/ol/functions.js","node_modules/ol/obj.js","node_modules/ol/events/Target.js","node_modules/ol/events/EventType.js","node_modules/ol/events.js","node_modules/ol/Observable.js","node_modules/ol/Object.js","node_modules/ol/CollectionEventType.js","node_modules/ol/Collection.js","node_modules/ol/asserts.js","node_modules/ol/geom/GeometryLayout.js","node_modules/ol/geom/GeometryType.js","node_modules/ol/proj/Units.js","node_modules/ol/has.js","node_modules/ol/transform.js","node_modules/ol/extent/Corner.js","node_modules/ol/extent/Relationship.js","node_modules/ol/extent.js","node_modules/ol/proj/Projection.js","node_modules/ol/math.js","node_modules/ol/proj/epsg3857.js","node_modules/ol/proj/epsg4326.js","node_modules/ol/proj/projections.js","node_modules/ol/proj/transforms.js","node_modules/ol/sphere.js","node_modules/ol/coordinate.js","node_modules/ol/proj.js","node_modules/ol/geom/Geometry.js","node_modules/ol/geom/flat/transform.js","node_modules/ol/geom/SimpleGeometry.js","node_modules/ol/geom/flat/closest.js","node_modules/ol/geom/flat/deflate.js","node_modules/ol/geom/flat/simplify.js","node_modules/ol/geom/flat/inflate.js","node_modules/ol/geom/flat/area.js","node_modules/ol/geom/LinearRing.js","node_modules/ol/geom/Point.js","node_modules/ol/geom/flat/contains.js","node_modules/ol/geom/flat/intersectsextent.js","node_modules/ol/geom/flat/segments.js","node_modules/ol/geom/flat/reverse.js","node_modules/ol/geom/flat/orient.js","node_modules/ol/geom/Polygon.js","node_modules/ol/geom/flat/interiorpoint.js","node_modules/ol/render/EventType.js","node_modules/ol/ImageState.js","node_modules/ol/size.js","node_modules/ol/color.js","node_modules/ol/dom.js","node_modules/ol/css.js","node_modules/ol/render/canvas.js","node_modules/ol/layer/Property.js","node_modules/ol/layer/Base.js","node_modules/ol/source/State.js","node_modules/ol/layer/Layer.js","node_modules/ol/renderer/Layer.js","node_modules/ol/render/Event.js","node_modules/ol/renderer/canvas/Layer.js","node_modules/ol/ViewHint.js","node_modules/ol/style/IconImageCache.js","node_modules/ol/ImageBase.js","node_modules/ol/Image.js","node_modules/ol/source/Source.js","node_modules/ol/TileState.js","node_modules/ol/easing.js","node_modules/ol/Tile.js","node_modules/ol/ImageTile.js","node_modules/ol/Kinetic.js","node_modules/ol/renderer/Map.js","node_modules/ol/renderer/Composite.js","node_modules/ol/layer/Group.js","node_modules/ol/MapEvent.js","node_modules/ol/MapBrowserEvent.js","node_modules/ol/MapBrowserEventType.js","node_modules/ol/pointer/EventType.js","node_modules/ol/MapBrowserEventHandler.js","node_modules/ol/MapEventType.js","node_modules/ol/MapProperty.js","node_modules/ol/structs/PriorityQueue.js","node_modules/ol/TileQueue.js","node_modules/ol/ViewProperty.js","node_modules/ol/tilegrid/common.js","node_modules/ol/centerconstraint.js","node_modules/ol/resolutionconstraint.js","node_modules/ol/rotationconstraint.js","node_modules/ol/View.js","node_modules/ol/PluggableMap.js","node_modules/ol/control/Control.js","node_modules/ol/control/Attribution.js","node_modules/ol/control/Rotate.js","node_modules/ol/control/Zoom.js","node_modules/ol/interaction/Property.js","node_modules/ol/interaction/Interaction.js","node_modules/ol/interaction/DoubleClickZoom.js","node_modules/ol/interaction/Pointer.js","node_modules/ol/events/condition.js","node_modules/ol/interaction/DragPan.js","node_modules/ol/interaction/DragRotate.js","node_modules/ol/render/Box.js","node_modules/ol/interaction/DragBox.js","node_modules/ol/interaction/DragZoom.js","node_modules/ol/events/KeyCode.js","node_modules/ol/interaction/KeyboardPan.js","node_modules/ol/interaction/KeyboardZoom.js","node_modules/ol/interaction/MouseWheelZoom.js","node_modules/ol/interaction/PinchRotate.js","node_modules/ol/interaction/PinchZoom.js","node_modules/ol/Map.js","node_modules/ol/control.js","node_modules/ol/interaction.js","node_modules/ol/structs/LRUCache.js","node_modules/ol/tilecoord.js","node_modules/ol/TileCache.js","node_modules/ol/TileRange.js","node_modules/ol/layer/TileProperty.js","node_modules/ol/layer/BaseTile.js","node_modules/ol/renderer/canvas/TileLayer.js","node_modules/ol/reproj.js","node_modules/ol/layer/Tile.js","node_modules/ol/reproj/Triangulation.js","node_modules/ol/source/common.js","node_modules/ol/reproj/Tile.js","node_modules/ol/reproj/common.js","node_modules/ol/source/TileEventType.js","node_modules/ol/tilegrid/TileGrid.js","node_modules/ol/tilegrid.js","node_modules/ol/source/Tile.js","node_modules/ol/tileurlfunction.js","node_modules/ol/source/UrlTile.js","node_modules/ol/source/TileImage.js","node_modules/ol/source/XYZ.js","node_modules/ol/source/OSM.js","main.js"],"sourcesContent":["/**\n * @module ol/util\n */\n/**\n * @return {?} Any return.\n */\nexport function abstract() {\n    return /** @type {?} */ ((function () {\n        throw new Error('Unimplemented abstract method.');\n    })());\n}\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nvar uidCounter_ = 0;\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n    return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport var VERSION = '6.9.0';\n//# sourceMappingURL=util.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/AssertionError\n */\nimport { VERSION } from './util.js';\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nvar AssertionError = /** @class */ (function (_super) {\n    __extends(AssertionError, _super);\n    /**\n     * @param {number} code Error code.\n     */\n    function AssertionError(code) {\n        var _this = this;\n        var path = VERSION === 'latest' ? VERSION : 'v' + VERSION.split('-')[0];\n        var message = 'Assertion failed. See https://openlayers.org/en/' +\n            path +\n            '/doc/errors/#' +\n            code +\n            ' for details.';\n        _this = _super.call(this, message) || this;\n        /**\n         * Error code. The meaning of the code can be found on\n         * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n         * the version found in the OpenLayers script's header comment if a version\n         * other than the latest is used).\n         * @type {number}\n         * @api\n         */\n        _this.code = code;\n        /**\n         * @type {string}\n         */\n        _this.name = 'AssertionError';\n        // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n        _this.message = message;\n        return _this;\n    }\n    return AssertionError;\n}(Error));\nexport default AssertionError;\n//# sourceMappingURL=AssertionError.js.map","/**\n * @module ol/events/Event\n */\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nvar BaseEvent = /** @class */ (function () {\n    /**\n     * @param {string} type Type.\n     */\n    function BaseEvent(type) {\n        /**\n         * @type {boolean}\n         */\n        this.propagationStopped;\n        /**\n         * @type {boolean}\n         */\n        this.defaultPrevented;\n        /**\n         * The event type.\n         * @type {string}\n         * @api\n         */\n        this.type = type;\n        /**\n         * The event target.\n         * @type {Object}\n         * @api\n         */\n        this.target = null;\n    }\n    /**\n     * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n     * will be fired.\n     * @api\n     */\n    BaseEvent.prototype.preventDefault = function () {\n        this.defaultPrevented = true;\n    };\n    /**\n     * Stop event propagation.\n     * @api\n     */\n    BaseEvent.prototype.stopPropagation = function () {\n        this.propagationStopped = true;\n    };\n    return BaseEvent;\n}());\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n    evt.stopPropagation();\n}\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n    evt.preventDefault();\n}\nexport default BaseEvent;\n//# sourceMappingURL=Event.js.map","/**\n * @module ol/ObjectEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when a property is changed.\n     * @event module:ol/Object.ObjectEvent#propertychange\n     * @api\n     */\n    PROPERTYCHANGE: 'propertychange',\n};\n/**\n * @typedef {'propertychange'} Types\n */\n//# sourceMappingURL=ObjectEventType.js.map","/**\n * @module ol/Disposable\n */\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nvar Disposable = /** @class */ (function () {\n    function Disposable() {\n        /**\n         * The object has already been disposed.\n         * @type {boolean}\n         * @protected\n         */\n        this.disposed = false;\n    }\n    /**\n     * Clean up.\n     */\n    Disposable.prototype.dispose = function () {\n        if (!this.disposed) {\n            this.disposed = true;\n            this.disposeInternal();\n        }\n    };\n    /**\n     * Extension point for disposable objects.\n     * @protected\n     */\n    Disposable.prototype.disposeInternal = function () { };\n    return Disposable;\n}());\nexport default Disposable;\n//# sourceMappingURL=Disposable.js.map","/**\n * @module ol/array\n */\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [opt_comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, opt_comparator) {\n    var mid, cmp;\n    var comparator = opt_comparator || numberSafeCompareFunction;\n    var low = 0;\n    var high = haystack.length;\n    var found = false;\n    while (low < high) {\n        /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n         * to double (which gives the wrong results). */\n        mid = low + ((high - low) >> 1);\n        cmp = +comparator(haystack[mid], needle);\n        if (cmp < 0.0) {\n            /* Too low. */\n            low = mid + 1;\n        }\n        else {\n            /* Key found or too high */\n            high = mid;\n            found = !cmp;\n        }\n    }\n    /* Key not found. */\n    return found ? low : ~low;\n}\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n    return a > b ? 1 : a < b ? -1 : 0;\n}\n/**\n * Whether the array contains the given object.\n * @param {Array<*>} arr The array to test for the presence of the element.\n * @param {*} obj The object for which to test.\n * @return {boolean} The object is in the array.\n */\nexport function includes(arr, obj) {\n    return arr.indexOf(obj) >= 0;\n}\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n    var n = arr.length;\n    if (arr[0] <= target) {\n        return 0;\n    }\n    else if (target <= arr[n - 1]) {\n        return n - 1;\n    }\n    else {\n        var i = void 0;\n        if (direction > 0) {\n            for (i = 1; i < n; ++i) {\n                if (arr[i] < target) {\n                    return i - 1;\n                }\n            }\n        }\n        else if (direction < 0) {\n            for (i = 1; i < n; ++i) {\n                if (arr[i] <= target) {\n                    return i;\n                }\n            }\n        }\n        else {\n            for (i = 1; i < n; ++i) {\n                if (arr[i] == target) {\n                    return i;\n                }\n                else if (arr[i] < target) {\n                    if (typeof direction === 'function') {\n                        if (direction(target, arr[i - 1], arr[i]) > 0) {\n                            return i - 1;\n                        }\n                        else {\n                            return i;\n                        }\n                    }\n                    else if (arr[i - 1] - target < target - arr[i]) {\n                        return i - 1;\n                    }\n                    else {\n                        return i;\n                    }\n                }\n            }\n        }\n        return n - 1;\n    }\n}\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n    while (begin < end) {\n        var tmp = arr[begin];\n        arr[begin] = arr[end];\n        arr[end] = tmp;\n        ++begin;\n        --end;\n    }\n}\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n    var extension = Array.isArray(data) ? data : [data];\n    var length = extension.length;\n    for (var i = 0; i < length; i++) {\n        arr[arr.length] = extension[i];\n    }\n}\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n    var i = arr.indexOf(obj);\n    var found = i > -1;\n    if (found) {\n        arr.splice(i, 1);\n    }\n    return found;\n}\n/**\n * @param {Array<VALUE>} arr The array to search in.\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\n * @template VALUE\n * @return {VALUE|null} The element found or null.\n */\nexport function find(arr, func) {\n    var length = arr.length >>> 0;\n    var value;\n    for (var i = 0; i < length; i++) {\n        value = arr[i];\n        if (func(value, i, arr)) {\n            return value;\n        }\n    }\n    return null;\n}\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n    var len1 = arr1.length;\n    if (len1 !== arr2.length) {\n        return false;\n    }\n    for (var i = 0; i < len1; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n    var length = arr.length;\n    var tmp = Array(arr.length);\n    var i;\n    for (i = 0; i < length; i++) {\n        tmp[i] = { index: i, value: arr[i] };\n    }\n    tmp.sort(function (a, b) {\n        return compareFnc(a.value, b.value) || a.index - b.index;\n    });\n    for (i = 0; i < arr.length; i++) {\n        arr[i] = tmp[i].value;\n    }\n}\n/**\n * @param {Array<*>} arr The array to search in.\n * @param {Function} func Comparison function.\n * @return {number} Return index.\n */\nexport function findIndex(arr, func) {\n    var index;\n    var found = !arr.every(function (el, idx) {\n        index = idx;\n        return !func(el, idx, arr);\n    });\n    return found ? index : -1;\n}\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [opt_func] Comparison function.\n * @param {boolean} [opt_strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, opt_func, opt_strict) {\n    var compare = opt_func || numberSafeCompareFunction;\n    return arr.every(function (currentVal, index) {\n        if (index === 0) {\n            return true;\n        }\n        var res = compare(arr[index - 1], currentVal);\n        return !(res > 0 || (opt_strict && res === 0));\n    });\n}\n//# sourceMappingURL=array.js.map","/**\n * @module ol/functions\n */\nimport { equals as arrayEquals } from './array.js';\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n    return true;\n}\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n    return false;\n}\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() { }\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n    var called = false;\n    /** @type {ReturnType} */\n    var lastResult;\n    /** @type {Array<any>} */\n    var lastArgs;\n    var lastThis;\n    return function () {\n        var nextArgs = Array.prototype.slice.call(arguments);\n        if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n            called = true;\n            lastThis = this;\n            lastArgs = nextArgs;\n            lastResult = fn.apply(this, arguments);\n        }\n        return lastResult;\n    };\n}\n//# sourceMappingURL=functions.js.map","/**\n * @module ol/obj\n */\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\n *\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport var assign = typeof Object.assign === 'function'\n    ? Object.assign\n    : function (target, var_sources) {\n        if (target === undefined || target === null) {\n            throw new TypeError('Cannot convert undefined or null to object');\n        }\n        var output = Object(target);\n        for (var i = 1, ii = arguments.length; i < ii; ++i) {\n            var source = arguments[i];\n            if (source !== undefined && source !== null) {\n                for (var key in source) {\n                    if (source.hasOwnProperty(key)) {\n                        output[key] = source[key];\n                    }\n                }\n            }\n        }\n        return output;\n    };\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n    for (var property in object) {\n        delete object[property];\n    }\n}\n/**\n * Polyfill for Object.values().  Get an array of property values from an object.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/values\n *\n * @param {!Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\nexport var getValues = typeof Object.values === 'function'\n    ? Object.values\n    : function (object) {\n        var values = [];\n        for (var property in object) {\n            values.push(object[property]);\n        }\n        return values;\n    };\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n    var property;\n    for (property in object) {\n        return false;\n    }\n    return !property;\n}\n//# sourceMappingURL=obj.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport { VOID } from '../functions.js';\nimport { clear } from '../obj.js';\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nvar Target = /** @class */ (function (_super) {\n    __extends(Target, _super);\n    /**\n     * @param {*} [opt_target] Default event target for dispatched events.\n     */\n    function Target(opt_target) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {*}\n         */\n        _this.eventTarget_ = opt_target;\n        /**\n         * @private\n         * @type {Object<string, number>}\n         */\n        _this.pendingRemovals_ = null;\n        /**\n         * @private\n         * @type {Object<string, number>}\n         */\n        _this.dispatching_ = null;\n        /**\n         * @private\n         * @type {Object<string, Array<import(\"../events.js\").Listener>>}\n         */\n        _this.listeners_ = null;\n        return _this;\n    }\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../events.js\").Listener} listener Listener.\n     */\n    Target.prototype.addEventListener = function (type, listener) {\n        if (!type || !listener) {\n            return;\n        }\n        var listeners = this.listeners_ || (this.listeners_ = {});\n        var listenersForType = listeners[type] || (listeners[type] = []);\n        if (listenersForType.indexOf(listener) === -1) {\n            listenersForType.push(listener);\n        }\n    };\n    /**\n     * Dispatches an event and calls all listeners listening for events\n     * of this type. The event parameter can either be a string or an\n     * Object with a `type` property.\n     *\n     * @param {import(\"./Event.js\").default|string} event Event object.\n     * @return {boolean|undefined} `false` if anyone called preventDefault on the\n     *     event object or if any of the listeners returned false.\n     * @api\n     */\n    Target.prototype.dispatchEvent = function (event) {\n        /** @type {import(\"./Event.js\").default|Event} */\n        var evt = typeof event === 'string' ? new Event(event) : event;\n        var type = evt.type;\n        if (!evt.target) {\n            evt.target = this.eventTarget_ || this;\n        }\n        var listeners = this.listeners_ && this.listeners_[type];\n        var propagate;\n        if (listeners) {\n            var dispatching = this.dispatching_ || (this.dispatching_ = {});\n            var pendingRemovals = this.pendingRemovals_ || (this.pendingRemovals_ = {});\n            if (!(type in dispatching)) {\n                dispatching[type] = 0;\n                pendingRemovals[type] = 0;\n            }\n            ++dispatching[type];\n            for (var i = 0, ii = listeners.length; i < ii; ++i) {\n                if ('handleEvent' in listeners[i]) {\n                    propagate = /** @type {import(\"../events.js\").ListenerObject} */ (listeners[i]).handleEvent(evt);\n                }\n                else {\n                    propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (listeners[i]).call(this, evt);\n                }\n                if (propagate === false || evt.propagationStopped) {\n                    propagate = false;\n                    break;\n                }\n            }\n            --dispatching[type];\n            if (dispatching[type] === 0) {\n                var pr = pendingRemovals[type];\n                delete pendingRemovals[type];\n                while (pr--) {\n                    this.removeEventListener(type, VOID);\n                }\n                delete dispatching[type];\n            }\n            return propagate;\n        }\n    };\n    /**\n     * Clean up.\n     */\n    Target.prototype.disposeInternal = function () {\n        this.listeners_ && clear(this.listeners_);\n    };\n    /**\n     * Get the listeners for a specified event type. Listeners are returned in the\n     * order that they will be called in.\n     *\n     * @param {string} type Type.\n     * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n     */\n    Target.prototype.getListeners = function (type) {\n        return (this.listeners_ && this.listeners_[type]) || undefined;\n    };\n    /**\n     * @param {string} [opt_type] Type. If not provided,\n     *     `true` will be returned if this event target has any listeners.\n     * @return {boolean} Has listeners.\n     */\n    Target.prototype.hasListener = function (opt_type) {\n        if (!this.listeners_) {\n            return false;\n        }\n        return opt_type\n            ? opt_type in this.listeners_\n            : Object.keys(this.listeners_).length > 0;\n    };\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../events.js\").Listener} listener Listener.\n     */\n    Target.prototype.removeEventListener = function (type, listener) {\n        var listeners = this.listeners_ && this.listeners_[type];\n        if (listeners) {\n            var index = listeners.indexOf(listener);\n            if (index !== -1) {\n                if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n                    // make listener a no-op, and remove later in #dispatchEvent()\n                    listeners[index] = VOID;\n                    ++this.pendingRemovals_[type];\n                }\n                else {\n                    listeners.splice(index, 1);\n                    if (listeners.length === 0) {\n                        delete this.listeners_[type];\n                    }\n                }\n            }\n        }\n    };\n    return Target;\n}(Disposable));\nexport default Target;\n//# sourceMappingURL=Target.js.map","/**\n * @module ol/events/EventType\n */\n/**\n * @enum {string}\n * @const\n */\nexport default {\n    /**\n     * Generic change event. Triggered when the revision counter is increased.\n     * @event module:ol/events/Event~BaseEvent#change\n     * @api\n     */\n    CHANGE: 'change',\n    /**\n     * Generic error event. Triggered when an error occurs.\n     * @event module:ol/events/Event~BaseEvent#error\n     * @api\n     */\n    ERROR: 'error',\n    BLUR: 'blur',\n    CLEAR: 'clear',\n    CONTEXTMENU: 'contextmenu',\n    CLICK: 'click',\n    DBLCLICK: 'dblclick',\n    DRAGENTER: 'dragenter',\n    DRAGOVER: 'dragover',\n    DROP: 'drop',\n    FOCUS: 'focus',\n    KEYDOWN: 'keydown',\n    KEYPRESS: 'keypress',\n    LOAD: 'load',\n    RESIZE: 'resize',\n    TOUCHMOVE: 'touchmove',\n    WHEEL: 'wheel',\n};\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/events\n */\nimport { clear } from './obj.js';\n/**\n * Key to use with {@link module:ol/Observable~Observable#unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [opt_this] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [opt_once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, opt_this, opt_once) {\n    if (opt_this && opt_this !== target) {\n        listener = listener.bind(opt_this);\n    }\n    if (opt_once) {\n        var originalListener_1 = listener;\n        listener = function () {\n            target.removeEventListener(type, listener);\n            originalListener_1.apply(this, arguments);\n        };\n    }\n    var eventsKey = {\n        target: target,\n        type: type,\n        listener: listener,\n    };\n    target.addEventListener(type, listener);\n    return eventsKey;\n}\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [opt_this] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, opt_this) {\n    return listen(target, type, listener, opt_this, true);\n}\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n    if (key && key.target) {\n        key.target.removeEventListener(key.type, key.listener);\n        clear(key);\n    }\n}\n//# sourceMappingURL=events.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport { listen, listenOnce, unlistenByKey } from './events.js';\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nvar Observable = /** @class */ (function (_super) {\n    __extends(Observable, _super);\n    function Observable() {\n        var _this = _super.call(this) || this;\n        _this.on =\n            /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (_this.onInternal);\n        _this.once =\n            /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (_this.onceInternal);\n        _this.un = /** @type {ObservableOnSignature<void>} */ (_this.unInternal);\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.revision_ = 0;\n        return _this;\n    }\n    /**\n     * Increases the revision counter and dispatches a 'change' event.\n     * @api\n     */\n    Observable.prototype.changed = function () {\n        ++this.revision_;\n        this.dispatchEvent(EventType.CHANGE);\n    };\n    /**\n     * Get the version number for this object.  Each time the object is modified,\n     * its version number will be incremented.\n     * @return {number} Revision.\n     * @api\n     */\n    Observable.prototype.getRevision = function () {\n        return this.revision_;\n    };\n    /**\n     * @param {string|Array<string>} type Type.\n     * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n     * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n     * @protected\n     */\n    Observable.prototype.onInternal = function (type, listener) {\n        if (Array.isArray(type)) {\n            var len = type.length;\n            var keys = new Array(len);\n            for (var i = 0; i < len; ++i) {\n                keys[i] = listen(this, type[i], listener);\n            }\n            return keys;\n        }\n        else {\n            return listen(this, /** @type {string} */ (type), listener);\n        }\n    };\n    /**\n     * @param {string|Array<string>} type Type.\n     * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n     * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n     * @protected\n     */\n    Observable.prototype.onceInternal = function (type, listener) {\n        var key;\n        if (Array.isArray(type)) {\n            var len = type.length;\n            key = new Array(len);\n            for (var i = 0; i < len; ++i) {\n                key[i] = listenOnce(this, type[i], listener);\n            }\n        }\n        else {\n            key = listenOnce(this, /** @type {string} */ (type), listener);\n        }\n        /** @type {Object} */ (listener).ol_key = key;\n        return key;\n    };\n    /**\n     * Unlisten for a certain type of event.\n     * @param {string|Array<string>} type Type.\n     * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n     * @protected\n     */\n    Observable.prototype.unInternal = function (type, listener) {\n        var key = /** @type {Object} */ (listener).ol_key;\n        if (key) {\n            unByKey(key);\n        }\n        else if (Array.isArray(type)) {\n            for (var i = 0, ii = type.length; i < ii; ++i) {\n                this.removeEventListener(type[i], listener);\n            }\n        }\n        else {\n            this.removeEventListener(type, listener);\n        }\n    };\n    return Observable;\n}(EventTarget));\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n    if (Array.isArray(key)) {\n        for (var i = 0, ii = key.length; i < ii; ++i) {\n            unlistenByKey(key[i]);\n        }\n    }\n    else {\n        unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n    }\n}\nexport default Observable;\n//# sourceMappingURL=Observable.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport { assign, isEmpty } from './obj.js';\nimport { getUid } from './util.js';\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nvar ObjectEvent = /** @class */ (function (_super) {\n    __extends(ObjectEvent, _super);\n    /**\n     * @param {string} type The event type.\n     * @param {string} key The property name.\n     * @param {*} oldValue The old value for `key`.\n     */\n    function ObjectEvent(type, key, oldValue) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The name of the property whose value is changing.\n         * @type {string}\n         * @api\n         */\n        _this.key = key;\n        /**\n         * The old value. To get the new value use `e.target.get(e.key)` where\n         * `e` is the event object.\n         * @type {*}\n         * @api\n         */\n        _this.oldValue = oldValue;\n        return _this;\n    }\n    return ObjectEvent;\n}(Event));\nexport { ObjectEvent };\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nvar BaseObject = /** @class */ (function (_super) {\n    __extends(BaseObject, _super);\n    /**\n     * @param {Object<string, *>} [opt_values] An object with key-value pairs.\n     */\n    function BaseObject(opt_values) {\n        var _this = _super.call(this) || this;\n        /***\n         * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n         */\n        _this.on;\n        /***\n         * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n         */\n        _this.once;\n        /***\n         * @type {ObjectOnSignature<void>}\n         */\n        _this.un;\n        // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n        // the same as the order in which they were created.  This also helps to\n        // ensure that object properties are always added in the same order, which\n        // helps many JavaScript engines generate faster code.\n        getUid(_this);\n        /**\n         * @private\n         * @type {Object<string, *>}\n         */\n        _this.values_ = null;\n        if (opt_values !== undefined) {\n            _this.setProperties(opt_values);\n        }\n        return _this;\n    }\n    /**\n     * Gets a value.\n     * @param {string} key Key name.\n     * @return {*} Value.\n     * @api\n     */\n    BaseObject.prototype.get = function (key) {\n        var value;\n        if (this.values_ && this.values_.hasOwnProperty(key)) {\n            value = this.values_[key];\n        }\n        return value;\n    };\n    /**\n     * Get a list of object property names.\n     * @return {Array<string>} List of property names.\n     * @api\n     */\n    BaseObject.prototype.getKeys = function () {\n        return (this.values_ && Object.keys(this.values_)) || [];\n    };\n    /**\n     * Get an object of all property names and values.\n     * @return {Object<string, *>} Object.\n     * @api\n     */\n    BaseObject.prototype.getProperties = function () {\n        return (this.values_ && assign({}, this.values_)) || {};\n    };\n    /**\n     * @return {boolean} The object has properties.\n     */\n    BaseObject.prototype.hasProperties = function () {\n        return !!this.values_;\n    };\n    /**\n     * @param {string} key Key name.\n     * @param {*} oldValue Old value.\n     */\n    BaseObject.prototype.notify = function (key, oldValue) {\n        var eventType;\n        eventType = \"change:\" + key;\n        this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n        eventType = ObjectEventType.PROPERTYCHANGE;\n        this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    };\n    /**\n     * @param {string} key Key name.\n     * @param {import(\"./events.js\").Listener} listener Listener.\n     */\n    BaseObject.prototype.addChangeListener = function (key, listener) {\n        this.addEventListener(\"change:\" + key, listener);\n    };\n    /**\n     * @param {string} key Key name.\n     * @param {import(\"./events.js\").Listener} listener Listener.\n     */\n    BaseObject.prototype.removeChangeListener = function (key, listener) {\n        this.removeEventListener(\"change:\" + key, listener);\n    };\n    /**\n     * Sets a value.\n     * @param {string} key Key name.\n     * @param {*} value Value.\n     * @param {boolean} [opt_silent] Update without triggering an event.\n     * @api\n     */\n    BaseObject.prototype.set = function (key, value, opt_silent) {\n        var values = this.values_ || (this.values_ = {});\n        if (opt_silent) {\n            values[key] = value;\n        }\n        else {\n            var oldValue = values[key];\n            values[key] = value;\n            if (oldValue !== value) {\n                this.notify(key, oldValue);\n            }\n        }\n    };\n    /**\n     * Sets a collection of key-value pairs.  Note that this changes any existing\n     * properties and adds new ones (it does not remove any existing properties).\n     * @param {Object<string, *>} values Values.\n     * @param {boolean} [opt_silent] Update without triggering an event.\n     * @api\n     */\n    BaseObject.prototype.setProperties = function (values, opt_silent) {\n        for (var key in values) {\n            this.set(key, values[key], opt_silent);\n        }\n    };\n    /**\n     * Apply any properties from another object without triggering events.\n     * @param {BaseObject} source The source object.\n     * @protected\n     */\n    BaseObject.prototype.applyProperties = function (source) {\n        if (!source.values_) {\n            return;\n        }\n        assign(this.values_ || (this.values_ = {}), source.values_);\n    };\n    /**\n     * Unsets a property.\n     * @param {string} key Key name.\n     * @param {boolean} [opt_silent] Unset without triggering an event.\n     * @api\n     */\n    BaseObject.prototype.unset = function (key, opt_silent) {\n        if (this.values_ && key in this.values_) {\n            var oldValue = this.values_[key];\n            delete this.values_[key];\n            if (isEmpty(this.values_)) {\n                this.values_ = null;\n            }\n            if (!opt_silent) {\n                this.notify(key, oldValue);\n            }\n        }\n    };\n    return BaseObject;\n}(Observable));\nexport default BaseObject;\n//# sourceMappingURL=Object.js.map","/**\n * @module ol/CollectionEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when an item is added to the collection.\n     * @event module:ol/Collection.CollectionEvent#add\n     * @api\n     */\n    ADD: 'add',\n    /**\n     * Triggered when an item is removed from the collection.\n     * @event module:ol/Collection.CollectionEvent#remove\n     * @api\n     */\n    REMOVE: 'remove',\n};\n//# sourceMappingURL=CollectionEventType.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n    LENGTH: 'length',\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n */\nvar CollectionEvent = /** @class */ (function (_super) {\n    __extends(CollectionEvent, _super);\n    /**\n     * @param {import(\"./CollectionEventType.js\").default} type Type.\n     * @param {*} [opt_element] Element.\n     * @param {number} [opt_index] The index of the added or removed element.\n     */\n    function CollectionEvent(type, opt_element, opt_index) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The element that is added to or removed from the collection.\n         * @type {*}\n         * @api\n         */\n        _this.element = opt_element;\n        /**\n         * The index of the added or removed element.\n         * @type {number}\n         * @api\n         */\n        _this.index = opt_index;\n        return _this;\n    }\n    return CollectionEvent;\n}(Event));\nexport { CollectionEvent };\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\n *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\n */\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nvar Collection = /** @class */ (function (_super) {\n    __extends(Collection, _super);\n    /**\n     * @param {Array<T>} [opt_array] Array.\n     * @param {Options} [opt_options] Collection options.\n     */\n    function Collection(opt_array, opt_options) {\n        var _this = _super.call(this) || this;\n        /***\n         * @type {CollectionOnSignature<import(\"./events\").EventsKey>}\n         */\n        _this.on;\n        /***\n         * @type {CollectionOnSignature<import(\"./events\").EventsKey>}\n         */\n        _this.once;\n        /***\n         * @type {CollectionOnSignature<void>}\n         */\n        _this.un;\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.unique_ = !!options.unique;\n        /**\n         * @private\n         * @type {!Array<T>}\n         */\n        _this.array_ = opt_array ? opt_array : [];\n        if (_this.unique_) {\n            for (var i = 0, ii = _this.array_.length; i < ii; ++i) {\n                _this.assertUnique_(_this.array_[i], i);\n            }\n        }\n        _this.updateLength_();\n        return _this;\n    }\n    /**\n     * Remove all elements from the collection.\n     * @api\n     */\n    Collection.prototype.clear = function () {\n        while (this.getLength() > 0) {\n            this.pop();\n        }\n    };\n    /**\n     * Add elements to the collection.  This pushes each item in the provided array\n     * to the end of the collection.\n     * @param {!Array<T>} arr Array.\n     * @return {Collection<T>} This collection.\n     * @api\n     */\n    Collection.prototype.extend = function (arr) {\n        for (var i = 0, ii = arr.length; i < ii; ++i) {\n            this.push(arr[i]);\n        }\n        return this;\n    };\n    /**\n     * Iterate over each element, calling the provided callback.\n     * @param {function(T, number, Array<T>): *} f The function to call\n     *     for every element. This function takes 3 arguments (the element, the\n     *     index and the array). The return value is ignored.\n     * @api\n     */\n    Collection.prototype.forEach = function (f) {\n        var array = this.array_;\n        for (var i = 0, ii = array.length; i < ii; ++i) {\n            f(array[i], i, array);\n        }\n    };\n    /**\n     * Get a reference to the underlying Array object. Warning: if the array\n     * is mutated, no events will be dispatched by the collection, and the\n     * collection's \"length\" property won't be in sync with the actual length\n     * of the array.\n     * @return {!Array<T>} Array.\n     * @api\n     */\n    Collection.prototype.getArray = function () {\n        return this.array_;\n    };\n    /**\n     * Get the element at the provided index.\n     * @param {number} index Index.\n     * @return {T} Element.\n     * @api\n     */\n    Collection.prototype.item = function (index) {\n        return this.array_[index];\n    };\n    /**\n     * Get the length of this collection.\n     * @return {number} The length of the array.\n     * @observable\n     * @api\n     */\n    Collection.prototype.getLength = function () {\n        return this.get(Property.LENGTH);\n    };\n    /**\n     * Insert an element at the provided index.\n     * @param {number} index Index.\n     * @param {T} elem Element.\n     * @api\n     */\n    Collection.prototype.insertAt = function (index, elem) {\n        if (this.unique_) {\n            this.assertUnique_(elem);\n        }\n        this.array_.splice(index, 0, elem);\n        this.updateLength_();\n        this.dispatchEvent(new CollectionEvent(CollectionEventType.ADD, elem, index));\n    };\n    /**\n     * Remove the last element of the collection and return it.\n     * Return `undefined` if the collection is empty.\n     * @return {T|undefined} Element.\n     * @api\n     */\n    Collection.prototype.pop = function () {\n        return this.removeAt(this.getLength() - 1);\n    };\n    /**\n     * Insert the provided element at the end of the collection.\n     * @param {T} elem Element.\n     * @return {number} New length of the collection.\n     * @api\n     */\n    Collection.prototype.push = function (elem) {\n        if (this.unique_) {\n            this.assertUnique_(elem);\n        }\n        var n = this.getLength();\n        this.insertAt(n, elem);\n        return this.getLength();\n    };\n    /**\n     * Remove the first occurrence of an element from the collection.\n     * @param {T} elem Element.\n     * @return {T|undefined} The removed element or undefined if none found.\n     * @api\n     */\n    Collection.prototype.remove = function (elem) {\n        var arr = this.array_;\n        for (var i = 0, ii = arr.length; i < ii; ++i) {\n            if (arr[i] === elem) {\n                return this.removeAt(i);\n            }\n        }\n        return undefined;\n    };\n    /**\n     * Remove the element at the provided index and return it.\n     * Return `undefined` if the collection does not contain this index.\n     * @param {number} index Index.\n     * @return {T|undefined} Value.\n     * @api\n     */\n    Collection.prototype.removeAt = function (index) {\n        var prev = this.array_[index];\n        this.array_.splice(index, 1);\n        this.updateLength_();\n        this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE, prev, index));\n        return prev;\n    };\n    /**\n     * Set the element at the provided index.\n     * @param {number} index Index.\n     * @param {T} elem Element.\n     * @api\n     */\n    Collection.prototype.setAt = function (index, elem) {\n        var n = this.getLength();\n        if (index < n) {\n            if (this.unique_) {\n                this.assertUnique_(elem, index);\n            }\n            var prev = this.array_[index];\n            this.array_[index] = elem;\n            this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE, prev, index));\n            this.dispatchEvent(new CollectionEvent(CollectionEventType.ADD, elem, index));\n        }\n        else {\n            for (var j = n; j < index; ++j) {\n                this.insertAt(j, undefined);\n            }\n            this.insertAt(index, elem);\n        }\n    };\n    /**\n     * @private\n     */\n    Collection.prototype.updateLength_ = function () {\n        this.set(Property.LENGTH, this.array_.length);\n    };\n    /**\n     * @private\n     * @param {T} elem Element.\n     * @param {number} [opt_except] Optional index to ignore.\n     */\n    Collection.prototype.assertUnique_ = function (elem, opt_except) {\n        for (var i = 0, ii = this.array_.length; i < ii; ++i) {\n            if (this.array_[i] === elem && i !== opt_except) {\n                throw new AssertionError(58);\n            }\n        }\n    };\n    return Collection;\n}(BaseObject));\nexport default Collection;\n//# sourceMappingURL=Collection.js.map","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n    if (!assertion) {\n        throw new AssertionError(errorCode);\n    }\n}\n//# sourceMappingURL=asserts.js.map","/**\n * @module ol/geom/GeometryLayout\n */\n/**\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\n * @enum {string}\n */\nexport default {\n    XY: 'XY',\n    XYZ: 'XYZ',\n    XYM: 'XYM',\n    XYZM: 'XYZM',\n};\n//# sourceMappingURL=GeometryLayout.js.map","/**\n * @module ol/geom/GeometryType\n */\n/**\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, `'Circle'`.\n * @enum {string}\n */\nexport default {\n    POINT: 'Point',\n    LINE_STRING: 'LineString',\n    LINEAR_RING: 'LinearRing',\n    POLYGON: 'Polygon',\n    MULTI_POINT: 'MultiPoint',\n    MULTI_LINE_STRING: 'MultiLineString',\n    MULTI_POLYGON: 'MultiPolygon',\n    GEOMETRY_COLLECTION: 'GeometryCollection',\n    CIRCLE: 'Circle',\n};\n//# sourceMappingURL=GeometryType.js.map","/**\n * @module ol/proj/Units\n */\n/**\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\n * `'us-ft'`.\n * @enum {string}\n */\nvar Units = {\n    /**\n     * Radians\n     * @api\n     */\n    RADIANS: 'radians',\n    /**\n     * Degrees\n     * @api\n     */\n    DEGREES: 'degrees',\n    /**\n     * Feet\n     * @api\n     */\n    FEET: 'ft',\n    /**\n     * Meters\n     * @api\n     */\n    METERS: 'm',\n    /**\n     * Pixels\n     * @api\n     */\n    PIXELS: 'pixels',\n    /**\n     * Tile Pixels\n     * @api\n     */\n    TILE_PIXELS: 'tile-pixels',\n    /**\n     * US Feet\n     * @api\n     */\n    USFEET: 'us-ft',\n};\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nvar unitByCode = {\n    '9001': Units.METERS,\n    '9002': Units.FEET,\n    '9003': Units.USFEET,\n    '9101': Units.RADIANS,\n    '9102': Units.DEGREES,\n};\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n    return unitByCode[code];\n}\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object<Units, number>}\n * @api\n */\nexport var METERS_PER_UNIT = {};\n// use the radius of the Normal sphere\nMETERS_PER_UNIT[Units.RADIANS] = 6370997 / (2 * Math.PI);\nMETERS_PER_UNIT[Units.DEGREES] = (2 * Math.PI * 6370997) / 360;\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\nMETERS_PER_UNIT[Units.METERS] = 1;\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\nexport default Units;\n//# sourceMappingURL=Units.js.map","/**\n * @module ol/has\n */\nvar ua = typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport var FIREFOX = ua.indexOf('firefox') !== -1;\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport var SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport var WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport var MAC = ua.indexOf('macintosh') !== -1;\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport var DEVICE_PIXEL_RATIO = typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport var WORKER_OFFSCREEN_CANVAS = typeof WorkerGlobalScope !== 'undefined' &&\n    typeof OffscreenCanvas !== 'undefined' &&\n    self instanceof WorkerGlobalScope; //eslint-disable-line\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport var IMAGE_DECODE = typeof Image !== 'undefined' && Image.prototype.decode;\n/**\n * @type {boolean}\n */\nexport var PASSIVE_EVENT_LISTENERS = (function () {\n    var passive = false;\n    try {\n        var options = Object.defineProperty({}, 'passive', {\n            get: function () {\n                passive = true;\n            },\n        });\n        window.addEventListener('_', null, options);\n        window.removeEventListener('_', null, options);\n    }\n    catch (error) {\n        // passive not supported\n    }\n    return passive;\n})();\n//# sourceMappingURL=has.js.map","/**\n * @module ol/transform\n */\nimport { WORKER_OFFSCREEN_CANVAS } from './has.js';\nimport { assert } from './asserts.js';\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n/**\n * @private\n * @type {Transform}\n */\nvar tmp_ = new Array(6);\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n    return [1, 0, 0, 1, 0, 0];\n}\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n    return set(transform, 1, 0, 0, 1, 0, 0);\n}\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n    var a1 = transform1[0];\n    var b1 = transform1[1];\n    var c1 = transform1[2];\n    var d1 = transform1[3];\n    var e1 = transform1[4];\n    var f1 = transform1[5];\n    var a2 = transform2[0];\n    var b2 = transform2[1];\n    var c2 = transform2[2];\n    var d2 = transform2[3];\n    var e2 = transform2[4];\n    var f2 = transform2[5];\n    transform1[0] = a1 * a2 + c1 * b2;\n    transform1[1] = b1 * a2 + d1 * b2;\n    transform1[2] = a1 * c2 + c1 * d2;\n    transform1[3] = b1 * c2 + d1 * d2;\n    transform1[4] = a1 * e2 + c1 * f2 + e1;\n    transform1[5] = b1 * e2 + d1 * f2 + f1;\n    return transform1;\n}\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n    transform[0] = a;\n    transform[1] = b;\n    transform[2] = c;\n    transform[3] = d;\n    transform[4] = e;\n    transform[5] = f;\n    return transform;\n}\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n    transform1[0] = transform2[0];\n    transform1[1] = transform2[1];\n    transform1[2] = transform2[2];\n    transform1[3] = transform2[3];\n    transform1[4] = transform2[4];\n    transform1[5] = transform2[5];\n    return transform1;\n}\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n    var x = coordinate[0];\n    var y = coordinate[1];\n    coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n    coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n    return coordinate;\n}\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n    var cos = Math.cos(angle);\n    var sin = Math.sin(angle);\n    return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n    return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n    return set(target, x, 0, 0, y, 0, 0);\n}\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n    return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n    var sin = Math.sin(angle);\n    var cos = Math.cos(angle);\n    transform[0] = sx * cos;\n    transform[1] = sy * sin;\n    transform[2] = -sx * sin;\n    transform[3] = sy * cos;\n    transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n    transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n    return transform;\n}\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n    return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n    return makeInverse(source, source);\n}\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n    var det = determinant(source);\n    assert(det !== 0, 32); // Transformation matrix cannot be inverted\n    var a = source[0];\n    var b = source[1];\n    var c = source[2];\n    var d = source[3];\n    var e = source[4];\n    var f = source[5];\n    target[0] = d / det;\n    target[1] = -b / det;\n    target[2] = -c / det;\n    target[3] = a / det;\n    target[4] = (c * f - d * e) / det;\n    target[5] = -(a * f - b * e) / det;\n    return target;\n}\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n    return mat[0] * mat[3] - mat[1] * mat[2];\n}\n/**\n * @type {HTMLElement}\n * @private\n */\nvar transformStringDiv;\n/**\n * A rounded string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n    var transformString = 'matrix(' + mat.join(', ') + ')';\n    if (WORKER_OFFSCREEN_CANVAS) {\n        return transformString;\n    }\n    var node = transformStringDiv || (transformStringDiv = document.createElement('div'));\n    node.style.transform = transformString;\n    return node.style.transform;\n}\n//# sourceMappingURL=transform.js.map","/**\n * @module ol/extent/Corner\n */\n/**\n * Extent corner.\n * @enum {string}\n */\nexport default {\n    BOTTOM_LEFT: 'bottom-left',\n    BOTTOM_RIGHT: 'bottom-right',\n    TOP_LEFT: 'top-left',\n    TOP_RIGHT: 'top-right',\n};\n//# sourceMappingURL=Corner.js.map","/**\n * @module ol/extent/Relationship\n */\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n    UNKNOWN: 0,\n    INTERSECTING: 1,\n    ABOVE: 2,\n    RIGHT: 4,\n    BELOW: 8,\n    LEFT: 16,\n};\n//# sourceMappingURL=Relationship.js.map","/**\n * @module ol/extent\n */\nimport Corner from './extent/Corner.js';\nimport Relationship from './extent/Relationship.js';\nimport { assert } from './asserts.js';\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n    var extent = createEmpty();\n    for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        extendCoordinate(extent, coordinates[i]);\n    }\n    return extent;\n}\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [opt_extent] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\n    var minX = Math.min.apply(null, xs);\n    var minY = Math.min.apply(null, ys);\n    var maxX = Math.max.apply(null, xs);\n    var maxY = Math.max.apply(null, ys);\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n}\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = extent[0] - value;\n        opt_extent[1] = extent[1] - value;\n        opt_extent[2] = extent[2] + value;\n        opt_extent[3] = extent[3] + value;\n        return opt_extent;\n    }\n    else {\n        return [\n            extent[0] - value,\n            extent[1] - value,\n            extent[2] + value,\n            extent[3] + value,\n        ];\n    }\n}\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = extent[0];\n        opt_extent[1] = extent[1];\n        opt_extent[2] = extent[2];\n        opt_extent[3] = extent[3];\n        return opt_extent;\n    }\n    else {\n        return extent.slice();\n    }\n}\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n    var dx, dy;\n    if (x < extent[0]) {\n        dx = extent[0] - x;\n    }\n    else if (extent[2] < x) {\n        dx = x - extent[2];\n    }\n    else {\n        dx = 0;\n    }\n    if (y < extent[1]) {\n        dy = extent[1] - y;\n    }\n    else if (extent[3] < y) {\n        dy = y - extent[3];\n    }\n    else {\n        dy = 0;\n    }\n    return dx * dx + dy * dy;\n}\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n    return containsXY(extent, coordinate[0], coordinate[1]);\n}\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n    return (extent1[0] <= extent2[0] &&\n        extent2[2] <= extent1[2] &&\n        extent1[1] <= extent2[1] &&\n        extent2[3] <= extent1[3]);\n}\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n    return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n    var minX = extent[0];\n    var minY = extent[1];\n    var maxX = extent[2];\n    var maxY = extent[3];\n    var x = coordinate[0];\n    var y = coordinate[1];\n    var relationship = Relationship.UNKNOWN;\n    if (x < minX) {\n        relationship = relationship | Relationship.LEFT;\n    }\n    else if (x > maxX) {\n        relationship = relationship | Relationship.RIGHT;\n    }\n    if (y < minY) {\n        relationship = relationship | Relationship.BELOW;\n    }\n    else if (y > maxY) {\n        relationship = relationship | Relationship.ABOVE;\n    }\n    if (relationship === Relationship.UNKNOWN) {\n        relationship = Relationship.INTERSECTING;\n    }\n    return relationship;\n}\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n    return [Infinity, Infinity, -Infinity, -Infinity];\n}\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [opt_extent] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = minX;\n        opt_extent[1] = minY;\n        opt_extent[2] = maxX;\n        opt_extent[3] = maxY;\n        return opt_extent;\n    }\n    else {\n        return [minX, minY, maxX, maxY];\n    }\n}\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(opt_extent) {\n    return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n}\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\n    var x = coordinate[0];\n    var y = coordinate[1];\n    return createOrUpdate(x, y, x, y, opt_extent);\n}\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\n    var extent = createOrUpdateEmpty(opt_extent);\n    return extendCoordinates(extent, coordinates);\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(flatCoordinates, offset, end, stride, opt_extent) {\n    var extent = createOrUpdateEmpty(opt_extent);\n    return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, opt_extent) {\n    var extent = createOrUpdateEmpty(opt_extent);\n    return extendRings(extent, rings);\n}\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n    return (extent1[0] == extent2[0] &&\n        extent1[2] == extent2[2] &&\n        extent1[1] == extent2[1] &&\n        extent1[3] == extent2[3]);\n}\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n    return (Math.abs(extent1[0] - extent2[0]) < tolerance &&\n        Math.abs(extent1[2] - extent2[2]) < tolerance &&\n        Math.abs(extent1[1] - extent2[1]) < tolerance &&\n        Math.abs(extent1[3] - extent2[3]) < tolerance);\n}\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n    if (extent2[0] < extent1[0]) {\n        extent1[0] = extent2[0];\n    }\n    if (extent2[2] > extent1[2]) {\n        extent1[2] = extent2[2];\n    }\n    if (extent2[1] < extent1[1]) {\n        extent1[1] = extent2[1];\n    }\n    if (extent2[3] > extent1[3]) {\n        extent1[3] = extent2[3];\n    }\n    return extent1;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n    if (coordinate[0] < extent[0]) {\n        extent[0] = coordinate[0];\n    }\n    if (coordinate[0] > extent[2]) {\n        extent[2] = coordinate[0];\n    }\n    if (coordinate[1] < extent[1]) {\n        extent[1] = coordinate[1];\n    }\n    if (coordinate[1] > extent[3]) {\n        extent[3] = coordinate[1];\n    }\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n    for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        extendCoordinate(extent, coordinates[i]);\n    }\n    return extent;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(extent, flatCoordinates, offset, end, stride) {\n    for (; offset < end; offset += stride) {\n        extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n    }\n    return extent;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n    for (var i = 0, ii = rings.length; i < ii; ++i) {\n        extendCoordinates(extent, rings[i]);\n    }\n    return extent;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n    extent[0] = Math.min(extent[0], x);\n    extent[1] = Math.min(extent[1], y);\n    extent[2] = Math.max(extent[2], x);\n    extent[3] = Math.max(extent[3], y);\n}\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n    var val;\n    val = callback(getBottomLeft(extent));\n    if (val) {\n        return val;\n    }\n    val = callback(getBottomRight(extent));\n    if (val) {\n        return val;\n    }\n    val = callback(getTopRight(extent));\n    if (val) {\n        return val;\n    }\n    val = callback(getTopLeft(extent));\n    if (val) {\n        return val;\n    }\n    return false;\n}\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n    var area = 0;\n    if (!isEmpty(extent)) {\n        area = getWidth(extent) * getHeight(extent);\n    }\n    return area;\n}\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n    return [extent[0], extent[1]];\n}\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n    return [extent[2], extent[1]];\n}\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n    return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./extent/Corner.js\").default} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n    var coordinate;\n    if (corner === Corner.BOTTOM_LEFT) {\n        coordinate = getBottomLeft(extent);\n    }\n    else if (corner === Corner.BOTTOM_RIGHT) {\n        coordinate = getBottomRight(extent);\n    }\n    else if (corner === Corner.TOP_LEFT) {\n        coordinate = getTopLeft(extent);\n    }\n    else if (corner === Corner.TOP_RIGHT) {\n        coordinate = getTopRight(extent);\n    }\n    else {\n        assert(false, 13); // Invalid corner\n    }\n    return coordinate;\n}\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n    var minX = Math.min(extent1[0], extent2[0]);\n    var minY = Math.min(extent1[1], extent2[1]);\n    var maxX = Math.max(extent1[2], extent2[2]);\n    var maxY = Math.max(extent1[3], extent2[3]);\n    return (maxX - minX) * (maxY - minY);\n}\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [opt_extent] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, opt_extent) {\n    var dx = (resolution * size[0]) / 2;\n    var dy = (resolution * size[1]) / 2;\n    var cosRotation = Math.cos(rotation);\n    var sinRotation = Math.sin(rotation);\n    var xCos = dx * cosRotation;\n    var xSin = dx * sinRotation;\n    var yCos = dy * cosRotation;\n    var ySin = dy * sinRotation;\n    var x = center[0];\n    var y = center[1];\n    var x0 = x - xCos + ySin;\n    var x1 = x - xCos - ySin;\n    var x2 = x + xCos - ySin;\n    var x3 = x + xCos + ySin;\n    var y0 = y - xSin - yCos;\n    var y1 = y - xSin + yCos;\n    var y2 = y + xSin + yCos;\n    var y3 = y + xSin - yCos;\n    return createOrUpdate(Math.min(x0, x1, x2, x3), Math.min(y0, y1, y2, y3), Math.max(x0, x1, x2, x3), Math.max(y0, y1, y2, y3), opt_extent);\n}\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n    return extent[3] - extent[1];\n}\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n    var intersection = getIntersection(extent1, extent2);\n    return getArea(intersection);\n}\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [opt_extent] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, opt_extent) {\n    var intersection = opt_extent ? opt_extent : createEmpty();\n    if (intersects(extent1, extent2)) {\n        if (extent1[0] > extent2[0]) {\n            intersection[0] = extent1[0];\n        }\n        else {\n            intersection[0] = extent2[0];\n        }\n        if (extent1[1] > extent2[1]) {\n            intersection[1] = extent1[1];\n        }\n        else {\n            intersection[1] = extent2[1];\n        }\n        if (extent1[2] < extent2[2]) {\n            intersection[2] = extent1[2];\n        }\n        else {\n            intersection[2] = extent2[2];\n        }\n        if (extent1[3] < extent2[3]) {\n            intersection[3] = extent1[3];\n        }\n        else {\n            intersection[3] = extent2[3];\n        }\n    }\n    else {\n        createOrUpdateEmpty(intersection);\n    }\n    return intersection;\n}\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n    return getWidth(extent) + getHeight(extent);\n}\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n    return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n    return [extent[0], extent[3]];\n}\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n    return [extent[2], extent[3]];\n}\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n    return extent[2] - extent[0];\n}\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n    return (extent1[0] <= extent2[2] &&\n        extent1[2] >= extent2[0] &&\n        extent1[1] <= extent2[3] &&\n        extent1[3] >= extent2[1]);\n}\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n    return extent[2] < extent[0] || extent[3] < extent[1];\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = extent[0];\n        opt_extent[1] = extent[1];\n        opt_extent[2] = extent[2];\n        opt_extent[3] = extent[3];\n        return opt_extent;\n    }\n    else {\n        return extent;\n    }\n}\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n    var deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n    var deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n    extent[0] -= deltaX;\n    extent[2] += deltaX;\n    extent[1] -= deltaY;\n    extent[3] += deltaY;\n}\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n    var intersects = false;\n    var startRel = coordinateRelationship(extent, start);\n    var endRel = coordinateRelationship(extent, end);\n    if (startRel === Relationship.INTERSECTING ||\n        endRel === Relationship.INTERSECTING) {\n        intersects = true;\n    }\n    else {\n        var minX = extent[0];\n        var minY = extent[1];\n        var maxX = extent[2];\n        var maxY = extent[3];\n        var startX = start[0];\n        var startY = start[1];\n        var endX = end[0];\n        var endY = end[1];\n        var slope = (endY - startY) / (endX - startX);\n        var x = void 0, y = void 0;\n        if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n            // potentially intersects top\n            x = endX - (endY - maxY) / slope;\n            intersects = x >= minX && x <= maxX;\n        }\n        if (!intersects &&\n            !!(endRel & Relationship.RIGHT) &&\n            !(startRel & Relationship.RIGHT)) {\n            // potentially intersects right\n            y = endY - (endX - maxX) * slope;\n            intersects = y >= minY && y <= maxY;\n        }\n        if (!intersects &&\n            !!(endRel & Relationship.BELOW) &&\n            !(startRel & Relationship.BELOW)) {\n            // potentially intersects bottom\n            x = endX - (endY - minY) / slope;\n            intersects = x >= minX && x <= maxX;\n        }\n        if (!intersects &&\n            !!(endRel & Relationship.LEFT) &&\n            !(startRel & Relationship.LEFT)) {\n            // potentially intersects left\n            y = endY - (endX - minX) * slope;\n            intersects = y >= minY && y <= maxY;\n        }\n    }\n    return intersects;\n}\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [opt_extent] Destination extent.\n * @param {number} [opt_stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, opt_extent, opt_stops) {\n    var coordinates = [];\n    if (opt_stops > 1) {\n        var width = extent[2] - extent[0];\n        var height = extent[3] - extent[1];\n        for (var i = 0; i < opt_stops; ++i) {\n            coordinates.push(extent[0] + (width * i) / opt_stops, extent[1], extent[2], extent[1] + (height * i) / opt_stops, extent[2] - (width * i) / opt_stops, extent[3], extent[0], extent[3] - (height * i) / opt_stops);\n        }\n    }\n    else {\n        coordinates = [\n            extent[0],\n            extent[1],\n            extent[2],\n            extent[1],\n            extent[2],\n            extent[3],\n            extent[0],\n            extent[3],\n        ];\n    }\n    transformFn(coordinates, coordinates, 2);\n    var xs = [];\n    var ys = [];\n    for (var i = 0, l = coordinates.length; i < l; i += 2) {\n        xs.push(coordinates[i]);\n        ys.push(coordinates[i + 1]);\n    }\n    return _boundingExtentXYs(xs, ys, opt_extent);\n}\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n    var projectionExtent = projection.getExtent();\n    var center = getCenter(extent);\n    if (projection.canWrapX() &&\n        (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])) {\n        var worldWidth = getWidth(projectionExtent);\n        var worldsAway = Math.floor((center[0] - projectionExtent[0]) / worldWidth);\n        var offset = worldsAway * worldWidth;\n        extent[0] -= offset;\n        extent[2] -= offset;\n    }\n    return extent;\n}\n//# sourceMappingURL=extent.js.map","/**\n * @module ol/proj/Projection\n */\nimport { METERS_PER_UNIT } from './Units.js';\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").default|string} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution getPointResolution()} function will be used.\n */\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj.get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4.register} function.\n *\n * @api\n */\nvar Projection = /** @class */ (function () {\n    /**\n     * @param {Options} options Projection options.\n     */\n    function Projection(options) {\n        /**\n         * @private\n         * @type {string}\n         */\n        this.code_ = options.code;\n        /**\n         * Units of projected coordinates. When set to `TILE_PIXELS`, a\n         * `this.extent_` and `this.worldExtent_` must be configured properly for each\n         * tile.\n         * @private\n         * @type {import(\"./Units.js\").default}\n         */\n        this.units_ = /** @type {import(\"./Units.js\").default} */ (options.units);\n        /**\n         * Validity extent of the projection in projected coordinates. For projections\n         * with `TILE_PIXELS` units, this is the extent of the tile in\n         * tile pixel space.\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        this.extent_ = options.extent !== undefined ? options.extent : null;\n        /**\n         * Extent of the world in EPSG:4326. For projections with\n         * `TILE_PIXELS` units, this is the extent of the tile in\n         * projected coordinate space.\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        this.worldExtent_ =\n            options.worldExtent !== undefined ? options.worldExtent : null;\n        /**\n         * @private\n         * @type {string}\n         */\n        this.axisOrientation_ =\n            options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.global_ = options.global !== undefined ? options.global : false;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.canWrapX_ = !!(this.global_ && this.extent_);\n        /**\n         * @private\n         * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n         */\n        this.getPointResolutionFunc_ = options.getPointResolution;\n        /**\n         * @private\n         * @type {import(\"../tilegrid/TileGrid.js\").default}\n         */\n        this.defaultTileGrid_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.metersPerUnit_ = options.metersPerUnit;\n    }\n    /**\n     * @return {boolean} The projection is suitable for wrapping the x-axis\n     */\n    Projection.prototype.canWrapX = function () {\n        return this.canWrapX_;\n    };\n    /**\n     * Get the code for this projection, e.g. 'EPSG:4326'.\n     * @return {string} Code.\n     * @api\n     */\n    Projection.prototype.getCode = function () {\n        return this.code_;\n    };\n    /**\n     * Get the validity extent for this projection.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    Projection.prototype.getExtent = function () {\n        return this.extent_;\n    };\n    /**\n     * Get the units of this projection.\n     * @return {import(\"./Units.js\").default} Units.\n     * @api\n     */\n    Projection.prototype.getUnits = function () {\n        return this.units_;\n    };\n    /**\n     * Get the amount of meters per unit of this projection.  If the projection is\n     * not configured with `metersPerUnit` or a units identifier, the return is\n     * `undefined`.\n     * @return {number|undefined} Meters.\n     * @api\n     */\n    Projection.prototype.getMetersPerUnit = function () {\n        return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n    };\n    /**\n     * Get the world extent for this projection.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    Projection.prototype.getWorldExtent = function () {\n        return this.worldExtent_;\n    };\n    /**\n     * Get the axis orientation of this projection.\n     * Example values are:\n     * enu - the default easting, northing, elevation.\n     * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n     *     or south orientated transverse mercator.\n     * wnu - westing, northing, up - some planetary coordinate systems have\n     *     \"west positive\" coordinate systems\n     * @return {string} Axis orientation.\n     * @api\n     */\n    Projection.prototype.getAxisOrientation = function () {\n        return this.axisOrientation_;\n    };\n    /**\n     * Is this projection a global projection which spans the whole world?\n     * @return {boolean} Whether the projection is global.\n     * @api\n     */\n    Projection.prototype.isGlobal = function () {\n        return this.global_;\n    };\n    /**\n     * Set if the projection is a global projection which spans the whole world\n     * @param {boolean} global Whether the projection is global.\n     * @api\n     */\n    Projection.prototype.setGlobal = function (global) {\n        this.global_ = global;\n        this.canWrapX_ = !!(global && this.extent_);\n    };\n    /**\n     * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n     */\n    Projection.prototype.getDefaultTileGrid = function () {\n        return this.defaultTileGrid_;\n    };\n    /**\n     * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n     */\n    Projection.prototype.setDefaultTileGrid = function (tileGrid) {\n        this.defaultTileGrid_ = tileGrid;\n    };\n    /**\n     * Set the validity extent for this projection.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @api\n     */\n    Projection.prototype.setExtent = function (extent) {\n        this.extent_ = extent;\n        this.canWrapX_ = !!(this.global_ && extent);\n    };\n    /**\n     * Set the world extent for this projection.\n     * @param {import(\"../extent.js\").Extent} worldExtent World extent\n     *     [minlon, minlat, maxlon, maxlat].\n     * @api\n     */\n    Projection.prototype.setWorldExtent = function (worldExtent) {\n        this.worldExtent_ = worldExtent;\n    };\n    /**\n     * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n     * for this projection.\n     * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n     * @api\n     */\n    Projection.prototype.setGetPointResolution = function (func) {\n        this.getPointResolutionFunc_ = func;\n    };\n    /**\n     * Get the custom point resolution function for this projection (if set).\n     * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n     * resolution function (if set).\n     */\n    Projection.prototype.getPointResolutionFunc = function () {\n        return this.getPointResolutionFunc_;\n    };\n    return Projection;\n}());\nexport default Projection;\n//# sourceMappingURL=Projection.js.map","/**\n * @module ol/math\n */\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n    return Math.min(Math.max(value, min), max);\n}\n/**\n * Return the hyperbolic cosine of a given number. The method will use the\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\n * cosine will be calculated via the reference implementation of the Mozilla\n * developer network.\n *\n * @param {number} x X.\n * @return {number} Hyperbolic cosine of x.\n */\nexport var cosh = (function () {\n    // Wrapped in a iife, to save the overhead of checking for the native\n    // implementation on every invocation.\n    var cosh;\n    if ('cosh' in Math) {\n        // The environment supports the native Math.cosh function, use it…\n        cosh = Math.cosh;\n    }\n    else {\n        // … else, use the reference implementation of MDN:\n        cosh = function (x) {\n            var y = /** @type {Math} */ (Math).exp(x);\n            return (y + 1 / y) / 2;\n        };\n    }\n    return cosh;\n})();\n/**\n * Return the base 2 logarithm of a given number. The method will use the\n * native `Math.log2` function if it is available, otherwise the base 2\n * logarithm will be calculated via the reference implementation of the\n * Mozilla developer network.\n *\n * @param {number} x X.\n * @return {number} Base 2 logarithm of x.\n */\nexport var log2 = (function () {\n    // Wrapped in a iife, to save the overhead of checking for the native\n    // implementation on every invocation.\n    var log2;\n    if ('log2' in Math) {\n        // The environment supports the native Math.log2 function, use it…\n        log2 = Math.log2;\n    }\n    else {\n        // … else, use the reference implementation of MDN:\n        log2 = function (x) {\n            return Math.log(x) * Math.LOG2E;\n        };\n    }\n    return log2;\n})();\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n    var dx = x2 - x1;\n    var dy = y2 - y1;\n    if (dx !== 0 || dy !== 0) {\n        var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n        if (t > 1) {\n            x1 = x2;\n            y1 = y2;\n        }\n        else if (t > 0) {\n            x1 += dx * t;\n            y1 += dy * t;\n        }\n    }\n    return squaredDistance(x, y, x1, y1);\n}\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n    var dx = x2 - x1;\n    var dy = y2 - y1;\n    return dx * dx + dy * dy;\n}\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n    var n = mat.length;\n    for (var i = 0; i < n; i++) {\n        // Find max in the i-th column (ignoring i - 1 first rows)\n        var maxRow = i;\n        var maxEl = Math.abs(mat[i][i]);\n        for (var r = i + 1; r < n; r++) {\n            var absValue = Math.abs(mat[r][i]);\n            if (absValue > maxEl) {\n                maxEl = absValue;\n                maxRow = r;\n            }\n        }\n        if (maxEl === 0) {\n            return null; // matrix is singular\n        }\n        // Swap max row with i-th (current) row\n        var tmp = mat[maxRow];\n        mat[maxRow] = mat[i];\n        mat[i] = tmp;\n        // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n        for (var j = i + 1; j < n; j++) {\n            var coef = -mat[j][i] / mat[i][i];\n            for (var k = i; k < n + 1; k++) {\n                if (i == k) {\n                    mat[j][k] = 0;\n                }\n                else {\n                    mat[j][k] += coef * mat[i][k];\n                }\n            }\n        }\n    }\n    // Solve Ax=b for upper triangular matrix A (mat)\n    var x = new Array(n);\n    for (var l = n - 1; l >= 0; l--) {\n        x[l] = mat[l][n] / mat[l][l];\n        for (var m = l - 1; m >= 0; m--) {\n            mat[m][n] -= mat[m][l] * x[l];\n        }\n    }\n    return x;\n}\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n    return (angleInRadians * 180) / Math.PI;\n}\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n    return (angleInDegrees * Math.PI) / 180;\n}\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n    var r = a % b;\n    return r * b < 0 ? r + b : r;\n}\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n    return a + x * (b - a);\n}\n//# sourceMappingURL=math.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\nimport { cosh } from '../math.js';\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport var RADIUS = 6378137;\n/**\n * @const\n * @type {number}\n */\nexport var HALF_SIZE = Math.PI * RADIUS;\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var WORLD_EXTENT = [-180, -85, 180, 85];\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport var MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nvar EPSG3857Projection = /** @class */ (function (_super) {\n    __extends(EPSG3857Projection, _super);\n    /**\n     * @param {string} code Code.\n     */\n    function EPSG3857Projection(code) {\n        return _super.call(this, {\n            code: code,\n            units: Units.METERS,\n            extent: EXTENT,\n            global: true,\n            worldExtent: WORLD_EXTENT,\n            getPointResolution: function (resolution, point) {\n                return resolution / cosh(point[1] / RADIUS);\n            },\n        }) || this;\n    }\n    return EPSG3857Projection;\n}(Projection));\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport var PROJECTIONS = [\n    new EPSG3857Projection('EPSG:3857'),\n    new EPSG3857Projection('EPSG:102100'),\n    new EPSG3857Projection('EPSG:102113'),\n    new EPSG3857Projection('EPSG:900913'),\n    new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n    new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\n    var length = input.length;\n    var dimension = opt_dimension > 1 ? opt_dimension : 2;\n    var output = opt_output;\n    if (output === undefined) {\n        if (dimension > 2) {\n            // preserve values beyond second dimension\n            output = input.slice();\n        }\n        else {\n            output = new Array(length);\n        }\n    }\n    for (var i = 0; i < length; i += dimension) {\n        output[i] = (HALF_SIZE * input[i]) / 180;\n        var y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n        if (y > MAX_SAFE_Y) {\n            y = MAX_SAFE_Y;\n        }\n        else if (y < -MAX_SAFE_Y) {\n            y = -MAX_SAFE_Y;\n        }\n        output[i + 1] = y;\n    }\n    return output;\n}\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, opt_output, opt_dimension) {\n    var length = input.length;\n    var dimension = opt_dimension > 1 ? opt_dimension : 2;\n    var output = opt_output;\n    if (output === undefined) {\n        if (dimension > 2) {\n            // preserve values beyond second dimension\n            output = input.slice();\n        }\n        else {\n            output = new Array(length);\n        }\n    }\n    for (var i = 0; i < length; i += dimension) {\n        output[i] = (180 * input[i]) / HALF_SIZE;\n        output[i + 1] =\n            (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n    }\n    return output;\n}\n//# sourceMappingURL=epsg3857.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport var RADIUS = 6378137;\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var EXTENT = [-180, -90, 180, 90];\n/**\n * @const\n * @type {number}\n */\nexport var METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nvar EPSG4326Projection = /** @class */ (function (_super) {\n    __extends(EPSG4326Projection, _super);\n    /**\n     * @param {string} code Code.\n     * @param {string} [opt_axisOrientation] Axis orientation.\n     */\n    function EPSG4326Projection(code, opt_axisOrientation) {\n        return _super.call(this, {\n            code: code,\n            units: Units.DEGREES,\n            extent: EXTENT,\n            axisOrientation: opt_axisOrientation,\n            global: true,\n            metersPerUnit: METERS_PER_UNIT,\n            worldExtent: EXTENT,\n        }) || this;\n    }\n    return EPSG4326Projection;\n}(Projection));\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport var PROJECTIONS = [\n    new EPSG4326Projection('CRS:84'),\n    new EPSG4326Projection('EPSG:4326', 'neu'),\n    new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n    new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n    new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84', 'neu'),\n    new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n    new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n//# sourceMappingURL=epsg4326.js.map","/**\n * @module ol/proj/projections\n */\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nvar cache = {};\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n    cache = {};\n}\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n    return (cache[code] ||\n        cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n        null);\n}\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n    cache[code] = projection;\n}\n//# sourceMappingURL=projections.js.map","/**\n * @module ol/proj/transforms\n */\nimport { isEmpty } from '../obj.js';\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nvar transforms = {};\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n    transforms = {};\n}\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n    var sourceCode = source.getCode();\n    var destinationCode = destination.getCode();\n    if (!(sourceCode in transforms)) {\n        transforms[sourceCode] = {};\n    }\n    transforms[sourceCode][destinationCode] = transformFn;\n}\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n    var sourceCode = source.getCode();\n    var destinationCode = destination.getCode();\n    var transform = transforms[sourceCode][destinationCode];\n    delete transforms[sourceCode][destinationCode];\n    if (isEmpty(transforms[sourceCode])) {\n        delete transforms[sourceCode];\n    }\n    return transform;\n}\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n    var transform;\n    if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n        transform = transforms[sourceCode][destinationCode];\n    }\n    return transform;\n}\n//# sourceMappingURL=transforms.js.map","/**\n * @module ol/sphere\n */\nimport GeometryType from './geom/GeometryType.js';\nimport { toDegrees, toRadians } from './math.js';\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport var DEFAULT_RADIUS = 6371008.8;\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [opt_radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, opt_radius) {\n    var radius = opt_radius || DEFAULT_RADIUS;\n    var lat1 = toRadians(c1[1]);\n    var lat2 = toRadians(c2[1]);\n    var deltaLatBy2 = (lat2 - lat1) / 2;\n    var deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n    var a = Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n        Math.sin(deltaLonBy2) *\n            Math.sin(deltaLonBy2) *\n            Math.cos(lat1) *\n            Math.cos(lat2);\n    return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n    var length = 0;\n    for (var i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n        length += getDistance(coordinates[i], coordinates[i + 1], radius);\n    }\n    return length;\n}\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [opt_options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, opt_options) {\n    var options = opt_options || {};\n    var radius = options.radius || DEFAULT_RADIUS;\n    var projection = options.projection || 'EPSG:3857';\n    var type = geometry.getType();\n    if (type !== GeometryType.GEOMETRY_COLLECTION) {\n        geometry = geometry.clone().transform(projection, 'EPSG:4326');\n    }\n    var length = 0;\n    var coordinates, coords, i, ii, j, jj;\n    switch (type) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT: {\n            break;\n        }\n        case GeometryType.LINE_STRING:\n        case GeometryType.LINEAR_RING: {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            length = getLengthInternal(coordinates, radius);\n            break;\n        }\n        case GeometryType.MULTI_LINE_STRING:\n        case GeometryType.POLYGON: {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            for (i = 0, ii = coordinates.length; i < ii; ++i) {\n                length += getLengthInternal(coordinates[i], radius);\n            }\n            break;\n        }\n        case GeometryType.MULTI_POLYGON: {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            for (i = 0, ii = coordinates.length; i < ii; ++i) {\n                coords = coordinates[i];\n                for (j = 0, jj = coords.length; j < jj; ++j) {\n                    length += getLengthInternal(coords[j], radius);\n                }\n            }\n            break;\n        }\n        case GeometryType.GEOMETRY_COLLECTION: {\n            var geometries = \n            /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n            for (i = 0, ii = geometries.length; i < ii; ++i) {\n                length += getLength(geometries[i], opt_options);\n            }\n            break;\n        }\n        default: {\n            throw new Error('Unsupported geometry type: ' + type);\n        }\n    }\n    return length;\n}\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n    var area = 0;\n    var len = coordinates.length;\n    var x1 = coordinates[len - 1][0];\n    var y1 = coordinates[len - 1][1];\n    for (var i = 0; i < len; i++) {\n        var x2 = coordinates[i][0];\n        var y2 = coordinates[i][1];\n        area +=\n            toRadians(x2 - x1) *\n                (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n        x1 = x2;\n        y1 = y2;\n    }\n    return (area * radius * radius) / 2.0;\n}\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [opt_options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, opt_options) {\n    var options = opt_options || {};\n    var radius = options.radius || DEFAULT_RADIUS;\n    var projection = options.projection || 'EPSG:3857';\n    var type = geometry.getType();\n    if (type !== GeometryType.GEOMETRY_COLLECTION) {\n        geometry = geometry.clone().transform(projection, 'EPSG:4326');\n    }\n    var area = 0;\n    var coordinates, coords, i, ii, j, jj;\n    switch (type) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT:\n        case GeometryType.LINE_STRING:\n        case GeometryType.MULTI_LINE_STRING:\n        case GeometryType.LINEAR_RING: {\n            break;\n        }\n        case GeometryType.POLYGON: {\n            coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (geometry).getCoordinates();\n            area = Math.abs(getAreaInternal(coordinates[0], radius));\n            for (i = 1, ii = coordinates.length; i < ii; ++i) {\n                area -= Math.abs(getAreaInternal(coordinates[i], radius));\n            }\n            break;\n        }\n        case GeometryType.MULTI_POLYGON: {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            for (i = 0, ii = coordinates.length; i < ii; ++i) {\n                coords = coordinates[i];\n                area += Math.abs(getAreaInternal(coords[0], radius));\n                for (j = 1, jj = coords.length; j < jj; ++j) {\n                    area -= Math.abs(getAreaInternal(coords[j], radius));\n                }\n            }\n            break;\n        }\n        case GeometryType.GEOMETRY_COLLECTION: {\n            var geometries = \n            /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n            for (i = 0, ii = geometries.length; i < ii; ++i) {\n                area += getArea(geometries[i], opt_options);\n            }\n            break;\n        }\n        default: {\n            throw new Error('Unsupported geometry type: ' + type);\n        }\n    }\n    return area;\n}\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [opt_radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, opt_radius) {\n    var radius = opt_radius || DEFAULT_RADIUS;\n    var lat1 = toRadians(c1[1]);\n    var lon1 = toRadians(c1[0]);\n    var dByR = distance / radius;\n    var lat = Math.asin(Math.sin(lat1) * Math.cos(dByR) +\n        Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing));\n    var lon = lon1 +\n        Math.atan2(Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1), Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat));\n    return [toDegrees(lon), toDegrees(lat)];\n}\n//# sourceMappingURL=sphere.js.map","/**\n * @module ol/coordinate\n */\nimport { getWidth } from './extent.js';\nimport { modulo } from './math.js';\nimport { padNumber } from './string.js';\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n    coordinate[0] += +delta[0];\n    coordinate[1] += +delta[1];\n    return coordinate;\n}\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n    var r = circle.getRadius();\n    var center = circle.getCenter();\n    var x0 = center[0];\n    var y0 = center[1];\n    var x1 = coordinate[0];\n    var y1 = coordinate[1];\n    var dx = x1 - x0;\n    var dy = y1 - y0;\n    if (dx === 0 && dy === 0) {\n        dx = 1;\n    }\n    var d = Math.sqrt(dx * dx + dy * dy);\n    var x = x0 + (r * dx) / d;\n    var y = y0 + (r * dy) / d;\n    return [x, y];\n}\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n    var x0 = coordinate[0];\n    var y0 = coordinate[1];\n    var start = segment[0];\n    var end = segment[1];\n    var x1 = start[0];\n    var y1 = start[1];\n    var x2 = end[0];\n    var y2 = end[1];\n    var dx = x2 - x1;\n    var dy = y2 - y1;\n    var along = dx === 0 && dy === 0\n        ? 0\n        : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n    var x, y;\n    if (along <= 0) {\n        x = x1;\n        y = y1;\n    }\n    else if (along >= 1) {\n        x = x2;\n        y = y2;\n    }\n    else {\n        x = x1 + along * dx;\n        y = y1 + along * dy;\n    }\n    return [x, y];\n}\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY();\n *     var out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY(2);\n *     var out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(opt_fractionDigits) {\n    return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n        return toStringXY(coordinate, opt_fractionDigits);\n    });\n}\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\n    var normalizedDegrees = modulo(degrees + 180, 360) - 180;\n    var x = Math.abs(3600 * normalizedDegrees);\n    var dflPrecision = opt_fractionDigits || 0;\n    var precision = Math.pow(10, dflPrecision);\n    var deg = Math.floor(x / 3600);\n    var min = Math.floor((x - deg * 3600) / 60);\n    var sec = x - deg * 3600 - min * 60;\n    sec = Math.ceil(sec * precision) / precision;\n    if (sec >= 60) {\n        sec = 0;\n        min += 1;\n    }\n    if (min >= 60) {\n        min = 0;\n        deg += 1;\n    }\n    return (deg +\n        '\\u00b0 ' +\n        padNumber(min, 2) +\n        '\\u2032 ' +\n        padNumber(sec, 2, dflPrecision) +\n        '\\u2033' +\n        (normalizedDegrees == 0\n            ? ''\n            : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0)));\n}\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, opt_fractionDigits) {\n    if (coordinate) {\n        return template\n            .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\n            .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\n    }\n    else {\n        return '';\n    }\n}\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n    var equals = true;\n    for (var i = coordinate1.length - 1; i >= 0; --i) {\n        if (coordinate1[i] != coordinate2[i]) {\n            equals = false;\n            break;\n        }\n    }\n    return equals;\n}\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n    var cosAngle = Math.cos(angle);\n    var sinAngle = Math.sin(angle);\n    var x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n    var y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n    coordinate[0] = x;\n    coordinate[1] = y;\n    return coordinate;\n}\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n    coordinate[0] *= scale;\n    coordinate[1] *= scale;\n    return coordinate;\n}\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n    var dx = coord1[0] - coord2[0];\n    var dy = coord1[1] - coord2[1];\n    return dx * dx + dy * dy;\n}\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n    return Math.sqrt(squaredDistance(coord1, coord2));\n}\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n    return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\n    if (coordinate) {\n        return (degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) +\n            ' ' +\n            degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits));\n    }\n    else {\n        return '';\n    }\n}\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, opt_fractionDigits) {\n    return format(coordinate, '{x}, {y}', opt_fractionDigits);\n}\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n    if (projection.canWrapX()) {\n        var worldWidth = getWidth(projection.getExtent());\n        var worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n        if (worldsAway) {\n            coordinate[0] -= worldsAway * worldWidth;\n        }\n    }\n    return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [opt_sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, opt_sourceExtentWidth) {\n    var projectionExtent = projection.getExtent();\n    var worldsAway = 0;\n    if (projection.canWrapX() &&\n        (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])) {\n        var sourceExtentWidth = opt_sourceExtentWidth || getWidth(projectionExtent);\n        worldsAway = Math.floor((coordinate[0] - projectionExtent[0]) / sourceExtentWidth);\n    }\n    return worldsAway;\n}\n//# sourceMappingURL=coordinate.js.map","/**\n * @module ol/proj\n */\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport Units, { METERS_PER_UNIT } from './proj/Units.js';\nimport { PROJECTIONS as EPSG3857_PROJECTIONS, fromEPSG4326, toEPSG4326, } from './proj/epsg3857.js';\nimport { PROJECTIONS as EPSG4326_PROJECTIONS } from './proj/epsg4326.js';\nimport { add as addProj, clear as clearProj, get as getProj, } from './proj/projections.js';\nimport { add as addTransformFunc, clear as clearTransformFuncs, get as getTransformFunc, } from './proj/transforms.js';\nimport { applyTransform, getWidth } from './extent.js';\nimport { clamp, modulo } from './math.js';\nimport { getDistance } from './sphere.js';\nimport { getWorldsAway } from './coordinate.js';\n/**\n * A projection as {@link module:ol/proj/Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\nexport { METERS_PER_UNIT };\nexport { Projection };\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, opt_output, opt_dimension) {\n    var output;\n    if (opt_output !== undefined) {\n        for (var i = 0, ii = input.length; i < ii; ++i) {\n            opt_output[i] = input[i];\n        }\n        output = opt_output;\n    }\n    else {\n        output = input.slice();\n    }\n    return output;\n}\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, opt_output, opt_dimension) {\n    if (opt_output !== undefined && input !== opt_output) {\n        for (var i = 0, ii = input.length; i < ii; ++i) {\n            opt_output[i] = input[i];\n        }\n        input = opt_output;\n    }\n    return input;\n}\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n    addProj(projection.getCode(), projection);\n    addTransformFunc(projection, projection, cloneTransform);\n}\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n    projections.forEach(addProjection);\n}\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n    return typeof projectionLike === 'string'\n        ? getProj(/** @type {string} */ (projectionLike))\n        : /** @type {Projection} */ (projectionLike) || null;\n}\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the 'point' pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").default} [opt_units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, opt_units) {\n    projection = get(projection);\n    var pointResolution;\n    var getter = projection.getPointResolutionFunc();\n    if (getter) {\n        pointResolution = getter(resolution, point);\n        if (opt_units && opt_units !== projection.getUnits()) {\n            var metersPerUnit = projection.getMetersPerUnit();\n            if (metersPerUnit) {\n                pointResolution =\n                    (pointResolution * metersPerUnit) / METERS_PER_UNIT[opt_units];\n            }\n        }\n    }\n    else {\n        var units = projection.getUnits();\n        if ((units == Units.DEGREES && !opt_units) || opt_units == Units.DEGREES) {\n            pointResolution = resolution;\n        }\n        else {\n            // Estimate point resolution by transforming the center pixel to EPSG:4326,\n            // measuring its width and height on the normal sphere, and taking the\n            // average of the width and height.\n            var toEPSG4326_1 = getTransformFromProjections(projection, get('EPSG:4326'));\n            if (toEPSG4326_1 === identityTransform && units !== Units.DEGREES) {\n                // no transform is available\n                pointResolution = resolution * projection.getMetersPerUnit();\n            }\n            else {\n                var vertices = [\n                    point[0] - resolution / 2,\n                    point[1],\n                    point[0] + resolution / 2,\n                    point[1],\n                    point[0],\n                    point[1] - resolution / 2,\n                    point[0],\n                    point[1] + resolution / 2,\n                ];\n                vertices = toEPSG4326_1(vertices, vertices, 2);\n                var width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n                var height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n                pointResolution = (width + height) / 2;\n            }\n            var metersPerUnit = opt_units\n                ? METERS_PER_UNIT[opt_units]\n                : projection.getMetersPerUnit();\n            if (metersPerUnit !== undefined) {\n                pointResolution /= metersPerUnit;\n            }\n        }\n    }\n    return pointResolution;\n}\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n    addProjections(projections);\n    projections.forEach(function (source) {\n        projections.forEach(function (destination) {\n            if (source !== destination) {\n                addTransformFunc(source, destination, cloneTransform);\n            }\n        });\n    });\n}\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(projections1, projections2, forwardTransform, inverseTransform) {\n    projections1.forEach(function (projection1) {\n        projections2.forEach(function (projection2) {\n            addTransformFunc(projection1, projection2, forwardTransform);\n            addTransformFunc(projection2, projection1, inverseTransform);\n        });\n    });\n}\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n    clearProj();\n    clearTransformFuncs();\n}\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n    if (!projection) {\n        return get(defaultCode);\n    }\n    else if (typeof projection === 'string') {\n        return get(projection);\n    }\n    else {\n        return /** @type {Projection} */ (projection);\n    }\n}\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n    return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [opt_output] Output.\n     * @param {number} [opt_dimension] Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, opt_output, opt_dimension) {\n        var length = input.length;\n        var dimension = opt_dimension !== undefined ? opt_dimension : 2;\n        var output = opt_output !== undefined ? opt_output : new Array(length);\n        for (var i = 0; i < length; i += dimension) {\n            var point = coordTransform([input[i], input[i + 1]]);\n            output[i] = point[0];\n            output[i + 1] = point[1];\n            for (var j = dimension - 1; j >= 2; --j) {\n                output[i + j] = input[i + j];\n            }\n        }\n        return output;\n    });\n}\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n    var sourceProj = get(source);\n    var destProj = get(destination);\n    addTransformFunc(sourceProj, destProj, createTransformFromCoordinateTransform(forward));\n    addTransformFunc(destProj, sourceProj, createTransformFromCoordinateTransform(inverse));\n}\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [opt_projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, opt_projection) {\n    return transform(coordinate, 'EPSG:4326', opt_projection !== undefined ? opt_projection : 'EPSG:3857');\n}\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [opt_projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, opt_projection) {\n    var lonLat = transform(coordinate, opt_projection !== undefined ? opt_projection : 'EPSG:3857', 'EPSG:4326');\n    var lon = lonLat[0];\n    if (lon < -180 || lon > 180) {\n        lonLat[0] = modulo(lon + 180, 360) - 180;\n    }\n    return lonLat;\n}\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n    if (projection1 === projection2) {\n        return true;\n    }\n    var equalUnits = projection1.getUnits() === projection2.getUnits();\n    if (projection1.getCode() === projection2.getCode()) {\n        return equalUnits;\n    }\n    else {\n        var transformFunc = getTransformFromProjections(projection1, projection2);\n        return transformFunc === cloneTransform && equalUnits;\n    }\n}\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(sourceProjection, destinationProjection) {\n    var sourceCode = sourceProjection.getCode();\n    var destinationCode = destinationProjection.getCode();\n    var transformFunc = getTransformFunc(sourceCode, destinationCode);\n    if (!transformFunc) {\n        transformFunc = identityTransform;\n    }\n    return transformFunc;\n}\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n    var sourceProjection = get(source);\n    var destinationProjection = get(destination);\n    return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n    var transformFunc = getTransform(source, destination);\n    return transformFunc(coordinate, undefined, coordinate.length);\n}\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [opt_stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, opt_stops) {\n    var transformFunc = getTransform(source, destination);\n    return applyTransform(extent, transformFunc, undefined, opt_stops);\n}\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(point, sourceProjection, destinationProjection) {\n    var transformFunc = getTransformFromProjections(sourceProjection, destinationProjection);\n    return transformFunc(point);\n}\n/**\n * @type {?Projection}\n */\nvar userProjection = null;\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @param {ProjectionLike} projection The user projection.\n */\nexport function setUserProjection(projection) {\n    userProjection = get(projection);\n}\n/**\n * Clear the user projection if set.  Note that this method is not yet a part of\n * the stable API.  Support for user projections is not yet complete and should\n * be considered experimental.\n */\nexport function clearUserProjection() {\n    userProjection = null;\n}\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @return {?Projection} The user projection (or null if not set).\n */\nexport function getUserProjection() {\n    return userProjection;\n}\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.  Note that this\n * method is not yet a part of the stable API.  Support for user projections is\n * not yet complete and should be considered experimental.\n */\nexport function useGeographic() {\n    setUserProjection('EPSG:4326');\n}\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n    if (!userProjection) {\n        return coordinate;\n    }\n    return transform(coordinate, sourceProjection, userProjection);\n}\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n    if (!userProjection) {\n        return coordinate;\n    }\n    return transform(coordinate, userProjection, destProjection);\n}\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n    if (!userProjection) {\n        return extent;\n    }\n    return transformExtent(extent, sourceProjection, userProjection);\n}\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n    if (!userProjection) {\n        return extent;\n    }\n    return transformExtent(extent, userProjection, destProjection);\n}\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n    if (!userProjection) {\n        return resolution;\n    }\n    var sourceUnits = get(sourceProjection).getUnits();\n    var userUnits = userProjection.getUnits();\n    return sourceUnits && userUnits\n        ? (resolution * METERS_PER_UNIT[sourceUnits]) / METERS_PER_UNIT[userUnits]\n        : resolution;\n}\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n    if (!userProjection) {\n        return resolution;\n    }\n    var sourceUnits = get(destProjection).getUnits();\n    var userUnits = userProjection.getUnits();\n    return sourceUnits && userUnits\n        ? (resolution * METERS_PER_UNIT[userUnits]) / METERS_PER_UNIT[sourceUnits]\n        : resolution;\n}\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destiation).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destiation).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n    return function (coord) {\n        var sourceX = coord[0];\n        var sourceY = coord[1];\n        var transformed, worldsAway;\n        if (sourceProj.canWrapX()) {\n            var sourceExtent = sourceProj.getExtent();\n            var sourceExtentWidth = getWidth(sourceExtent);\n            worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n            if (worldsAway) {\n                // Move x to the real world\n                sourceX = sourceX - worldsAway * sourceExtentWidth;\n            }\n            sourceX = clamp(sourceX, sourceExtent[0], sourceExtent[2]);\n            sourceY = clamp(sourceY, sourceExtent[1], sourceExtent[3]);\n            transformed = transform([sourceX, sourceY]);\n        }\n        else {\n            transformed = transform(coord);\n        }\n        if (worldsAway && destProj.canWrapX()) {\n            // Move transformed coordinate back to the offset world\n            transformed[0] += worldsAway * getWidth(destProj.getExtent());\n        }\n        return transformed;\n    };\n}\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n    // Add transformations that don't alter coordinates to convert within set of\n    // projections with equal meaning.\n    addEquivalentProjections(EPSG3857_PROJECTIONS);\n    addEquivalentProjections(EPSG4326_PROJECTIONS);\n    // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n    // coordinates and back.\n    addEquivalentTransforms(EPSG4326_PROJECTIONS, EPSG3857_PROJECTIONS, fromEPSG4326, toEPSG4326);\n}\naddCommon();\n//# sourceMappingURL=proj.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport Units from '../proj/Units.js';\nimport { abstract } from '../util.js';\nimport { compose as composeTransform, create as createTransform, } from '../transform.js';\nimport { createEmpty, createOrUpdateEmpty, getHeight, returnOrUpdate, } from '../extent.js';\nimport { get as getProjection, getTransform } from '../proj.js';\nimport { memoizeOne } from '../functions.js';\nimport { transform2D } from './flat/transform.js';\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nvar tmpTransform = createTransform();\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nvar Geometry = /** @class */ (function (_super) {\n    __extends(Geometry, _super);\n    function Geometry() {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        _this.extent_ = createEmpty();\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.extentRevision_ = -1;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.simplifiedGeometryRevision = 0;\n        /**\n         * Get a transformed and simplified version of the geometry.\n         * @abstract\n         * @param {number} revision The geometry revision.\n         * @param {number} squaredTolerance Squared tolerance.\n         * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n         * @return {Geometry} Simplified geometry.\n         */\n        _this.simplifyTransformedInternal = memoizeOne(function (revision, squaredTolerance, opt_transform) {\n            if (!opt_transform) {\n                return this.getSimplifiedGeometry(squaredTolerance);\n            }\n            var clone = this.clone();\n            clone.applyTransform(opt_transform);\n            return clone.getSimplifiedGeometry(squaredTolerance);\n        });\n        return _this;\n    }\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    Geometry.prototype.simplifyTransformed = function (squaredTolerance, opt_transform) {\n        return this.simplifyTransformedInternal(this.getRevision(), squaredTolerance, opt_transform);\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @abstract\n     * @return {!Geometry} Clone.\n     */\n    Geometry.prototype.clone = function () {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    Geometry.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        return abstract();\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @return {boolean} Contains (x, y).\n     */\n    Geometry.prototype.containsXY = function (x, y) {\n        var coord = this.getClosestPoint([x, y]);\n        return coord[0] === x && coord[1] === y;\n    };\n    /**\n     * Return the closest point of the geometry to the passed point as\n     * {@link module:ol/coordinate~Coordinate coordinate}.\n     * @param {import(\"../coordinate.js\").Coordinate} point Point.\n     * @param {import(\"../coordinate.js\").Coordinate} [opt_closestPoint] Closest point.\n     * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n     * @api\n     */\n    Geometry.prototype.getClosestPoint = function (point, opt_closestPoint) {\n        var closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];\n        this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n        return closestPoint;\n    };\n    /**\n     * Returns true if this geometry includes the specified coordinate. If the\n     * coordinate is on the boundary of the geometry, returns false.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains coordinate.\n     * @api\n     */\n    Geometry.prototype.intersectsCoordinate = function (coordinate) {\n        return this.containsXY(coordinate[0], coordinate[1]);\n    };\n    /**\n     * @abstract\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @protected\n     * @return {import(\"../extent.js\").Extent} extent Extent.\n     */\n    Geometry.prototype.computeExtent = function (extent) {\n        return abstract();\n    };\n    /**\n     * Get the extent of the geometry.\n     * @param {import(\"../extent.js\").Extent} [opt_extent] Extent.\n     * @return {import(\"../extent.js\").Extent} extent Extent.\n     * @api\n     */\n    Geometry.prototype.getExtent = function (opt_extent) {\n        if (this.extentRevision_ != this.getRevision()) {\n            var extent = this.computeExtent(this.extent_);\n            if (isNaN(extent[0]) || isNaN(extent[1])) {\n                createOrUpdateEmpty(extent);\n            }\n            this.extentRevision_ = this.getRevision();\n        }\n        return returnOrUpdate(this.extent_, opt_extent);\n    };\n    /**\n     * Rotate the geometry around a given coordinate. This modifies the geometry\n     * coordinates in place.\n     * @abstract\n     * @param {number} angle Rotation angle in radians.\n     * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n     * @api\n     */\n    Geometry.prototype.rotate = function (angle, anchor) {\n        abstract();\n    };\n    /**\n     * Scale the geometry (with an optional origin).  This modifies the geometry\n     * coordinates in place.\n     * @abstract\n     * @param {number} sx The scaling factor in the x-direction.\n     * @param {number} [opt_sy] The scaling factor in the y-direction (defaults to sx).\n     * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] The scale origin (defaults to the center\n     *     of the geometry extent).\n     * @api\n     */\n    Geometry.prototype.scale = function (sx, opt_sy, opt_anchor) {\n        abstract();\n    };\n    /**\n     * Create a simplified version of this geometry.  For linestrings, this uses\n     * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n     * algorithm.  For polygons, a quantization-based\n     * simplification is used to preserve topology.\n     * @param {number} tolerance The tolerance distance for simplification.\n     * @return {Geometry} A new, simplified version of the original geometry.\n     * @api\n     */\n    Geometry.prototype.simplify = function (tolerance) {\n        return this.getSimplifiedGeometry(tolerance * tolerance);\n    };\n    /**\n     * Create a simplified version of this geometry using the Douglas Peucker\n     * algorithm.\n     * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n     * @abstract\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {Geometry} Simplified geometry.\n     */\n    Geometry.prototype.getSimplifiedGeometry = function (squaredTolerance) {\n        return abstract();\n    };\n    /**\n     * Get the type of this geometry.\n     * @abstract\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     */\n    Geometry.prototype.getType = function () {\n        return abstract();\n    };\n    /**\n     * Apply a transform function to the coordinates of the geometry.\n     * The geometry is modified in place.\n     * If you do not want the geometry modified in place, first `clone()` it and\n     * then use this function on the clone.\n     * @abstract\n     * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n     * Called with a flat array of geometry coordinates.\n     */\n    Geometry.prototype.applyTransform = function (transformFn) {\n        abstract();\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @abstract\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     */\n    Geometry.prototype.intersectsExtent = function (extent) {\n        return abstract();\n    };\n    /**\n     * Translate the geometry.  This modifies the geometry coordinates in place.  If\n     * instead you want a new geometry, first `clone()` this geometry.\n     * @abstract\n     * @param {number} deltaX Delta X.\n     * @param {number} deltaY Delta Y.\n     * @api\n     */\n    Geometry.prototype.translate = function (deltaX, deltaY) {\n        abstract();\n    };\n    /**\n     * Transform each coordinate of the geometry from one coordinate reference\n     * system to another. The geometry is modified in place.\n     * For example, a line will be transformed to a line and a circle to a circle.\n     * If you do not want the geometry modified in place, first `clone()` it and\n     * then use this function on the clone.\n     *\n     * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n     *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n     * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n     *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n     * @return {Geometry} This geometry.  Note that original geometry is\n     *     modified in place.\n     * @api\n     */\n    Geometry.prototype.transform = function (source, destination) {\n        /** @type {import(\"../proj/Projection.js\").default} */\n        var sourceProj = getProjection(source);\n        var transformFn = sourceProj.getUnits() == Units.TILE_PIXELS\n            ? function (inCoordinates, outCoordinates, stride) {\n                var pixelExtent = sourceProj.getExtent();\n                var projectedExtent = sourceProj.getWorldExtent();\n                var scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n                composeTransform(tmpTransform, projectedExtent[0], projectedExtent[3], scale, -scale, 0, 0, 0);\n                transform2D(inCoordinates, 0, inCoordinates.length, stride, tmpTransform, outCoordinates);\n                return getTransform(sourceProj, destination)(inCoordinates, outCoordinates, stride);\n            }\n            : getTransform(sourceProj, destination);\n        this.applyTransform(transformFn);\n        return this;\n    };\n    return Geometry;\n}(BaseObject));\nexport default Geometry;\n//# sourceMappingURL=Geometry.js.map","/**\n * @module ol/geom/flat/transform\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(flatCoordinates, offset, end, stride, transform, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        var x = flatCoordinates[j];\n        var y = flatCoordinates[j + 1];\n        dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n        dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(flatCoordinates, offset, end, stride, angle, anchor, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var cos = Math.cos(angle);\n    var sin = Math.sin(angle);\n    var anchorX = anchor[0];\n    var anchorY = anchor[1];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        var deltaX = flatCoordinates[j] - anchorX;\n        var deltaY = flatCoordinates[j + 1] - anchorY;\n        dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n        dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n        for (var k = j + 2; k < j + stride; ++k) {\n            dest[i++] = flatCoordinates[k];\n        }\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(flatCoordinates, offset, end, stride, sx, sy, anchor, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var anchorX = anchor[0];\n    var anchorY = anchor[1];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        var deltaX = flatCoordinates[j] - anchorX;\n        var deltaY = flatCoordinates[j + 1] - anchorY;\n        dest[i++] = anchorX + sx * deltaX;\n        dest[i++] = anchorY + sy * deltaY;\n        for (var k = j + 2; k < j + stride; ++k) {\n            dest[i++] = flatCoordinates[k];\n        }\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(flatCoordinates, offset, end, stride, deltaX, deltaY, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        dest[i++] = flatCoordinates[j] + deltaX;\n        dest[i++] = flatCoordinates[j + 1] + deltaY;\n        for (var k = j + 2; k < j + stride; ++k) {\n            dest[i++] = flatCoordinates[k];\n        }\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n//# sourceMappingURL=transform.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport { abstract } from '../util.js';\nimport { createOrUpdateFromFlatCoordinates, getCenter } from '../extent.js';\nimport { rotate, scale, transform2D, translate } from './flat/transform.js';\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nvar SimpleGeometry = /** @class */ (function (_super) {\n    __extends(SimpleGeometry, _super);\n    function SimpleGeometry() {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {import(\"./GeometryLayout.js\").default}\n         */\n        _this.layout = GeometryLayout.XY;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.stride = 2;\n        /**\n         * @protected\n         * @type {Array<number>}\n         */\n        _this.flatCoordinates = null;\n        return _this;\n    }\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @protected\n     * @return {import(\"../extent.js\").Extent} extent Extent.\n     */\n    SimpleGeometry.prototype.computeExtent = function (extent) {\n        return createOrUpdateFromFlatCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, extent);\n    };\n    /**\n     * @abstract\n     * @return {Array<*>} Coordinates.\n     */\n    SimpleGeometry.prototype.getCoordinates = function () {\n        return abstract();\n    };\n    /**\n     * Return the first coordinate of the geometry.\n     * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n     * @api\n     */\n    SimpleGeometry.prototype.getFirstCoordinate = function () {\n        return this.flatCoordinates.slice(0, this.stride);\n    };\n    /**\n     * @return {Array<number>} Flat coordinates.\n     */\n    SimpleGeometry.prototype.getFlatCoordinates = function () {\n        return this.flatCoordinates;\n    };\n    /**\n     * Return the last coordinate of the geometry.\n     * @return {import(\"../coordinate.js\").Coordinate} Last point.\n     * @api\n     */\n    SimpleGeometry.prototype.getLastCoordinate = function () {\n        return this.flatCoordinates.slice(this.flatCoordinates.length - this.stride);\n    };\n    /**\n     * Return the {@link module:ol/geom/GeometryLayout layout} of the geometry.\n     * @return {import(\"./GeometryLayout.js\").default} Layout.\n     * @api\n     */\n    SimpleGeometry.prototype.getLayout = function () {\n        return this.layout;\n    };\n    /**\n     * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {SimpleGeometry} Simplified geometry.\n     */\n    SimpleGeometry.prototype.getSimplifiedGeometry = function (squaredTolerance) {\n        if (this.simplifiedGeometryRevision !== this.getRevision()) {\n            this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n            this.simplifiedGeometryRevision = this.getRevision();\n        }\n        // If squaredTolerance is negative or if we know that simplification will not\n        // have any effect then just return this.\n        if (squaredTolerance < 0 ||\n            (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n                squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)) {\n            return this;\n        }\n        var simplifiedGeometry = this.getSimplifiedGeometryInternal(squaredTolerance);\n        var simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n        if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n            return simplifiedGeometry;\n        }\n        else {\n            // Simplification did not actually remove any coordinates.  We now know\n            // that any calls to getSimplifiedGeometry with a squaredTolerance less\n            // than or equal to the current squaredTolerance will also not have any\n            // effect.  This allows us to short circuit simplification (saving CPU\n            // cycles) and prevents the cache of simplified geometries from filling\n            // up with useless identical copies of this geometry (saving memory).\n            this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n            return this;\n        }\n    };\n    /**\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {SimpleGeometry} Simplified geometry.\n     * @protected\n     */\n    SimpleGeometry.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        return this;\n    };\n    /**\n     * @return {number} Stride.\n     */\n    SimpleGeometry.prototype.getStride = function () {\n        return this.stride;\n    };\n    /**\n     * @param {import(\"./GeometryLayout.js\").default} layout Layout.\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     */\n    SimpleGeometry.prototype.setFlatCoordinates = function (layout, flatCoordinates) {\n        this.stride = getStrideForLayout(layout);\n        this.layout = layout;\n        this.flatCoordinates = flatCoordinates;\n    };\n    /**\n     * @abstract\n     * @param {!Array<*>} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n     */\n    SimpleGeometry.prototype.setCoordinates = function (coordinates, opt_layout) {\n        abstract();\n    };\n    /**\n     * @param {import(\"./GeometryLayout.js\").default|undefined} layout Layout.\n     * @param {Array<*>} coordinates Coordinates.\n     * @param {number} nesting Nesting.\n     * @protected\n     */\n    SimpleGeometry.prototype.setLayout = function (layout, coordinates, nesting) {\n        /** @type {number} */\n        var stride;\n        if (layout) {\n            stride = getStrideForLayout(layout);\n        }\n        else {\n            for (var i = 0; i < nesting; ++i) {\n                if (coordinates.length === 0) {\n                    this.layout = GeometryLayout.XY;\n                    this.stride = 2;\n                    return;\n                }\n                else {\n                    coordinates = /** @type {Array} */ (coordinates[0]);\n                }\n            }\n            stride = coordinates.length;\n            layout = getLayoutForStride(stride);\n        }\n        this.layout = layout;\n        this.stride = stride;\n    };\n    /**\n     * Apply a transform function to the coordinates of the geometry.\n     * The geometry is modified in place.\n     * If you do not want the geometry modified in place, first `clone()` it and\n     * then use this function on the clone.\n     * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n     * Called with a flat array of geometry coordinates.\n     * @api\n     */\n    SimpleGeometry.prototype.applyTransform = function (transformFn) {\n        if (this.flatCoordinates) {\n            transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n            this.changed();\n        }\n    };\n    /**\n     * Rotate the geometry around a given coordinate. This modifies the geometry\n     * coordinates in place.\n     * @param {number} angle Rotation angle in counter-clockwise radians.\n     * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n     * @api\n     */\n    SimpleGeometry.prototype.rotate = function (angle, anchor) {\n        var flatCoordinates = this.getFlatCoordinates();\n        if (flatCoordinates) {\n            var stride = this.getStride();\n            rotate(flatCoordinates, 0, flatCoordinates.length, stride, angle, anchor, flatCoordinates);\n            this.changed();\n        }\n    };\n    /**\n     * Scale the geometry (with an optional origin).  This modifies the geometry\n     * coordinates in place.\n     * @param {number} sx The scaling factor in the x-direction.\n     * @param {number} [opt_sy] The scaling factor in the y-direction (defaults to sx).\n     * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] The scale origin (defaults to the center\n     *     of the geometry extent).\n     * @api\n     */\n    SimpleGeometry.prototype.scale = function (sx, opt_sy, opt_anchor) {\n        var sy = opt_sy;\n        if (sy === undefined) {\n            sy = sx;\n        }\n        var anchor = opt_anchor;\n        if (!anchor) {\n            anchor = getCenter(this.getExtent());\n        }\n        var flatCoordinates = this.getFlatCoordinates();\n        if (flatCoordinates) {\n            var stride = this.getStride();\n            scale(flatCoordinates, 0, flatCoordinates.length, stride, sx, sy, anchor, flatCoordinates);\n            this.changed();\n        }\n    };\n    /**\n     * Translate the geometry.  This modifies the geometry coordinates in place.  If\n     * instead you want a new geometry, first `clone()` this geometry.\n     * @param {number} deltaX Delta X.\n     * @param {number} deltaY Delta Y.\n     * @api\n     */\n    SimpleGeometry.prototype.translate = function (deltaX, deltaY) {\n        var flatCoordinates = this.getFlatCoordinates();\n        if (flatCoordinates) {\n            var stride = this.getStride();\n            translate(flatCoordinates, 0, flatCoordinates.length, stride, deltaX, deltaY, flatCoordinates);\n            this.changed();\n        }\n    };\n    return SimpleGeometry;\n}(Geometry));\n/**\n * @param {number} stride Stride.\n * @return {import(\"./GeometryLayout.js\").default} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n    var layout;\n    if (stride == 2) {\n        layout = GeometryLayout.XY;\n    }\n    else if (stride == 3) {\n        layout = GeometryLayout.XYZ;\n    }\n    else if (stride == 4) {\n        layout = GeometryLayout.XYZM;\n    }\n    return /** @type {import(\"./GeometryLayout.js\").default} */ (layout);\n}\n/**\n * @param {import(\"./GeometryLayout.js\").default} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n    var stride;\n    if (layout == GeometryLayout.XY) {\n        stride = 2;\n    }\n    else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYM) {\n        stride = 3;\n    }\n    else if (layout == GeometryLayout.XYZM) {\n        stride = 4;\n    }\n    return /** @type {number} */ (stride);\n}\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, opt_dest) {\n    var flatCoordinates = simpleGeometry.getFlatCoordinates();\n    if (!flatCoordinates) {\n        return null;\n    }\n    else {\n        var stride = simpleGeometry.getStride();\n        return transform2D(flatCoordinates, 0, flatCoordinates.length, stride, transform, opt_dest);\n    }\n}\nexport default SimpleGeometry;\n//# sourceMappingURL=SimpleGeometry.js.map","/**\n * @module ol/geom/flat/closest\n */\nimport { lerp, squaredDistance as squaredDx } from '../../math.js';\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(flatCoordinates, offset1, offset2, stride, x, y, closestPoint) {\n    var x1 = flatCoordinates[offset1];\n    var y1 = flatCoordinates[offset1 + 1];\n    var dx = flatCoordinates[offset2] - x1;\n    var dy = flatCoordinates[offset2 + 1] - y1;\n    var offset;\n    if (dx === 0 && dy === 0) {\n        offset = offset1;\n    }\n    else {\n        var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n        if (t > 1) {\n            offset = offset2;\n        }\n        else if (t > 0) {\n            for (var i = 0; i < stride; ++i) {\n                closestPoint[i] = lerp(flatCoordinates[offset1 + i], flatCoordinates[offset2 + i], t);\n            }\n            closestPoint.length = stride;\n            return;\n        }\n        else {\n            offset = offset1;\n        }\n    }\n    for (var i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n    }\n    closestPoint.length = stride;\n}\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    for (offset += stride; offset < end; offset += stride) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        var squaredDelta = squaredDx(x1, y1, x2, y2);\n        if (squaredDelta > max) {\n            max = squaredDelta;\n        }\n        x1 = x2;\n        y1 = y2;\n    }\n    return max;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n        offset = end;\n    }\n    return max;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(flatCoordinates, offset, endss, stride, max) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n        offset = ends[ends.length - 1];\n    }\n    return max;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(flatCoordinates, offset, end, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, opt_tmpPoint) {\n    if (offset == end) {\n        return minSquaredDistance;\n    }\n    var i, squaredDistance;\n    if (maxDelta === 0) {\n        // All points are identical, so just test the first point.\n        squaredDistance = squaredDx(x, y, flatCoordinates[offset], flatCoordinates[offset + 1]);\n        if (squaredDistance < minSquaredDistance) {\n            for (i = 0; i < stride; ++i) {\n                closestPoint[i] = flatCoordinates[offset + i];\n            }\n            closestPoint.length = stride;\n            return squaredDistance;\n        }\n        else {\n            return minSquaredDistance;\n        }\n    }\n    var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n    var index = offset + stride;\n    while (index < end) {\n        assignClosest(flatCoordinates, index - stride, index, stride, x, y, tmpPoint);\n        squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n        if (squaredDistance < minSquaredDistance) {\n            minSquaredDistance = squaredDistance;\n            for (i = 0; i < stride; ++i) {\n                closestPoint[i] = tmpPoint[i];\n            }\n            closestPoint.length = stride;\n            index += stride;\n        }\n        else {\n            // Skip ahead multiple points, because we know that all the skipped\n            // points cannot be any closer than the closest point we have found so\n            // far.  We know this because we know how close the current point is, how\n            // close the closest point we have found so far is, and the maximum\n            // distance between consecutive points.  For example, if we're currently\n            // at distance 10, the best we've found so far is 3, and that the maximum\n            // distance between consecutive points is 2, then we'll need to skip at\n            // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n            // finding a closer point.  We use Math.max(..., 1) to ensure that we\n            // always advance at least one point, to avoid an infinite loop.\n            index +=\n                stride *\n                    Math.max(((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n                        maxDelta) |\n                        0, 1);\n        }\n    }\n    if (isRing) {\n        // Check the closing segment.\n        assignClosest(flatCoordinates, end - stride, offset, stride, x, y, tmpPoint);\n        squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n        if (squaredDistance < minSquaredDistance) {\n            minSquaredDistance = squaredDistance;\n            for (i = 0; i < stride; ++i) {\n                closestPoint[i] = tmpPoint[i];\n            }\n            closestPoint.length = stride;\n        }\n    }\n    return minSquaredDistance;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(flatCoordinates, offset, ends, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, opt_tmpPoint) {\n    var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        minSquaredDistance = assignClosestPoint(flatCoordinates, offset, end, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n        offset = end;\n    }\n    return minSquaredDistance;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(flatCoordinates, offset, endss, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, opt_tmpPoint) {\n    var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        minSquaredDistance = assignClosestArrayPoint(flatCoordinates, offset, ends, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n        offset = ends[ends.length - 1];\n    }\n    return minSquaredDistance;\n}\n//# sourceMappingURL=closest.js.map","/**\n * @module ol/geom/flat/deflate\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n    for (var i = 0, ii = coordinate.length; i < ii; ++i) {\n        flatCoordinates[offset++] = coordinate[i];\n    }\n    return offset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(flatCoordinates, offset, coordinates, stride) {\n    for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        var coordinate = coordinates[i];\n        for (var j = 0; j < stride; ++j) {\n            flatCoordinates[offset++] = coordinate[j];\n        }\n    }\n    return offset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [opt_ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(flatCoordinates, offset, coordinatess, stride, opt_ends) {\n    var ends = opt_ends ? opt_ends : [];\n    var i = 0;\n    for (var j = 0, jj = coordinatess.length; j < jj; ++j) {\n        var end = deflateCoordinates(flatCoordinates, offset, coordinatess[j], stride);\n        ends[i++] = end;\n        offset = end;\n    }\n    ends.length = i;\n    return ends;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [opt_endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(flatCoordinates, offset, coordinatesss, stride, opt_endss) {\n    var endss = opt_endss ? opt_endss : [];\n    var i = 0;\n    for (var j = 0, jj = coordinatesss.length; j < jj; ++j) {\n        var ends = deflateCoordinatesArray(flatCoordinates, offset, coordinatesss[j], stride, endss[i]);\n        endss[i++] = ends;\n        offset = ends[ends.length - 1];\n    }\n    endss.length = i;\n    return endss;\n}\n//# sourceMappingURL=deflate.js.map","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\nimport { squaredDistance, squaredSegmentDistance } from '../../math.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [opt_simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(flatCoordinates, offset, end, stride, squaredTolerance, highQuality, opt_simplifiedFlatCoordinates) {\n    var simplifiedFlatCoordinates = opt_simplifiedFlatCoordinates !== undefined\n        ? opt_simplifiedFlatCoordinates\n        : [];\n    if (!highQuality) {\n        end = radialDistance(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n        flatCoordinates = simplifiedFlatCoordinates;\n        offset = 0;\n        stride = 2;\n    }\n    simplifiedFlatCoordinates.length = douglasPeucker(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n    return simplifiedFlatCoordinates;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n    var n = (end - offset) / stride;\n    if (n < 3) {\n        for (; offset < end; offset += stride) {\n            simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + 1];\n        }\n        return simplifiedOffset;\n    }\n    /** @type {Array<number>} */\n    var markers = new Array(n);\n    markers[0] = 1;\n    markers[n - 1] = 1;\n    /** @type {Array<number>} */\n    var stack = [offset, end - stride];\n    var index = 0;\n    while (stack.length > 0) {\n        var last = stack.pop();\n        var first = stack.pop();\n        var maxSquaredDistance = 0;\n        var x1 = flatCoordinates[first];\n        var y1 = flatCoordinates[first + 1];\n        var x2 = flatCoordinates[last];\n        var y2 = flatCoordinates[last + 1];\n        for (var i = first + stride; i < last; i += stride) {\n            var x = flatCoordinates[i];\n            var y = flatCoordinates[i + 1];\n            var squaredDistance_1 = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n            if (squaredDistance_1 > maxSquaredDistance) {\n                index = i;\n                maxSquaredDistance = squaredDistance_1;\n            }\n        }\n        if (maxSquaredDistance > squaredTolerance) {\n            markers[(index - offset) / stride] = 1;\n            if (first + stride < index) {\n                stack.push(first, index);\n            }\n            if (index + stride < last) {\n                stack.push(index, last);\n            }\n        }\n    }\n    for (var i = 0; i < n; ++i) {\n        if (markers[i]) {\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + i * stride];\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + i * stride + 1];\n        }\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(flatCoordinates, offset, ends, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        simplifiedOffset = douglasPeucker(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset);\n        simplifiedEnds.push(simplifiedOffset);\n        offset = end;\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(flatCoordinates, offset, endss, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        var simplifiedEnds = [];\n        simplifiedOffset = douglasPeuckerArray(flatCoordinates, offset, ends, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n        simplifiedEndss.push(simplifiedEnds);\n        offset = ends[ends.length - 1];\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n    if (end <= offset + stride) {\n        // zero or one point, no simplification possible, so copy and return\n        for (; offset < end; offset += stride) {\n            simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + 1];\n        }\n        return simplifiedOffset;\n    }\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    // copy first point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n    var x2 = x1;\n    var y2 = y1;\n    for (offset += stride; offset < end; offset += stride) {\n        x2 = flatCoordinates[offset];\n        y2 = flatCoordinates[offset + 1];\n        if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n            // copy point at offset\n            simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n            simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n            x1 = x2;\n            y1 = y2;\n        }\n    }\n    if (x2 != x1 || y2 != y1) {\n        // copy last point\n        simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n        simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n    return tolerance * Math.round(value / tolerance);\n}\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(flatCoordinates, offset, end, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n    // do nothing if the line is empty\n    if (offset == end) {\n        return simplifiedOffset;\n    }\n    // snap the first coordinate (P1)\n    var x1 = snap(flatCoordinates[offset], tolerance);\n    var y1 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // add the first coordinate to the output\n    simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n    // find the next coordinate that does not snap to the same value as the first\n    // coordinate (P2)\n    var x2, y2;\n    do {\n        x2 = snap(flatCoordinates[offset], tolerance);\n        y2 = snap(flatCoordinates[offset + 1], tolerance);\n        offset += stride;\n        if (offset == end) {\n            // all coordinates snap to the same value, the line collapses to a point\n            // push the last snapped value anyway to ensure that the output contains\n            // at least two points\n            // FIXME should we really return at least two points anyway?\n            simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n            simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n            return simplifiedOffset;\n        }\n    } while (x2 == x1 && y2 == y1);\n    while (offset < end) {\n        // snap the next coordinate (P3)\n        var x3 = snap(flatCoordinates[offset], tolerance);\n        var y3 = snap(flatCoordinates[offset + 1], tolerance);\n        offset += stride;\n        // skip P3 if it is equal to P2\n        if (x3 == x2 && y3 == y2) {\n            continue;\n        }\n        // calculate the delta between P1 and P2\n        var dx1 = x2 - x1;\n        var dy1 = y2 - y1;\n        // calculate the delta between P3 and P1\n        var dx2 = x3 - x1;\n        var dy2 = y3 - y1;\n        // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n        // P1 in the same direction then P2 is on the straight line between P1 and\n        // P3\n        if (dx1 * dy2 == dy1 * dx2 &&\n            ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n            ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))) {\n            // discard P2 and set P2 = P3\n            x2 = x3;\n            y2 = y3;\n            continue;\n        }\n        // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n        // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n        // and continue with P1 = P2 and P2 = P3\n        simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n        simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n        x1 = x2;\n        y1 = y2;\n        x2 = x3;\n        y2 = y3;\n    }\n    // add the last point (P2)\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(flatCoordinates, offset, ends, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        simplifiedOffset = quantize(flatCoordinates, offset, end, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset);\n        simplifiedEnds.push(simplifiedOffset);\n        offset = end;\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(flatCoordinates, offset, endss, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        var simplifiedEnds = [];\n        simplifiedOffset = quantizeArray(flatCoordinates, offset, ends, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n        simplifiedEndss.push(simplifiedEnds);\n        offset = ends[ends.length - 1];\n    }\n    return simplifiedOffset;\n}\n//# sourceMappingURL=simplify.js.map","/**\n * @module ol/geom/flat/inflate\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [opt_coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(flatCoordinates, offset, end, stride, opt_coordinates) {\n    var coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        coordinates[i++] = flatCoordinates.slice(j, j + stride);\n    }\n    coordinates.length = i;\n    return coordinates;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [opt_coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(flatCoordinates, offset, ends, stride, opt_coordinatess) {\n    var coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\n    var i = 0;\n    for (var j = 0, jj = ends.length; j < jj; ++j) {\n        var end = ends[j];\n        coordinatess[i++] = inflateCoordinates(flatCoordinates, offset, end, stride, coordinatess[i]);\n        offset = end;\n    }\n    coordinatess.length = i;\n    return coordinatess;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [opt_coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(flatCoordinates, offset, endss, stride, opt_coordinatesss) {\n    var coordinatesss = opt_coordinatesss !== undefined ? opt_coordinatesss : [];\n    var i = 0;\n    for (var j = 0, jj = endss.length; j < jj; ++j) {\n        var ends = endss[j];\n        coordinatesss[i++] = inflateCoordinatesArray(flatCoordinates, offset, ends, stride, coordinatesss[i]);\n        offset = ends[ends.length - 1];\n    }\n    coordinatesss.length = i;\n    return coordinatesss;\n}\n//# sourceMappingURL=inflate.js.map","/**\n * @module ol/geom/flat/area\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n    var twiceArea = 0;\n    var x1 = flatCoordinates[end - stride];\n    var y1 = flatCoordinates[end - stride + 1];\n    for (; offset < end; offset += stride) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        twiceArea += y1 * x2 - x1 * y2;\n        x1 = x2;\n        y1 = y2;\n    }\n    return twiceArea / 2;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n    var area = 0;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        area += linearRing(flatCoordinates, offset, end, stride);\n        offset = end;\n    }\n    return area;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n    var area = 0;\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        area += linearRings(flatCoordinates, offset, ends, stride);\n        offset = ends[ends.length - 1];\n    }\n    return area;\n}\n//# sourceMappingURL=area.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/LinearRing\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { assignClosestPoint, maxSquaredDelta } from './flat/closest.js';\nimport { closestSquaredDistanceXY } from '../extent.js';\nimport { deflateCoordinates } from './flat/deflate.js';\nimport { douglasPeucker } from './flat/simplify.js';\nimport { inflateCoordinates } from './flat/inflate.js';\nimport { linearRing as linearRingArea } from './flat/area.js';\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nvar LinearRing = /** @class */ (function (_super) {\n    __extends(LinearRing, _super);\n    /**\n     * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n     *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n     * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n     */\n    function LinearRing(coordinates, opt_layout) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n            _this.setFlatCoordinates(opt_layout, \n            /** @type {Array<number>} */ (coordinates));\n        }\n        else {\n            _this.setCoordinates(\n            /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!LinearRing} Clone.\n     * @api\n     */\n    LinearRing.prototype.clone = function () {\n        return new LinearRing(this.flatCoordinates.slice(), this.layout);\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    LinearRing.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(maxSquaredDelta(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestPoint(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * Return the area of the linear ring on projected plane.\n     * @return {number} Area (on projected plane).\n     * @api\n     */\n    LinearRing.prototype.getArea = function () {\n        return linearRingArea(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * Return the coordinates of the linear ring.\n     * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n     * @api\n     */\n    LinearRing.prototype.getCoordinates = function () {\n        return inflateCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {LinearRing} Simplified LinearRing.\n     * @protected\n     */\n    LinearRing.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        simplifiedFlatCoordinates.length = douglasPeucker(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n        return new LinearRing(simplifiedFlatCoordinates, GeometryLayout.XY);\n    };\n    /**\n     * Get the type of this geometry.\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     * @api\n     */\n    LinearRing.prototype.getType = function () {\n        return GeometryType.LINEAR_RING;\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     * @api\n     */\n    LinearRing.prototype.intersectsExtent = function (extent) {\n        return false;\n    };\n    /**\n     * Set the coordinates of the linear ring.\n     * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n     * @api\n     */\n    LinearRing.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 1);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        this.flatCoordinates.length = deflateCoordinates(this.flatCoordinates, 0, coordinates, this.stride);\n        this.changed();\n    };\n    return LinearRing;\n}(SimpleGeometry));\nexport default LinearRing;\n//# sourceMappingURL=LinearRing.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/Point\n */\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { containsXY, createOrUpdateFromCoordinate } from '../extent.js';\nimport { deflateCoordinate } from './flat/deflate.js';\nimport { squaredDistance as squaredDx } from '../math.js';\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nvar Point = /** @class */ (function (_super) {\n    __extends(Point, _super);\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n     */\n    function Point(coordinates, opt_layout) {\n        var _this = _super.call(this) || this;\n        _this.setCoordinates(coordinates, opt_layout);\n        return _this;\n    }\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!Point} Clone.\n     * @api\n     */\n    Point.prototype.clone = function () {\n        var point = new Point(this.flatCoordinates.slice(), this.layout);\n        point.applyProperties(this);\n        return point;\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    Point.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        var flatCoordinates = this.flatCoordinates;\n        var squaredDistance = squaredDx(x, y, flatCoordinates[0], flatCoordinates[1]);\n        if (squaredDistance < minSquaredDistance) {\n            var stride = this.stride;\n            for (var i = 0; i < stride; ++i) {\n                closestPoint[i] = flatCoordinates[i];\n            }\n            closestPoint.length = stride;\n            return squaredDistance;\n        }\n        else {\n            return minSquaredDistance;\n        }\n    };\n    /**\n     * Return the coordinate of the point.\n     * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n     * @api\n     */\n    Point.prototype.getCoordinates = function () {\n        return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @protected\n     * @return {import(\"../extent.js\").Extent} extent Extent.\n     */\n    Point.prototype.computeExtent = function (extent) {\n        return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n    };\n    /**\n     * Get the type of this geometry.\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     * @api\n     */\n    Point.prototype.getType = function () {\n        return GeometryType.POINT;\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     * @api\n     */\n    Point.prototype.intersectsExtent = function (extent) {\n        return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n    };\n    /**\n     * @param {!Array<*>} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n     * @api\n     */\n    Point.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 0);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        this.flatCoordinates.length = deflateCoordinate(this.flatCoordinates, 0, coordinates, this.stride);\n        this.changed();\n    };\n    return Point;\n}(SimpleGeometry));\nexport default Point;\n//# sourceMappingURL=Point.js.map","/**\n * @module ol/geom/flat/contains\n */\nimport { forEachCorner } from '../../extent.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(flatCoordinates, offset, end, stride, extent) {\n    var outside = forEachCorner(extent, \n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n        return !linearRingContainsXY(flatCoordinates, offset, end, stride, coordinate[0], coordinate[1]);\n    });\n    return !outside;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(flatCoordinates, offset, end, stride, x, y) {\n    // https://geomalgorithms.com/a03-_inclusion.html\n    // Copyright 2000 softSurfer, 2012 Dan Sunday\n    // This code may be freely used and modified for any purpose\n    // providing that this copyright notice is included with it.\n    // SoftSurfer makes no warranty for this code, and cannot be held\n    // liable for any real or imagined damage resulting from its use.\n    // Users of this code must verify correctness for their application.\n    var wn = 0;\n    var x1 = flatCoordinates[end - stride];\n    var y1 = flatCoordinates[end - stride + 1];\n    for (; offset < end; offset += stride) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        if (y1 <= y) {\n            if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n                wn++;\n            }\n        }\n        else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n            wn--;\n        }\n        x1 = x2;\n        y1 = y2;\n    }\n    return wn !== 0;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y) {\n    if (ends.length === 0) {\n        return false;\n    }\n    if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n        return false;\n    }\n    for (var i = 1, ii = ends.length; i < ii; ++i) {\n        if (linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(flatCoordinates, offset, endss, stride, x, y) {\n    if (endss.length === 0) {\n        return false;\n    }\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n            return true;\n        }\n        offset = ends[ends.length - 1];\n    }\n    return false;\n}\n//# sourceMappingURL=contains.js.map","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport { containsExtent, createEmpty, extendFlatCoordinates, intersects, intersectsSegment, } from '../../extent.js';\nimport { forEach as forEachSegment } from './segments.js';\nimport { linearRingContainsExtent, linearRingContainsXY } from './contains.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(flatCoordinates, offset, end, stride, extent) {\n    var coordinatesExtent = extendFlatCoordinates(createEmpty(), flatCoordinates, offset, end, stride);\n    if (!intersects(extent, coordinatesExtent)) {\n        return false;\n    }\n    if (containsExtent(extent, coordinatesExtent)) {\n        return true;\n    }\n    if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n        return true;\n    }\n    if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n        return true;\n    }\n    return forEachSegment(flatCoordinates, offset, end, stride, \n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n        return intersectsSegment(extent, point1, point2);\n    });\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(flatCoordinates, offset, ends, stride, extent) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        if (intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)) {\n            return true;\n        }\n        offset = ends[i];\n    }\n    return false;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(flatCoordinates, offset, end, stride, extent) {\n    if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[1])) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[3])) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[1])) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[3])) {\n        return true;\n    }\n    return false;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent) {\n    if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n        return false;\n    }\n    if (ends.length === 1) {\n        return true;\n    }\n    for (var i = 1, ii = ends.length; i < ii; ++i) {\n        if (linearRingContainsExtent(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n            if (!intersectsLineString(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(flatCoordinates, offset, endss, stride, extent) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        if (intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)) {\n            return true;\n        }\n        offset = ends[ends.length - 1];\n    }\n    return false;\n}\n//# sourceMappingURL=intersectsextent.js.map","/**\n * @module ol/geom/flat/segments\n */\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n    var ret;\n    offset += stride;\n    for (; offset < end; offset += stride) {\n        ret = callback(flatCoordinates.slice(offset - stride, offset), flatCoordinates.slice(offset, offset + stride));\n        if (ret) {\n            return ret;\n        }\n    }\n    return false;\n}\n//# sourceMappingURL=segments.js.map","/**\n * @module ol/geom/flat/reverse\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n    while (offset < end - stride) {\n        for (var i = 0; i < stride; ++i) {\n            var tmp = flatCoordinates[offset + i];\n            flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n            flatCoordinates[end - stride + i] = tmp;\n        }\n        offset += stride;\n        end -= stride;\n    }\n}\n//# sourceMappingURL=reverse.js.map","/**\n * @module ol/geom/flat/orient\n */\nimport { coordinates as reverseCoordinates } from './reverse.js';\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n    // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n    // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n    var edge = 0;\n    var x1 = flatCoordinates[end - stride];\n    var y1 = flatCoordinates[end - stride + 1];\n    for (; offset < end; offset += stride) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        edge += (x2 - x1) * (y2 + y1);\n        x1 = x2;\n        y1 = y2;\n    }\n    return edge === 0 ? undefined : edge > 0;\n}\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(flatCoordinates, offset, ends, stride, opt_right) {\n    var right = opt_right !== undefined ? opt_right : false;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        var isClockwise = linearRingIsClockwise(flatCoordinates, offset, end, stride);\n        if (i === 0) {\n            if ((right && isClockwise) || (!right && !isClockwise)) {\n                return false;\n            }\n        }\n        else {\n            if ((right && !isClockwise) || (!right && isClockwise)) {\n                return false;\n            }\n        }\n        offset = end;\n    }\n    return true;\n}\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(flatCoordinates, offset, endss, stride, opt_right) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, opt_right)) {\n            return false;\n        }\n        if (ends.length) {\n            offset = ends[ends.length - 1];\n        }\n    }\n    return true;\n}\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(flatCoordinates, offset, ends, stride, opt_right) {\n    var right = opt_right !== undefined ? opt_right : false;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        var isClockwise = linearRingIsClockwise(flatCoordinates, offset, end, stride);\n        var reverse = i === 0\n            ? (right && isClockwise) || (!right && !isClockwise)\n            : (right && !isClockwise) || (!right && isClockwise);\n        if (reverse) {\n            reverseCoordinates(flatCoordinates, offset, end, stride);\n        }\n        offset = end;\n    }\n    return offset;\n}\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(flatCoordinates, offset, endss, stride, opt_right) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        offset = orientLinearRings(flatCoordinates, offset, endss[i], stride, opt_right);\n    }\n    return offset;\n}\n//# sourceMappingURL=orient.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/Polygon\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { arrayMaxSquaredDelta, assignClosestArrayPoint } from './flat/closest.js';\nimport { closestSquaredDistanceXY, getCenter } from '../extent.js';\nimport { deflateCoordinatesArray } from './flat/deflate.js';\nimport { extend } from '../array.js';\nimport { getInteriorPointOfArray } from './flat/interiorpoint.js';\nimport { inflateCoordinatesArray } from './flat/inflate.js';\nimport { intersectsLinearRingArray } from './flat/intersectsextent.js';\nimport { linearRingsAreOriented, orientLinearRings } from './flat/orient.js';\nimport { linearRings as linearRingsArea } from './flat/area.js';\nimport { linearRingsContainsXY } from './flat/contains.js';\nimport { modulo } from '../math.js';\nimport { quantizeArray } from './flat/simplify.js';\nimport { offset as sphereOffset } from '../sphere.js';\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nvar Polygon = /** @class */ (function (_super) {\n    __extends(Polygon, _super);\n    /**\n     * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n     *     Array of linear rings that define the polygon. The first linear ring of the\n     *     array defines the outer-boundary or surface of the polygon. Each subsequent\n     *     linear ring defines a hole in the surface of the polygon. A linear ring is\n     *     an array of vertices' coordinates where the first coordinate and the last are\n     *     equivalent. (For internal use, flat coordinates in combination with\n     *     `opt_layout` and `opt_ends` are also accepted.)\n     * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n     * @param {Array<number>} [opt_ends] Ends (for internal use with flat coordinates).\n     */\n    function Polygon(coordinates, opt_layout, opt_ends) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {Array<number>}\n         * @private\n         */\n        _this.ends_ = [];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.flatInteriorPointRevision_ = -1;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        _this.flatInteriorPoint_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.orientedRevision_ = -1;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.orientedFlatCoordinates_ = null;\n        if (opt_layout !== undefined && opt_ends) {\n            _this.setFlatCoordinates(opt_layout, \n            /** @type {Array<number>} */ (coordinates));\n            _this.ends_ = opt_ends;\n        }\n        else {\n            _this.setCoordinates(\n            /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Append the passed linear ring to this polygon.\n     * @param {LinearRing} linearRing Linear ring.\n     * @api\n     */\n    Polygon.prototype.appendLinearRing = function (linearRing) {\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n        }\n        else {\n            extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n        }\n        this.ends_.push(this.flatCoordinates.length);\n        this.changed();\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!Polygon} Clone.\n     * @api\n     */\n    Polygon.prototype.clone = function () {\n        var polygon = new Polygon(this.flatCoordinates.slice(), this.layout, this.ends_.slice());\n        polygon.applyProperties(this);\n        return polygon;\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    Polygon.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(this.flatCoordinates, 0, this.ends_, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestArrayPoint(this.flatCoordinates, 0, this.ends_, this.stride, this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @return {boolean} Contains (x, y).\n     */\n    Polygon.prototype.containsXY = function (x, y) {\n        return linearRingsContainsXY(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, x, y);\n    };\n    /**\n     * Return the area of the polygon on projected plane.\n     * @return {number} Area (on projected plane).\n     * @api\n     */\n    Polygon.prototype.getArea = function () {\n        return linearRingsArea(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride);\n    };\n    /**\n     * Get the coordinate array for this geometry.  This array has the structure\n     * of a GeoJSON coordinate array for polygons.\n     *\n     * @param {boolean} [opt_right] Orient coordinates according to the right-hand\n     *     rule (counter-clockwise for exterior and clockwise for interior rings).\n     *     If `false`, coordinates will be oriented according to the left-hand rule\n     *     (clockwise for exterior and counter-clockwise for interior rings).\n     *     By default, coordinate orientation will depend on how the geometry was\n     *     constructed.\n     * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n     * @api\n     */\n    Polygon.prototype.getCoordinates = function (opt_right) {\n        var flatCoordinates;\n        if (opt_right !== undefined) {\n            flatCoordinates = this.getOrientedFlatCoordinates().slice();\n            orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, opt_right);\n        }\n        else {\n            flatCoordinates = this.flatCoordinates;\n        }\n        return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n    };\n    /**\n     * @return {Array<number>} Ends.\n     */\n    Polygon.prototype.getEnds = function () {\n        return this.ends_;\n    };\n    /**\n     * @return {Array<number>} Interior point.\n     */\n    Polygon.prototype.getFlatInteriorPoint = function () {\n        if (this.flatInteriorPointRevision_ != this.getRevision()) {\n            var flatCenter = getCenter(this.getExtent());\n            this.flatInteriorPoint_ = getInteriorPointOfArray(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, flatCenter, 0);\n            this.flatInteriorPointRevision_ = this.getRevision();\n        }\n        return this.flatInteriorPoint_;\n    };\n    /**\n     * Return an interior point of the polygon.\n     * @return {Point} Interior point as XYM coordinate, where M is the\n     * length of the horizontal intersection that the point belongs to.\n     * @api\n     */\n    Polygon.prototype.getInteriorPoint = function () {\n        return new Point(this.getFlatInteriorPoint(), GeometryLayout.XYM);\n    };\n    /**\n     * Return the number of rings of the polygon,  this includes the exterior\n     * ring and any interior rings.\n     *\n     * @return {number} Number of rings.\n     * @api\n     */\n    Polygon.prototype.getLinearRingCount = function () {\n        return this.ends_.length;\n    };\n    /**\n     * Return the Nth linear ring of the polygon geometry. Return `null` if the\n     * given index is out of range.\n     * The exterior linear ring is available at index `0` and the interior rings\n     * at index `1` and beyond.\n     *\n     * @param {number} index Index.\n     * @return {LinearRing} Linear ring.\n     * @api\n     */\n    Polygon.prototype.getLinearRing = function (index) {\n        if (index < 0 || this.ends_.length <= index) {\n            return null;\n        }\n        return new LinearRing(this.flatCoordinates.slice(index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]), this.layout);\n    };\n    /**\n     * Return the linear rings of the polygon.\n     * @return {Array<LinearRing>} Linear rings.\n     * @api\n     */\n    Polygon.prototype.getLinearRings = function () {\n        var layout = this.layout;\n        var flatCoordinates = this.flatCoordinates;\n        var ends = this.ends_;\n        var linearRings = [];\n        var offset = 0;\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            var end = ends[i];\n            var linearRing = new LinearRing(flatCoordinates.slice(offset, end), layout);\n            linearRings.push(linearRing);\n            offset = end;\n        }\n        return linearRings;\n    };\n    /**\n     * @return {Array<number>} Oriented flat coordinates.\n     */\n    Polygon.prototype.getOrientedFlatCoordinates = function () {\n        if (this.orientedRevision_ != this.getRevision()) {\n            var flatCoordinates = this.flatCoordinates;\n            if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n                this.orientedFlatCoordinates_ = flatCoordinates;\n            }\n            else {\n                this.orientedFlatCoordinates_ = flatCoordinates.slice();\n                this.orientedFlatCoordinates_.length = orientLinearRings(this.orientedFlatCoordinates_, 0, this.ends_, this.stride);\n            }\n            this.orientedRevision_ = this.getRevision();\n        }\n        return this.orientedFlatCoordinates_;\n    };\n    /**\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {Polygon} Simplified Polygon.\n     * @protected\n     */\n    Polygon.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        var simplifiedEnds = [];\n        simplifiedFlatCoordinates.length = quantizeArray(this.flatCoordinates, 0, this.ends_, this.stride, Math.sqrt(squaredTolerance), simplifiedFlatCoordinates, 0, simplifiedEnds);\n        return new Polygon(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEnds);\n    };\n    /**\n     * Get the type of this geometry.\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     * @api\n     */\n    Polygon.prototype.getType = function () {\n        return GeometryType.POLYGON;\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     * @api\n     */\n    Polygon.prototype.intersectsExtent = function (extent) {\n        return intersectsLinearRingArray(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, extent);\n    };\n    /**\n     * Set the coordinates of the polygon.\n     * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n     * @api\n     */\n    Polygon.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 2);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        var ends = deflateCoordinatesArray(this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n        this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n        this.changed();\n    };\n    return Polygon;\n}(SimpleGeometry));\nexport default Polygon;\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [opt_n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [opt_sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, opt_n, opt_sphereRadius) {\n    var n = opt_n ? opt_n : 32;\n    /** @type {Array<number>} */\n    var flatCoordinates = [];\n    for (var i = 0; i < n; ++i) {\n        extend(flatCoordinates, sphereOffset(center, radius, (2 * Math.PI * i) / n, opt_sphereRadius));\n    }\n    flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n    return new Polygon(flatCoordinates, GeometryLayout.XY, [\n        flatCoordinates.length,\n    ]);\n}\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n    var minX = extent[0];\n    var minY = extent[1];\n    var maxX = extent[2];\n    var maxY = extent[3];\n    var flatCoordinates = [\n        minX,\n        minY,\n        minX,\n        maxY,\n        maxX,\n        maxY,\n        maxX,\n        minY,\n        minX,\n        minY,\n    ];\n    return new Polygon(flatCoordinates, GeometryLayout.XY, [\n        flatCoordinates.length,\n    ]);\n}\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [opt_sides] Number of sides of the polygon. Default is 32.\n * @param {number} [opt_angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, opt_sides, opt_angle) {\n    var sides = opt_sides ? opt_sides : 32;\n    var stride = circle.getStride();\n    var layout = circle.getLayout();\n    var center = circle.getCenter();\n    var arrayLength = stride * (sides + 1);\n    var flatCoordinates = new Array(arrayLength);\n    for (var i = 0; i < arrayLength; i += stride) {\n        flatCoordinates[i] = 0;\n        flatCoordinates[i + 1] = 0;\n        for (var j = 2; j < stride; j++) {\n            flatCoordinates[i + j] = center[j];\n        }\n    }\n    var ends = [flatCoordinates.length];\n    var polygon = new Polygon(flatCoordinates, layout, ends);\n    makeRegular(polygon, center, circle.getRadius(), opt_angle);\n    return polygon;\n}\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [opt_angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, opt_angle) {\n    var flatCoordinates = polygon.getFlatCoordinates();\n    var stride = polygon.getStride();\n    var sides = flatCoordinates.length / stride - 1;\n    var startAngle = opt_angle ? opt_angle : 0;\n    for (var i = 0; i <= sides; ++i) {\n        var offset = i * stride;\n        var angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n        flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n        flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n    }\n    polygon.changed();\n}\n//# sourceMappingURL=Polygon.js.map","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport { linearRingsContainsXY } from './contains.js';\nimport { numberSafeCompareFunction } from '../../array.js';\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(flatCoordinates, offset, ends, stride, flatCenters, flatCentersOffset, opt_dest) {\n    var i, ii, x, x1, x2, y1, y2;\n    var y = flatCenters[flatCentersOffset + 1];\n    /** @type {Array<number>} */\n    var intersections = [];\n    // Calculate intersections with the horizontal line\n    for (var r = 0, rr = ends.length; r < rr; ++r) {\n        var end = ends[r];\n        x1 = flatCoordinates[end - stride];\n        y1 = flatCoordinates[end - stride + 1];\n        for (i = offset; i < end; i += stride) {\n            x2 = flatCoordinates[i];\n            y2 = flatCoordinates[i + 1];\n            if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n                x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n                intersections.push(x);\n            }\n            x1 = x2;\n            y1 = y2;\n        }\n    }\n    // Find the longest segment of the horizontal line that has its center point\n    // inside the linear ring.\n    var pointX = NaN;\n    var maxSegmentLength = -Infinity;\n    intersections.sort(numberSafeCompareFunction);\n    x1 = intersections[0];\n    for (i = 1, ii = intersections.length; i < ii; ++i) {\n        x2 = intersections[i];\n        var segmentLength = Math.abs(x2 - x1);\n        if (segmentLength > maxSegmentLength) {\n            x = (x1 + x2) / 2;\n            if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n                pointX = x;\n                maxSegmentLength = segmentLength;\n            }\n        }\n        x1 = x2;\n    }\n    if (isNaN(pointX)) {\n        // There is no horizontal line that has its center point inside the linear\n        // ring.  Use the center of the the linear ring's extent.\n        pointX = flatCenters[flatCentersOffset];\n    }\n    if (opt_dest) {\n        opt_dest.push(pointX, y, maxSegmentLength);\n        return opt_dest;\n    }\n    else {\n        return [pointX, y, maxSegmentLength];\n    }\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(flatCoordinates, offset, endss, stride, flatCenters) {\n    var interiorPoints = [];\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        interiorPoints = getInteriorPointOfArray(flatCoordinates, offset, ends, stride, flatCenters, 2 * i, interiorPoints);\n        offset = ends[ends.length - 1];\n    }\n    return interiorPoints;\n}\n//# sourceMappingURL=interiorpoint.js.map","/**\n * @module ol/render/EventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered before a layer is rendered.\n     * @event module:ol/render/Event~RenderEvent#prerender\n     * @api\n     */\n    PRERENDER: 'prerender',\n    /**\n     * Triggered after a layer is rendered.\n     * @event module:ol/render/Event~RenderEvent#postrender\n     * @api\n     */\n    POSTRENDER: 'postrender',\n    /**\n     * Triggered before layers are rendered.\n     * The event object will not have a `context` set.\n     * @event module:ol/render/Event~RenderEvent#precompose\n     * @api\n     */\n    PRECOMPOSE: 'precompose',\n    /**\n     * Triggered after all layers are rendered.\n     * The event object will not have a `context` set.\n     * @event module:ol/render/Event~RenderEvent#postcompose\n     * @api\n     */\n    POSTCOMPOSE: 'postcompose',\n    /**\n     * Triggered when rendering is complete, i.e. all sources and tiles have\n     * finished loading for the current viewport, and all tiles are faded in.\n     * The event object will not have a `context` set.\n     * @event module:ol/render/Event~RenderEvent#rendercomplete\n     * @api\n     */\n    RENDERCOMPLETE: 'rendercomplete',\n};\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/ImageState\n */\n/**\n * @enum {number}\n */\nexport default {\n    IDLE: 0,\n    LOADING: 1,\n    LOADED: 2,\n    ERROR: 3,\n    EMPTY: 4,\n};\n//# sourceMappingURL=ImageState.js.map","/**\n * @module ol/size\n */\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, opt_size) {\n    if (opt_size === undefined) {\n        opt_size = [0, 0];\n    }\n    opt_size[0] = size[0] + 2 * num;\n    opt_size[1] = size[1] + 2 * num;\n    return opt_size;\n}\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n    return size[0] > 0 && size[1] > 0;\n}\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, opt_size) {\n    if (opt_size === undefined) {\n        opt_size = [0, 0];\n    }\n    opt_size[0] = (size[0] * ratio + 0.5) | 0;\n    opt_size[1] = (size[1] * ratio + 0.5) | 0;\n    return opt_size;\n}\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, opt_size) {\n    if (Array.isArray(size)) {\n        return size;\n    }\n    else {\n        if (opt_size === undefined) {\n            opt_size = [size, size];\n        }\n        else {\n            opt_size[0] = size;\n            opt_size[1] = size;\n        }\n        return opt_size;\n    }\n}\n//# sourceMappingURL=size.js.map","/**\n * @module ol/color\n */\nimport { assert } from './asserts.js';\nimport { clamp } from './math.js';\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nvar HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nvar NAMED_COLOR_RE_ = /^([a-z]*)$|^hsla?\\(.*\\)$/i;\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n    if (typeof color === 'string') {\n        return color;\n    }\n    else {\n        return toString(color);\n    }\n}\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n    var el = document.createElement('div');\n    el.style.color = color;\n    if (el.style.color !== '') {\n        document.body.appendChild(el);\n        var rgb = getComputedStyle(el).color;\n        document.body.removeChild(el);\n        return rgb;\n    }\n    else {\n        return '';\n    }\n}\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport var fromString = (function () {\n    // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n    // semantics, whenever the cache grows too large we simply delete an\n    // arbitrary 25% of the entries.\n    /**\n     * @const\n     * @type {number}\n     */\n    var MAX_CACHE_SIZE = 1024;\n    /**\n     * @type {Object<string, Color>}\n     */\n    var cache = {};\n    /**\n     * @type {number}\n     */\n    var cacheSize = 0;\n    return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n        var color;\n        if (cache.hasOwnProperty(s)) {\n            color = cache[s];\n        }\n        else {\n            if (cacheSize >= MAX_CACHE_SIZE) {\n                var i = 0;\n                for (var key in cache) {\n                    if ((i++ & 3) === 0) {\n                        delete cache[key];\n                        --cacheSize;\n                    }\n                }\n            }\n            color = fromStringInternal_(s);\n            cache[s] = color;\n            ++cacheSize;\n        }\n        return color;\n    });\n})();\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n    if (Array.isArray(color)) {\n        return color;\n    }\n    else {\n        return fromString(color);\n    }\n}\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n    var r, g, b, a, color;\n    if (NAMED_COLOR_RE_.exec(s)) {\n        s = fromNamed(s);\n    }\n    if (HEX_COLOR_RE_.exec(s)) {\n        // hex\n        var n = s.length - 1; // number of hex digits\n        var d = // number of digits per channel\n         void 0; // number of digits per channel\n        if (n <= 4) {\n            d = 1;\n        }\n        else {\n            d = 2;\n        }\n        var hasAlpha = n === 4 || n === 8;\n        r = parseInt(s.substr(1 + 0 * d, d), 16);\n        g = parseInt(s.substr(1 + 1 * d, d), 16);\n        b = parseInt(s.substr(1 + 2 * d, d), 16);\n        if (hasAlpha) {\n            a = parseInt(s.substr(1 + 3 * d, d), 16);\n        }\n        else {\n            a = 255;\n        }\n        if (d == 1) {\n            r = (r << 4) + r;\n            g = (g << 4) + g;\n            b = (b << 4) + b;\n            if (hasAlpha) {\n                a = (a << 4) + a;\n            }\n        }\n        color = [r, g, b, a / 255];\n    }\n    else if (s.indexOf('rgba(') == 0) {\n        // rgba()\n        color = s.slice(5, -1).split(',').map(Number);\n        normalize(color);\n    }\n    else if (s.indexOf('rgb(') == 0) {\n        // rgb()\n        color = s.slice(4, -1).split(',').map(Number);\n        color.push(1);\n        normalize(color);\n    }\n    else {\n        assert(false, 14); // Invalid color\n    }\n    return color;\n}\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n    color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n    color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n    color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n    color[3] = clamp(color[3], 0, 1);\n    return color;\n}\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n    var r = color[0];\n    if (r != (r | 0)) {\n        r = (r + 0.5) | 0;\n    }\n    var g = color[1];\n    if (g != (g | 0)) {\n        g = (g + 0.5) | 0;\n    }\n    var b = color[2];\n    if (b != (b | 0)) {\n        b = (b + 0.5) | 0;\n    }\n    var a = color[3] === undefined ? 1 : color[3];\n    return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n    if (NAMED_COLOR_RE_.test(s)) {\n        s = fromNamed(s);\n    }\n    return (HEX_COLOR_RE_.test(s) || s.indexOf('rgba(') === 0 || s.indexOf('rgb(') === 0);\n}\n//# sourceMappingURL=color.js.map","import { WORKER_OFFSCREEN_CANVAS } from './has.js';\n/**\n * @module ol/dom\n */\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [opt_width] Canvas width.\n * @param {number} [opt_height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [opt_canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [opt_Context2DSettings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(opt_width, opt_height, opt_canvasPool, opt_Context2DSettings) {\n    /** @type {HTMLCanvasElement|OffscreenCanvas} */\n    var canvas;\n    if (opt_canvasPool && opt_canvasPool.length) {\n        canvas = opt_canvasPool.shift();\n    }\n    else if (WORKER_OFFSCREEN_CANVAS) {\n        canvas = new OffscreenCanvas(opt_width || 300, opt_height || 300);\n    }\n    else {\n        canvas = document.createElement('canvas');\n        canvas.style.all = 'unset';\n    }\n    if (opt_width) {\n        canvas.width = opt_width;\n    }\n    if (opt_height) {\n        canvas.height = opt_height;\n    }\n    //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n    return /** @type {CanvasRenderingContext2D} */ (canvas.getContext('2d', opt_Context2DSettings));\n}\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n    var width = element.offsetWidth;\n    var style = getComputedStyle(element);\n    width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n    return width;\n}\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n    var height = element.offsetHeight;\n    var style = getComputedStyle(element);\n    height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n    return height;\n}\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n    var parent = oldNode.parentNode;\n    if (parent) {\n        parent.replaceChild(newNode, oldNode);\n    }\n}\n/**\n * @param {Node} node The node to remove.\n * @return {Node} The node that was removed or null.\n */\nexport function removeNode(node) {\n    return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n    while (node.lastChild) {\n        node.removeChild(node.lastChild);\n    }\n}\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n    var oldChildren = node.childNodes;\n    for (var i = 0; true; ++i) {\n        var oldChild = oldChildren[i];\n        var newChild = children[i];\n        // check if our work is done\n        if (!oldChild && !newChild) {\n            break;\n        }\n        // check if children match\n        if (oldChild === newChild) {\n            continue;\n        }\n        // check if a new child needs to be added\n        if (!oldChild) {\n            node.appendChild(newChild);\n            continue;\n        }\n        // check if an old child needs to be removed\n        if (!newChild) {\n            node.removeChild(oldChild);\n            --i;\n            continue;\n        }\n        // reorder\n        node.insertBefore(newChild, oldChild);\n    }\n}\n//# sourceMappingURL=dom.js.map","/**\n * @module ol/css\n */\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_HIDDEN = 'ol-hidden';\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_SELECTABLE = 'ol-selectable';\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_UNSELECTABLE = 'ol-unselectable';\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_UNSUPPORTED = 'ol-unsupported';\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_CONTROL = 'ol-control';\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_COLLAPSED = 'ol-collapsed';\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nvar fontRegEx = new RegExp([\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n].join(''), 'i');\nvar fontRegExMatchIndex = [\n    'style',\n    'variant',\n    'weight',\n    'size',\n    'lineHeight',\n    'family',\n];\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters} The font parameters (or null if the input spec is invalid).\n */\nexport var getFontParameters = function (fontSpec) {\n    var match = fontSpec.match(fontRegEx);\n    if (!match) {\n        return null;\n    }\n    var style = /** @type {FontParameters} */ ({\n        lineHeight: 'normal',\n        size: '1.2em',\n        style: 'normal',\n        weight: 'normal',\n        variant: 'normal',\n    });\n    for (var i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n        var value = match[i + 1];\n        if (value !== undefined) {\n            style[fontRegExMatchIndex[i]] = value;\n        }\n    }\n    style.families = style.family.split(/,\\s?/);\n    return style;\n};\n/**\n * @param {number} opacity Opacity (0..1).\n * @return {string} CSS opacity.\n */\nexport function cssOpacity(opacity) {\n    return opacity === 1 ? '' : String(Math.round(opacity * 100) / 100);\n}\n//# sourceMappingURL=css.js.map","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport EventTarget from '../events/Target.js';\nimport { WORKER_OFFSCREEN_CANVAS } from '../has.js';\nimport { clear } from '../obj.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport { getFontParameters } from '../css.js';\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n */\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {string} [textAlign] TextAlign.\n * @property {string} textBaseline TextBaseline.\n * @property {string} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n/**\n * @const\n * @type {string}\n */\nexport var defaultFont = '10px sans-serif';\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport var defaultFillStyle = '#000';\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport var defaultLineCap = 'round';\n/**\n * @const\n * @type {Array<number>}\n */\nexport var defaultLineDash = [];\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineDashOffset = 0;\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport var defaultLineJoin = 'round';\n/**\n * @const\n * @type {number}\n */\nexport var defaultMiterLimit = 10;\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport var defaultStrokeStyle = '#000';\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextAlign = 'center';\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextBaseline = 'middle';\n/**\n * @const\n * @type {Array<number>}\n */\nexport var defaultPadding = [0, 0, 0, 0];\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineWidth = 1;\n/**\n * @type {BaseObject}\n */\nexport var checkedFonts = new BaseObject();\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache~LRUCache#setSize cache.setSize()}.\n * Deprecated - there is no label cache any more.\n * @type {?}\n * @api\n * @deprecated\n */\nexport var labelCache = new EventTarget();\nlabelCache.setSize = function () {\n    console.warn('labelCache is deprecated.'); //eslint-disable-line\n};\n/**\n * @type {CanvasRenderingContext2D}\n */\nvar measureContext = null;\n/**\n * @type {string}\n */\nvar measureFont;\n/**\n * @type {!Object<string, number>}\n */\nexport var textHeights = {};\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport var registerFont = (function () {\n    var retries = 100;\n    var size = '32px ';\n    var referenceFonts = ['monospace', 'serif'];\n    var len = referenceFonts.length;\n    var text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n    var interval, referenceWidth;\n    /**\n     * @param {string} fontStyle Css font-style\n     * @param {string} fontWeight Css font-weight\n     * @param {*} fontFamily Css font-family\n     * @return {boolean} Font with style and weight is available\n     */\n    function isAvailable(fontStyle, fontWeight, fontFamily) {\n        var available = true;\n        for (var i = 0; i < len; ++i) {\n            var referenceFont = referenceFonts[i];\n            referenceWidth = measureTextWidth(fontStyle + ' ' + fontWeight + ' ' + size + referenceFont, text);\n            if (fontFamily != referenceFont) {\n                var width = measureTextWidth(fontStyle +\n                    ' ' +\n                    fontWeight +\n                    ' ' +\n                    size +\n                    fontFamily +\n                    ',' +\n                    referenceFont, text);\n                // If width and referenceWidth are the same, then the fallback was used\n                // instead of the font we wanted, so the font is not available.\n                available = available && width != referenceWidth;\n            }\n        }\n        if (available) {\n            return true;\n        }\n        return false;\n    }\n    function check() {\n        var done = true;\n        var fonts = checkedFonts.getKeys();\n        for (var i = 0, ii = fonts.length; i < ii; ++i) {\n            var font = fonts[i];\n            if (checkedFonts.get(font) < retries) {\n                if (isAvailable.apply(this, font.split('\\n'))) {\n                    clear(textHeights);\n                    // Make sure that loaded fonts are picked up by Safari\n                    measureContext = null;\n                    measureFont = undefined;\n                    checkedFonts.set(font, retries);\n                }\n                else {\n                    checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n                    done = false;\n                }\n            }\n        }\n        if (done) {\n            clearInterval(interval);\n            interval = undefined;\n        }\n    }\n    return function (fontSpec) {\n        var font = getFontParameters(fontSpec);\n        if (!font) {\n            return;\n        }\n        var families = font.families;\n        for (var i = 0, ii = families.length; i < ii; ++i) {\n            var family = families[i];\n            var key = font.style + '\\n' + font.weight + '\\n' + family;\n            if (checkedFonts.get(key) === undefined) {\n                checkedFonts.set(key, retries, true);\n                if (!isAvailable(font.style, font.weight, family)) {\n                    checkedFonts.set(key, 0, true);\n                    if (interval === undefined) {\n                        interval = setInterval(check, 32);\n                    }\n                }\n            }\n        }\n    };\n})();\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport var measureTextHeight = (function () {\n    /**\n     * @type {HTMLDivElement}\n     */\n    var measureElement;\n    return function (fontSpec) {\n        var height = textHeights[fontSpec];\n        if (height == undefined) {\n            if (WORKER_OFFSCREEN_CANVAS) {\n                var font = getFontParameters(fontSpec);\n                var metrics = measureText(fontSpec, 'Žg');\n                var lineHeight = isNaN(Number(font.lineHeight))\n                    ? 1.2\n                    : Number(font.lineHeight);\n                height =\n                    lineHeight *\n                        (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n            }\n            else {\n                if (!measureElement) {\n                    measureElement = document.createElement('div');\n                    measureElement.innerHTML = 'M';\n                    measureElement.style.minHeight = '0';\n                    measureElement.style.maxHeight = 'none';\n                    measureElement.style.height = 'auto';\n                    measureElement.style.padding = '0';\n                    measureElement.style.border = 'none';\n                    measureElement.style.position = 'absolute';\n                    measureElement.style.display = 'block';\n                    measureElement.style.left = '-99999px';\n                }\n                measureElement.style.font = fontSpec;\n                document.body.appendChild(measureElement);\n                height = measureElement.offsetHeight;\n                document.body.removeChild(measureElement);\n            }\n            textHeights[fontSpec] = height;\n        }\n        return height;\n    };\n})();\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n    if (!measureContext) {\n        measureContext = createCanvasContext2D(1, 1);\n    }\n    if (font != measureFont) {\n        measureContext.font = font;\n        measureFont = measureContext.font;\n    }\n    return measureContext.measureText(text);\n}\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n    return measureText(font, text).width;\n}\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n    if (text in cache) {\n        return cache[text];\n    }\n    var width = measureTextWidth(font, text);\n    cache[text] = width;\n    return width;\n}\n/**\n * @param {string} font Font to use for measuring.\n * @param {Array<string>} lines Lines to measure.\n * @param {Array<number>} widths Array will be populated with the widths of\n * each line.\n * @return {number} Width of the whole text.\n */\nexport function measureTextWidths(font, lines, widths) {\n    var numLines = lines.length;\n    var width = 0;\n    for (var i = 0; i < numLines; ++i) {\n        var currentWidth = measureTextWidth(font, lines[i]);\n        width = Math.max(width, currentWidth);\n        widths.push(currentWidth);\n    }\n    return width;\n}\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n    if (rotation !== 0) {\n        context.translate(offsetX, offsetY);\n        context.rotate(rotation);\n        context.translate(-offsetX, -offsetY);\n    }\n}\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(context, transform, opacity, labelOrImage, originX, originY, w, h, x, y, scale) {\n    context.save();\n    if (opacity !== 1) {\n        context.globalAlpha *= opacity;\n    }\n    if (transform) {\n        context.setTransform.apply(context, transform);\n    }\n    if ( /** @type {*} */(labelOrImage).contextInstructions) {\n        // label\n        context.translate(x, y);\n        context.scale(scale[0], scale[1]);\n        executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n    }\n    else if (scale[0] < 0 || scale[1] < 0) {\n        // flipped image\n        context.translate(x, y);\n        context.scale(scale[0], scale[1]);\n        context.drawImage(\n        /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (labelOrImage), originX, originY, w, h, 0, 0, w, h);\n    }\n    else {\n        // if image not flipped translate and scale can be avoided\n        context.drawImage(\n        /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (labelOrImage), originX, originY, w, h, x, y, w * scale[0], h * scale[1]);\n    }\n    context.restore();\n}\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n    var contextInstructions = label.contextInstructions;\n    for (var i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n        if (Array.isArray(contextInstructions[i + 1])) {\n            context[contextInstructions[i]].apply(context, contextInstructions[i + 1]);\n        }\n        else {\n            context[contextInstructions[i]] = contextInstructions[i + 1];\n        }\n    }\n}\n//# sourceMappingURL=canvas.js.map","/**\n * @module ol/layer/Property\n */\n/**\n * @enum {string}\n */\nexport default {\n    OPACITY: 'opacity',\n    VISIBLE: 'visible',\n    EXTENT: 'extent',\n    Z_INDEX: 'zIndex',\n    MAX_RESOLUTION: 'maxResolution',\n    MIN_RESOLUTION: 'minResolution',\n    MAX_ZOOM: 'maxZoom',\n    MIN_ZOOM: 'minZoom',\n    SOURCE: 'source',\n};\n//# sourceMappingURL=Property.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport { abstract } from '../util.js';\nimport { assert } from '../asserts.js';\nimport { assign } from '../obj.js';\nimport { clamp } from '../math.js';\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nvar BaseLayer = /** @class */ (function (_super) {\n    __extends(BaseLayer, _super);\n    /**\n     * @param {Options} options Layer options.\n     */\n    function BaseLayer(options) {\n        var _this = _super.call(this) || this;\n        /***\n         * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n         */\n        _this.on;\n        /***\n         * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n         */\n        _this.once;\n        /***\n         * @type {BaseLayerOnSignature<void>}\n         */\n        _this.un;\n        /**\n         * @type {Object<string, *>}\n         */\n        var properties = assign({}, options);\n        if (typeof options.properties === 'object') {\n            delete properties.properties;\n            assign(properties, options.properties);\n        }\n        properties[LayerProperty.OPACITY] =\n            options.opacity !== undefined ? options.opacity : 1;\n        assert(typeof properties[LayerProperty.OPACITY] === 'number', 64); // Layer opacity must be a number\n        properties[LayerProperty.VISIBLE] =\n            options.visible !== undefined ? options.visible : true;\n        properties[LayerProperty.Z_INDEX] = options.zIndex;\n        properties[LayerProperty.MAX_RESOLUTION] =\n            options.maxResolution !== undefined ? options.maxResolution : Infinity;\n        properties[LayerProperty.MIN_RESOLUTION] =\n            options.minResolution !== undefined ? options.minResolution : 0;\n        properties[LayerProperty.MIN_ZOOM] =\n            options.minZoom !== undefined ? options.minZoom : -Infinity;\n        properties[LayerProperty.MAX_ZOOM] =\n            options.maxZoom !== undefined ? options.maxZoom : Infinity;\n        /**\n         * @type {string}\n         * @private\n         */\n        _this.className_ =\n            properties.className !== undefined ? options.className : 'ol-layer';\n        delete properties.className;\n        _this.setProperties(properties);\n        /**\n         * @type {import(\"./Layer.js\").State}\n         * @private\n         */\n        _this.state_ = null;\n        return _this;\n    }\n    /**\n     * @return {string} CSS class name.\n     */\n    BaseLayer.prototype.getClassName = function () {\n        return this.className_;\n    };\n    /**\n     * This method is not meant to be called by layers or layer renderers because the state\n     * is incorrect if the layer is included in a layer group.\n     *\n     * @param {boolean} [opt_managed] Layer is managed.\n     * @return {import(\"./Layer.js\").State} Layer state.\n     */\n    BaseLayer.prototype.getLayerState = function (opt_managed) {\n        /** @type {import(\"./Layer.js\").State} */\n        var state = this.state_ ||\n            /** @type {?} */ ({\n                layer: this,\n                managed: opt_managed === undefined ? true : opt_managed,\n            });\n        var zIndex = this.getZIndex();\n        state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n        state.sourceState = this.getSourceState();\n        state.visible = this.getVisible();\n        state.extent = this.getExtent();\n        state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n        state.maxResolution = this.getMaxResolution();\n        state.minResolution = Math.max(this.getMinResolution(), 0);\n        state.minZoom = this.getMinZoom();\n        state.maxZoom = this.getMaxZoom();\n        this.state_ = state;\n        return state;\n    };\n    /**\n     * @abstract\n     * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be\n     *     modified in place).\n     * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n     */\n    BaseLayer.prototype.getLayersArray = function (opt_array) {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list of layer\n     *     states (to be modified in place).\n     * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n     */\n    BaseLayer.prototype.getLayerStatesArray = function (opt_states) {\n        return abstract();\n    };\n    /**\n     * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n     * will be visible regardless of extent.\n     * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getExtent = function () {\n        return /** @type {import(\"../extent.js\").Extent|undefined} */ (this.get(LayerProperty.EXTENT));\n    };\n    /**\n     * Return the maximum resolution of the layer.\n     * @return {number} The maximum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getMaxResolution = function () {\n        return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n    };\n    /**\n     * Return the minimum resolution of the layer.\n     * @return {number} The minimum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getMinResolution = function () {\n        return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n    };\n    /**\n     * Return the minimum zoom level of the layer.\n     * @return {number} The minimum zoom level of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getMinZoom = function () {\n        return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n    };\n    /**\n     * Return the maximum zoom level of the layer.\n     * @return {number} The maximum zoom level of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getMaxZoom = function () {\n        return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n    };\n    /**\n     * Return the opacity of the layer (between 0 and 1).\n     * @return {number} The opacity of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getOpacity = function () {\n        return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n    };\n    /**\n     * @abstract\n     * @return {import(\"../source/State.js\").default} Source state.\n     */\n    BaseLayer.prototype.getSourceState = function () {\n        return abstract();\n    };\n    /**\n     * Return the visibility of the layer (`true` or `false`).\n     * @return {boolean} The visibility of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getVisible = function () {\n        return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n    };\n    /**\n     * Return the Z-index of the layer, which is used to order layers before\n     * rendering. The default Z-index is 0.\n     * @return {number} The Z-index of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getZIndex = function () {\n        return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n    };\n    /**\n     * Set the extent at which the layer is visible.  If `undefined`, the layer\n     * will be visible at all extents.\n     * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setExtent = function (extent) {\n        this.set(LayerProperty.EXTENT, extent);\n    };\n    /**\n     * Set the maximum resolution at which the layer is visible.\n     * @param {number} maxResolution The maximum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setMaxResolution = function (maxResolution) {\n        this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n    };\n    /**\n     * Set the minimum resolution at which the layer is visible.\n     * @param {number} minResolution The minimum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setMinResolution = function (minResolution) {\n        this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n    };\n    /**\n     * Set the maximum zoom (exclusive) at which the layer is visible.\n     * Note that the zoom levels for layer visibility are based on the\n     * view zoom level, which may be different from a tile source zoom level.\n     * @param {number} maxZoom The maximum zoom of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setMaxZoom = function (maxZoom) {\n        this.set(LayerProperty.MAX_ZOOM, maxZoom);\n    };\n    /**\n     * Set the minimum zoom (inclusive) at which the layer is visible.\n     * Note that the zoom levels for layer visibility are based on the\n     * view zoom level, which may be different from a tile source zoom level.\n     * @param {number} minZoom The minimum zoom of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setMinZoom = function (minZoom) {\n        this.set(LayerProperty.MIN_ZOOM, minZoom);\n    };\n    /**\n     * Set the opacity of the layer, allowed values range from 0 to 1.\n     * @param {number} opacity The opacity of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setOpacity = function (opacity) {\n        assert(typeof opacity === 'number', 64); // Layer opacity must be a number\n        this.set(LayerProperty.OPACITY, opacity);\n    };\n    /**\n     * Set the visibility of the layer (`true` or `false`).\n     * @param {boolean} visible The visibility of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setVisible = function (visible) {\n        this.set(LayerProperty.VISIBLE, visible);\n    };\n    /**\n     * Set Z-index of the layer, which is used to order layers before rendering.\n     * The default Z-index is 0.\n     * @param {number} zindex The z-index of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setZIndex = function (zindex) {\n        this.set(LayerProperty.Z_INDEX, zindex);\n    };\n    /**\n     * Clean up.\n     */\n    BaseLayer.prototype.disposeInternal = function () {\n        if (this.state_) {\n            this.state_.layer = null;\n            this.state_ = null;\n        }\n        _super.prototype.disposeInternal.call(this);\n    };\n    return BaseLayer;\n}(BaseObject));\nexport default BaseLayer;\n//# sourceMappingURL=Base.js.map","/**\n * @module ol/source/State\n */\n/**\n * @enum {string}\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\nexport default {\n    UNDEFINED: 'undefined',\n    LOADING: 'loading',\n    READY: 'ready',\n    ERROR: 'error',\n};\n//# sourceMappingURL=State.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport { assert } from '../asserts.js';\nimport { assign } from '../obj.js';\nimport { listen, unlistenByKey } from '../events.js';\n/**\n * @typedef {function(import(\"../PluggableMap.js\").FrameState):HTMLElement} RenderFunction\n */\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:source', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:source'|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n/**\n * @template {import(\"../source/Source.js\").default} SourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../PluggableMap.js\").default} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {import(\"../source/State.js\").default} sourceState SourceState.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is be added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with {@link import(\"../PluggableMap.js\").default#addLayer map.addLayer()}. Components\n * like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * {@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * Please note that for performance reasons several layers might get rendered to\n * the same HTML element, which will cause {@link import(\"../PluggableMap.js\").default#forEachLayerAtPixel map.forEachLayerAtPixel()} to\n * give false positives. To avoid this, apply different `className` properties to the\n * layers at creation time.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n *\n * @template {import(\"../source/Source.js\").default} SourceType\n * @api\n */\nvar Layer = /** @class */ (function (_super) {\n    __extends(Layer, _super);\n    /**\n     * @param {Options<SourceType>} options Layer options.\n     */\n    function Layer(options) {\n        var _this = this;\n        var baseOptions = assign({}, options);\n        delete baseOptions.source;\n        _this = _super.call(this, baseOptions) || this;\n        /***\n         * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n         */\n        _this.on;\n        /***\n         * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n         */\n        _this.once;\n        /***\n         * @type {LayerOnSignature<void>}\n         */\n        _this.un;\n        /**\n         * @private\n         * @type {?import(\"../events.js\").EventsKey}\n         */\n        _this.mapPrecomposeKey_ = null;\n        /**\n         * @private\n         * @type {?import(\"../events.js\").EventsKey}\n         */\n        _this.mapRenderKey_ = null;\n        /**\n         * @private\n         * @type {?import(\"../events.js\").EventsKey}\n         */\n        _this.sourceChangeKey_ = null;\n        /**\n         * @private\n         * @type {import(\"../renderer/Layer.js\").default}\n         */\n        _this.renderer_ = null;\n        // Overwrite default render method with a custom one\n        if (options.render) {\n            _this.render = options.render;\n        }\n        if (options.map) {\n            _this.setMap(options.map);\n        }\n        _this.addChangeListener(LayerProperty.SOURCE, _this.handleSourcePropertyChange_);\n        var source = options.source\n            ? /** @type {SourceType} */ (options.source)\n            : null;\n        _this.setSource(source);\n        return _this;\n    }\n    /**\n     * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be modified in place).\n     * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n     */\n    Layer.prototype.getLayersArray = function (opt_array) {\n        var array = opt_array ? opt_array : [];\n        array.push(this);\n        return array;\n    };\n    /**\n     * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list of layer states (to be modified in place).\n     * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n     */\n    Layer.prototype.getLayerStatesArray = function (opt_states) {\n        var states = opt_states ? opt_states : [];\n        states.push(this.getLayerState());\n        return states;\n    };\n    /**\n     * Get the layer source.\n     * @return {SourceType} The layer source (or `null` if not yet set).\n     * @observable\n     * @api\n     */\n    Layer.prototype.getSource = function () {\n        return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n    };\n    /**\n     * @return {import(\"../source/State.js\").default} Source state.\n     */\n    Layer.prototype.getSourceState = function () {\n        var source = this.getSource();\n        return !source ? SourceState.UNDEFINED : source.getState();\n    };\n    /**\n     * @private\n     */\n    Layer.prototype.handleSourceChange_ = function () {\n        this.changed();\n    };\n    /**\n     * @private\n     */\n    Layer.prototype.handleSourcePropertyChange_ = function () {\n        if (this.sourceChangeKey_) {\n            unlistenByKey(this.sourceChangeKey_);\n            this.sourceChangeKey_ = null;\n        }\n        var source = this.getSource();\n        if (source) {\n            this.sourceChangeKey_ = listen(source, EventType.CHANGE, this.handleSourceChange_, this);\n        }\n        this.changed();\n    };\n    /**\n     * @param {import(\"../pixel\").Pixel} pixel Pixel.\n     * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n     * an array of features.\n     */\n    Layer.prototype.getFeatures = function (pixel) {\n        if (!this.renderer_) {\n            return new Promise(function (resolve) { return resolve([]); });\n        }\n        return this.renderer_.getFeatures(pixel);\n    };\n    /**\n     * In charge to manage the rendering of the layer. One layer type is\n     * bounded with one layer renderer.\n     * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {HTMLElement} target Target which the renderer may (but need not) use\n     * for rendering its content.\n     * @return {HTMLElement} The rendered element.\n     */\n    Layer.prototype.render = function (frameState, target) {\n        var layerRenderer = this.getRenderer();\n        if (layerRenderer.prepareFrame(frameState)) {\n            return layerRenderer.renderFrame(frameState, target);\n        }\n    };\n    /**\n     * Sets the layer to be rendered on top of other layers on a map. The map will\n     * not manage this layer in its layers collection, and the callback in\n     * {@link module:ol/Map~Map#forEachLayerAtPixel} will receive `null` as layer. This\n     * is useful for temporary layers. To remove an unmanaged layer from the map,\n     * use `#setMap(null)`.\n     *\n     * To add the layer to a map and have it managed by the map, use\n     * {@link module:ol/Map~Map#addLayer} instead.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     * @api\n     */\n    Layer.prototype.setMap = function (map) {\n        if (this.mapPrecomposeKey_) {\n            unlistenByKey(this.mapPrecomposeKey_);\n            this.mapPrecomposeKey_ = null;\n        }\n        if (!map) {\n            this.changed();\n        }\n        if (this.mapRenderKey_) {\n            unlistenByKey(this.mapRenderKey_);\n            this.mapRenderKey_ = null;\n        }\n        if (map) {\n            this.mapPrecomposeKey_ = listen(map, RenderEventType.PRECOMPOSE, function (evt) {\n                var renderEvent = \n                /** @type {import(\"../render/Event.js\").default} */ (evt);\n                var layerStatesArray = renderEvent.frameState.layerStatesArray;\n                var layerState = this.getLayerState(false);\n                // A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.\n                assert(!layerStatesArray.some(function (arrayLayerState) {\n                    return arrayLayerState.layer === layerState.layer;\n                }), 67);\n                layerStatesArray.push(layerState);\n            }, this);\n            this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n            this.changed();\n        }\n    };\n    /**\n     * Set the layer source.\n     * @param {SourceType} source The layer source.\n     * @observable\n     * @api\n     */\n    Layer.prototype.setSource = function (source) {\n        this.set(LayerProperty.SOURCE, source);\n    };\n    /**\n     * Get the renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} The layer renderer.\n     */\n    Layer.prototype.getRenderer = function () {\n        if (!this.renderer_) {\n            this.renderer_ = this.createRenderer();\n        }\n        return this.renderer_;\n    };\n    /**\n     * @return {boolean} The layer has a renderer.\n     */\n    Layer.prototype.hasRenderer = function () {\n        return !!this.renderer_;\n    };\n    /**\n     * Create a renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n     * @protected\n     */\n    Layer.prototype.createRenderer = function () {\n        return null;\n    };\n    /**\n     * Clean up.\n     */\n    Layer.prototype.disposeInternal = function () {\n        if (this.renderer_) {\n            this.renderer_.dispose();\n            delete this.renderer_;\n        }\n        this.setSource(null);\n        _super.prototype.disposeInternal.call(this);\n    };\n    return Layer;\n}(BaseLayer));\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n    if (!layerState.visible) {\n        return false;\n    }\n    var resolution = viewState.resolution;\n    if (resolution < layerState.minResolution ||\n        resolution >= layerState.maxResolution) {\n        return false;\n    }\n    var zoom = viewState.zoom;\n    return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\nexport default Layer;\n//# sourceMappingURL=Layer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport SourceState from '../source/State.js';\nimport { abstract } from '../util.js';\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nvar LayerRenderer = /** @class */ (function (_super) {\n    __extends(LayerRenderer, _super);\n    /**\n     * @param {LayerType} layer Layer.\n     */\n    function LayerRenderer(layer) {\n        var _this = _super.call(this) || this;\n        /** @private */\n        _this.boundHandleImageChange_ = _this.handleImageChange_.bind(_this);\n        /**\n         * @protected\n         * @type {LayerType}\n         */\n        _this.layer_ = layer;\n        /**\n         * @type {import(\"../render/canvas/ExecutorGroup\").default}\n         */\n        _this.declutterExecutorGroup = null;\n        return _this;\n    }\n    /**\n     * Asynchronous layer level hit detection.\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n     * an array of features.\n     */\n    LayerRenderer.prototype.getFeatures = function (pixel) {\n        return abstract();\n    };\n    /**\n     * Determine whether render should be called.\n     * @abstract\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {boolean} Layer is ready to be rendered.\n     */\n    LayerRenderer.prototype.prepareFrame = function (frameState) {\n        return abstract();\n    };\n    /**\n     * Render the layer.\n     * @abstract\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {HTMLElement} target Target that may be used to render content to.\n     * @return {HTMLElement} The rendered element.\n     */\n    LayerRenderer.prototype.renderFrame = function (frameState, target) {\n        return abstract();\n    };\n    /**\n     * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n     * @param {number} zoom Zoom level.\n     * @param {import(\"../Tile.js\").default} tile Tile.\n     * @return {boolean|void} If `false`, the tile will not be considered loaded.\n     */\n    LayerRenderer.prototype.loadedTileCallback = function (tiles, zoom, tile) {\n        if (!tiles[zoom]) {\n            tiles[zoom] = {};\n        }\n        tiles[zoom][tile.tileCoord.toString()] = tile;\n        return undefined;\n    };\n    /**\n     * Create a function that adds loaded tiles to the tile lookup.\n     * @param {import(\"../source/Tile.js\").default} source Tile source.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n     * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n     * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n     *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n     * @protected\n     */\n    LayerRenderer.prototype.createLoadedTileFinder = function (source, projection, tiles) {\n        return (\n        /**\n         * @param {number} zoom Zoom level.\n         * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n         * @return {boolean} The tile range is fully loaded.\n         * @this {LayerRenderer}\n         */\n        function (zoom, tileRange) {\n            var callback = this.loadedTileCallback.bind(this, tiles, zoom);\n            return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n        }.bind(this));\n    };\n    /**\n     * @abstract\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n     * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    LayerRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, callback, matches) {\n        return undefined;\n    };\n    /**\n     * @abstract\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n     *    location, null will be returned.  If there is data, but pixel values cannot be\n     *    returned, and empty array will be returned.\n     */\n    LayerRenderer.prototype.getDataAtPixel = function (pixel, frameState, hitTolerance) {\n        return null;\n    };\n    /**\n     * @return {LayerType} Layer.\n     */\n    LayerRenderer.prototype.getLayer = function () {\n        return this.layer_;\n    };\n    /**\n     * Perform action necessary to get the layer rendered after new fonts have loaded\n     * @abstract\n     */\n    LayerRenderer.prototype.handleFontsChanged = function () { };\n    /**\n     * Handle changes in image state.\n     * @param {import(\"../events/Event.js\").default} event Image change event.\n     * @private\n     */\n    LayerRenderer.prototype.handleImageChange_ = function (event) {\n        var image = /** @type {import(\"../Image.js\").default} */ (event.target);\n        if (image.getState() === ImageState.LOADED) {\n            this.renderIfReadyAndVisible();\n        }\n    };\n    /**\n     * Load the image if not already loaded, and register the image change\n     * listener if needed.\n     * @param {import(\"../ImageBase.js\").default} image Image.\n     * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n     * @protected\n     */\n    LayerRenderer.prototype.loadImage = function (image) {\n        var imageState = image.getState();\n        if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n            image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n        }\n        if (imageState == ImageState.IDLE) {\n            image.load();\n            imageState = image.getState();\n        }\n        return imageState == ImageState.LOADED;\n    };\n    /**\n     * @protected\n     */\n    LayerRenderer.prototype.renderIfReadyAndVisible = function () {\n        var layer = this.getLayer();\n        if (layer.getVisible() && layer.getSourceState() == SourceState.READY) {\n            layer.changed();\n        }\n    };\n    return LayerRenderer;\n}(Observable));\nexport default LayerRenderer;\n//# sourceMappingURL=Layer.js.map","/**\n * @module ol/render/Event\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport Event from '../events/Event.js';\nvar RenderEvent = /** @class */ (function (_super) {\n    __extends(RenderEvent, _super);\n    /**\n     * @param {import(\"./EventType.js\").default} type Type.\n     * @param {import(\"../transform.js\").Transform} [opt_inversePixelTransform] Transform for\n     *     CSS pixels to rendered pixels.\n     * @param {import(\"../PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n     * @param {?CanvasRenderingContext2D} [opt_context] Context.\n     */\n    function RenderEvent(type, opt_inversePixelTransform, opt_frameState, opt_context) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n         * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n         * @type {import(\"../transform.js\").Transform|undefined}\n         * @api\n         */\n        _this.inversePixelTransform = opt_inversePixelTransform;\n        /**\n         * An object representing the current render frame state.\n         * @type {import(\"../PluggableMap.js\").FrameState|undefined}\n         * @api\n         */\n        _this.frameState = opt_frameState;\n        /**\n         * Canvas context. Not available when the event is dispatched by the map. Only available\n         * when a Canvas renderer is used, null otherwise.\n         * @type {CanvasRenderingContext2D|null|undefined}\n         * @api\n         */\n        _this.context = opt_context;\n        return _this;\n    }\n    return RenderEvent;\n}(Event));\nexport default RenderEvent;\n//# sourceMappingURL=Event.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport { apply as applyTransform, compose as composeTransform, create as createTransform, } from '../../transform.js';\nimport { containsCoordinate, getBottomLeft, getBottomRight, getTopLeft, getTopRight, } from '../../extent.js';\nimport { createCanvasContext2D } from '../../dom.js';\nimport { cssOpacity } from '../../css.js';\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nvar CanvasLayerRenderer = /** @class */ (function (_super) {\n    __extends(CanvasLayerRenderer, _super);\n    /**\n     * @param {LayerType} layer Layer.\n     */\n    function CanvasLayerRenderer(layer) {\n        var _this = _super.call(this, layer) || this;\n        /**\n         * @protected\n         * @type {HTMLElement}\n         */\n        _this.container = null;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.renderedResolution;\n        /**\n         * A temporary transform.  The values in this transform should only be used in a\n         * function that sets the values.\n         * @protected\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.tempTransform = createTransform();\n        /**\n         * The transform for rendered pixels to viewport CSS pixels.  This transform must\n         * be set when rendering a frame and may be used by other functions after rendering.\n         * @protected\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.pixelTransform = createTransform();\n        /**\n         * The transform for viewport CSS pixels to rendered pixels.  This transform must\n         * be set when rendering a frame and may be used by other functions after rendering.\n         * @protected\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.inversePixelTransform = createTransform();\n        /**\n         * @type {CanvasRenderingContext2D}\n         */\n        _this.context = null;\n        /**\n         * @type {boolean}\n         */\n        _this.containerReused = false;\n        return _this;\n    }\n    /**\n     * Get a rendering container from an existing target, if compatible.\n     * @param {HTMLElement} target Potential render target.\n     * @param {string} transform CSS Transform.\n     * @param {number} opacity Opacity.\n     */\n    CanvasLayerRenderer.prototype.useContainer = function (target, transform, opacity) {\n        var layerClassName = this.getLayer().getClassName();\n        var container, context;\n        if (target &&\n            target.style.opacity === cssOpacity(opacity) &&\n            target.className === layerClassName) {\n            var canvas = target.firstElementChild;\n            if (canvas instanceof HTMLCanvasElement) {\n                context = canvas.getContext('2d');\n            }\n        }\n        if (context && context.canvas.style.transform === transform) {\n            // Container of the previous layer renderer can be used.\n            this.container = target;\n            this.context = context;\n            this.containerReused = true;\n        }\n        else if (this.containerReused) {\n            // Previously reused container cannot be used any more.\n            this.container = null;\n            this.context = null;\n            this.containerReused = false;\n        }\n        if (!this.container) {\n            container = document.createElement('div');\n            container.className = layerClassName;\n            var style = container.style;\n            style.position = 'absolute';\n            style.width = '100%';\n            style.height = '100%';\n            context = createCanvasContext2D();\n            var canvas = context.canvas;\n            container.appendChild(canvas);\n            style = canvas.style;\n            style.position = 'absolute';\n            style.left = '0';\n            style.transformOrigin = 'top left';\n            this.container = container;\n            this.context = context;\n        }\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.clipUnrotated = function (context, frameState, extent) {\n        var topLeft = getTopLeft(extent);\n        var topRight = getTopRight(extent);\n        var bottomRight = getBottomRight(extent);\n        var bottomLeft = getBottomLeft(extent);\n        applyTransform(frameState.coordinateToPixelTransform, topLeft);\n        applyTransform(frameState.coordinateToPixelTransform, topRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n        var inverted = this.inversePixelTransform;\n        applyTransform(inverted, topLeft);\n        applyTransform(inverted, topRight);\n        applyTransform(inverted, bottomRight);\n        applyTransform(inverted, bottomLeft);\n        context.save();\n        context.beginPath();\n        context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n        context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n        context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n        context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n        context.clip();\n    };\n    /**\n     * @param {import(\"../../render/EventType.js\").default} type Event type.\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @private\n     */\n    CanvasLayerRenderer.prototype.dispatchRenderEvent_ = function (type, context, frameState) {\n        var layer = this.getLayer();\n        if (layer.hasListener(type)) {\n            var event_1 = new RenderEvent(type, this.inversePixelTransform, frameState, context);\n            layer.dispatchEvent(event_1);\n        }\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.preRender = function (context, frameState) {\n        this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.postRender = function (context, frameState) {\n        this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n    };\n    /**\n     * Creates a transform for rendering to an element that will be rotated after rendering.\n     * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n     * @param {number} resolution Resolution.\n     * @param {number} rotation Rotation.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {number} width Width of the rendered element (in pixels).\n     * @param {number} height Height of the rendered element (in pixels).\n     * @param {number} offsetX Offset on the x-axis in view coordinates.\n     * @protected\n     * @return {!import(\"../../transform.js\").Transform} Transform.\n     */\n    CanvasLayerRenderer.prototype.getRenderTransform = function (center, resolution, rotation, pixelRatio, width, height, offsetX) {\n        var dx1 = width / 2;\n        var dy1 = height / 2;\n        var sx = pixelRatio / resolution;\n        var sy = -sx;\n        var dx2 = -center[0] + offsetX;\n        var dy2 = -center[1];\n        return composeTransform(this.tempTransform, dx1, dy1, sx, sy, -rotation, dx2, dy2);\n    };\n    /**\n     * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n     *    location, null will be returned.  If there is data, but pixel values cannot be\n     *    returned, and empty array will be returned.\n     */\n    CanvasLayerRenderer.prototype.getDataAtPixel = function (pixel, frameState, hitTolerance) {\n        var renderPixel = applyTransform(this.inversePixelTransform, pixel.slice());\n        var context = this.context;\n        var layer = this.getLayer();\n        var layerExtent = layer.getExtent();\n        if (layerExtent) {\n            var renderCoordinate = applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n            /** get only data inside of the layer extent */\n            if (!containsCoordinate(layerExtent, renderCoordinate)) {\n                return null;\n            }\n        }\n        var data;\n        try {\n            var x = Math.round(renderPixel[0]);\n            var y = Math.round(renderPixel[1]);\n            var newCanvas = document.createElement('canvas');\n            var newContext = newCanvas.getContext('2d');\n            newCanvas.width = 1;\n            newCanvas.height = 1;\n            newContext.clearRect(0, 0, 1, 1);\n            newContext.drawImage(context.canvas, x, y, 1, 1, 0, 0, 1, 1);\n            data = newContext.getImageData(0, 0, 1, 1).data;\n        }\n        catch (err) {\n            if (err.name === 'SecurityError') {\n                // tainted canvas, we assume there is data at the given pixel (although there might not be)\n                return new Uint8Array();\n            }\n            return data;\n        }\n        if (data[3] === 0) {\n            return null;\n        }\n        return data;\n    };\n    return CanvasLayerRenderer;\n}(LayerRenderer));\nexport default CanvasLayerRenderer;\n//# sourceMappingURL=Layer.js.map","/**\n * @module ol/ViewHint\n */\n/**\n * @enum {number}\n */\nexport default {\n    ANIMATING: 0,\n    INTERACTING: 1,\n};\n//# sourceMappingURL=ViewHint.js.map","/**\n * @module ol/style/IconImageCache\n */\nimport { asString } from '../color.js';\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache~shared}.\n */\nvar IconImageCache = /** @class */ (function () {\n    function IconImageCache() {\n        /**\n         * @type {!Object<string, import(\"./IconImage.js\").default>}\n         * @private\n         */\n        this.cache_ = {};\n        /**\n         * @type {number}\n         * @private\n         */\n        this.cacheSize_ = 0;\n        /**\n         * @type {number}\n         * @private\n         */\n        this.maxCacheSize_ = 32;\n    }\n    /**\n     * FIXME empty description for jsdoc\n     */\n    IconImageCache.prototype.clear = function () {\n        this.cache_ = {};\n        this.cacheSize_ = 0;\n    };\n    /**\n     * @return {boolean} Can expire cache.\n     */\n    IconImageCache.prototype.canExpireCache = function () {\n        return this.cacheSize_ > this.maxCacheSize_;\n    };\n    /**\n     * FIXME empty description for jsdoc\n     */\n    IconImageCache.prototype.expire = function () {\n        if (this.canExpireCache()) {\n            var i = 0;\n            for (var key in this.cache_) {\n                var iconImage = this.cache_[key];\n                if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n                    delete this.cache_[key];\n                    --this.cacheSize_;\n                }\n            }\n        }\n    };\n    /**\n     * @param {string} src Src.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {import(\"../color.js\").Color} color Color.\n     * @return {import(\"./IconImage.js\").default} Icon image.\n     */\n    IconImageCache.prototype.get = function (src, crossOrigin, color) {\n        var key = getKey(src, crossOrigin, color);\n        return key in this.cache_ ? this.cache_[key] : null;\n    };\n    /**\n     * @param {string} src Src.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {import(\"../color.js\").Color} color Color.\n     * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n     */\n    IconImageCache.prototype.set = function (src, crossOrigin, color, iconImage) {\n        var key = getKey(src, crossOrigin, color);\n        this.cache_[key] = iconImage;\n        ++this.cacheSize_;\n    };\n    /**\n     * Set the cache size of the icon cache. Default is `32`. Change this value when\n     * your map uses more than 32 different icon images and you are not caching icon\n     * styles on the application level.\n     * @param {number} maxCacheSize Cache max size.\n     * @api\n     */\n    IconImageCache.prototype.setSize = function (maxCacheSize) {\n        this.maxCacheSize_ = maxCacheSize;\n        this.expire();\n    };\n    return IconImageCache;\n}());\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n    var colorString = color ? asString(color) : 'null';\n    return crossOrigin + ':' + src + ':' + colorString;\n}\nexport default IconImageCache;\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport var shared = new IconImageCache();\n//# sourceMappingURL=IconImageCache.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/ImageBase\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport { abstract } from './util.js';\n/**\n * @abstract\n */\nvar ImageBase = /** @class */ (function (_super) {\n    __extends(ImageBase, _super);\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./ImageState.js\").default} state State.\n     */\n    function ImageBase(extent, resolution, pixelRatio, state) {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {import(\"./extent.js\").Extent}\n         */\n        _this.extent = extent;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ = pixelRatio;\n        /**\n         * @protected\n         * @type {number|undefined}\n         */\n        _this.resolution = resolution;\n        /**\n         * @protected\n         * @type {import(\"./ImageState.js\").default}\n         */\n        _this.state = state;\n        return _this;\n    }\n    /**\n     * @protected\n     */\n    ImageBase.prototype.changed = function () {\n        this.dispatchEvent(EventType.CHANGE);\n    };\n    /**\n     * @return {import(\"./extent.js\").Extent} Extent.\n     */\n    ImageBase.prototype.getExtent = function () {\n        return this.extent;\n    };\n    /**\n     * @abstract\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n     */\n    ImageBase.prototype.getImage = function () {\n        return abstract();\n    };\n    /**\n     * @return {number} PixelRatio.\n     */\n    ImageBase.prototype.getPixelRatio = function () {\n        return this.pixelRatio_;\n    };\n    /**\n     * @return {number} Resolution.\n     */\n    ImageBase.prototype.getResolution = function () {\n        return /** @type {number} */ (this.resolution);\n    };\n    /**\n     * @return {import(\"./ImageState.js\").default} State.\n     */\n    ImageBase.prototype.getState = function () {\n        return this.state;\n    };\n    /**\n     * Load not yet loaded URI.\n     * @abstract\n     */\n    ImageBase.prototype.load = function () {\n        abstract();\n    };\n    return ImageBase;\n}(EventTarget));\nexport default ImageBase;\n//# sourceMappingURL=ImageBase.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Image\n */\nimport EventType from './events/EventType.js';\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport { IMAGE_DECODE } from './has.js';\nimport { getHeight } from './extent.js';\nimport { listenOnce, unlistenByKey } from './events.js';\n/**\n * A function that takes an {@link module:ol/Image~Image} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~Image#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(ImageWrapper, string): void} LoadFunction\n * @api\n */\nvar ImageWrapper = /** @class */ (function (_super) {\n    __extends(ImageWrapper, _super);\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {string} src Image source URI.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {LoadFunction} imageLoadFunction Image load function.\n     */\n    function ImageWrapper(extent, resolution, pixelRatio, src, crossOrigin, imageLoadFunction) {\n        var _this = _super.call(this, extent, resolution, pixelRatio, ImageState.IDLE) || this;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.src_ = src;\n        /**\n         * @private\n         * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n         */\n        _this.image_ = new Image();\n        if (crossOrigin !== null) {\n            _this.image_.crossOrigin = crossOrigin;\n        }\n        /**\n         * @private\n         * @type {?function():void}\n         */\n        _this.unlisten_ = null;\n        /**\n         * @protected\n         * @type {import(\"./ImageState.js\").default}\n         */\n        _this.state = ImageState.IDLE;\n        /**\n         * @private\n         * @type {LoadFunction}\n         */\n        _this.imageLoadFunction_ = imageLoadFunction;\n        return _this;\n    }\n    /**\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n     * @api\n     */\n    ImageWrapper.prototype.getImage = function () {\n        return this.image_;\n    };\n    /**\n     * Tracks loading or read errors.\n     *\n     * @private\n     */\n    ImageWrapper.prototype.handleImageError_ = function () {\n        this.state = ImageState.ERROR;\n        this.unlistenImage_();\n        this.changed();\n    };\n    /**\n     * Tracks successful image load.\n     *\n     * @private\n     */\n    ImageWrapper.prototype.handleImageLoad_ = function () {\n        if (this.resolution === undefined) {\n            this.resolution = getHeight(this.extent) / this.image_.height;\n        }\n        this.state = ImageState.LOADED;\n        this.unlistenImage_();\n        this.changed();\n    };\n    /**\n     * Load the image or retry if loading previously failed.\n     * Loading is taken care of by the tile queue, and calling this method is\n     * only needed for preloading or for reloading in case of an error.\n     * @api\n     */\n    ImageWrapper.prototype.load = function () {\n        if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n            this.state = ImageState.LOADING;\n            this.changed();\n            this.imageLoadFunction_(this, this.src_);\n            this.unlisten_ = listenImage(this.image_, this.handleImageLoad_.bind(this), this.handleImageError_.bind(this));\n        }\n    };\n    /**\n     * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n     */\n    ImageWrapper.prototype.setImage = function (image) {\n        this.image_ = image;\n        this.resolution = getHeight(this.extent) / this.image_.height;\n    };\n    /**\n     * Discards event handlers which listen for load completion or errors.\n     *\n     * @private\n     */\n    ImageWrapper.prototype.unlistenImage_ = function () {\n        if (this.unlisten_) {\n            this.unlisten_();\n            this.unlisten_ = null;\n        }\n    };\n    return ImageWrapper;\n}(ImageBase));\n/**\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n    var img = /** @type {HTMLImageElement} */ (image);\n    if (img.src && IMAGE_DECODE) {\n        var promise = img.decode();\n        var listening_1 = true;\n        var unlisten = function () {\n            listening_1 = false;\n        };\n        promise\n            .then(function () {\n            if (listening_1) {\n                loadHandler();\n            }\n        })\n            .catch(function (error) {\n            if (listening_1) {\n                // FIXME: Unconditionally call errorHandler() when this bug is fixed upstream:\n                //        https://bugs.webkit.org/show_bug.cgi?id=198527\n                if (error.name === 'EncodingError' &&\n                    error.message === 'Invalid image type.') {\n                    loadHandler();\n                }\n                else {\n                    errorHandler();\n                }\n            }\n        });\n        return unlisten;\n    }\n    var listenerKeys = [\n        listenOnce(img, EventType.LOAD, loadHandler),\n        listenOnce(img, EventType.ERROR, errorHandler),\n    ];\n    return function unlisten() {\n        listenerKeys.forEach(unlistenByKey);\n    };\n}\nexport default ImageWrapper;\n//# sourceMappingURL=Image.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport SourceState from './State.js';\nimport { abstract } from '../util.js';\nimport { get as getProjection } from '../proj.js';\n/**\n * A function that takes a {@link module:ol/PluggableMap~FrameState} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../PluggableMap.js\").FrameState): (string|Array<string>)} Attribution\n */\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./State.js\").default} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nvar Source = /** @class */ (function (_super) {\n    __extends(Source, _super);\n    /**\n     * @param {Options} options Source options.\n     */\n    function Source(options) {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {import(\"../proj/Projection.js\").default}\n         */\n        _this.projection = getProjection(options.projection);\n        /**\n         * @private\n         * @type {?Attribution}\n         */\n        _this.attributions_ = adaptAttributions(options.attributions);\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.attributionsCollapsible_ =\n            options.attributionsCollapsible !== undefined\n                ? options.attributionsCollapsible\n                : true;\n        /**\n         * This source is currently loading data. Sources that defer loading to the\n         * map's tile queue never set this to `true`.\n         * @type {boolean}\n         */\n        _this.loading = false;\n        /**\n         * @private\n         * @type {import(\"./State.js\").default}\n         */\n        _this.state_ =\n            options.state !== undefined ? options.state : SourceState.READY;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n        /**\n         * @protected\n         * @type {function(import(\"../View.js\").ViewOptions):void}\n         */\n        _this.viewResolver = null;\n        /**\n         * @protected\n         * @type {function(Error):void}\n         */\n        _this.viewRejector = null;\n        var self = _this;\n        /**\n         * @private\n         * @type {Promise<import(\"../View.js\").ViewOptions>}\n         */\n        _this.viewPromise_ = new Promise(function (resolve, reject) {\n            self.viewResolver = resolve;\n            self.viewRejector = reject;\n        });\n        return _this;\n    }\n    /**\n     * Get the attribution function for the source.\n     * @return {?Attribution} Attribution function.\n     * @api\n     */\n    Source.prototype.getAttributions = function () {\n        return this.attributions_;\n    };\n    /**\n     * @return {boolean} Attributions are collapsible.\n     * @api\n     */\n    Source.prototype.getAttributionsCollapsible = function () {\n        return this.attributionsCollapsible_;\n    };\n    /**\n     * Get the projection of the source.\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     * @api\n     */\n    Source.prototype.getProjection = function () {\n        return this.projection;\n    };\n    /**\n     * @abstract\n     * @return {Array<number>|undefined} Resolutions.\n     */\n    Source.prototype.getResolutions = function () {\n        return abstract();\n    };\n    /**\n     * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n     */\n    Source.prototype.getView = function () {\n        return this.viewPromise_;\n    };\n    /**\n     * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\n     * @return {import(\"./State.js\").default} State.\n     * @api\n     */\n    Source.prototype.getState = function () {\n        return this.state_;\n    };\n    /**\n     * @return {boolean|undefined} Wrap X.\n     */\n    Source.prototype.getWrapX = function () {\n        return this.wrapX_;\n    };\n    /**\n     * @return {Object|undefined} Context options.\n     */\n    Source.prototype.getContextOptions = function () {\n        return undefined;\n    };\n    /**\n     * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n     * @api\n     */\n    Source.prototype.refresh = function () {\n        this.changed();\n    };\n    /**\n     * Set the attributions of the source.\n     * @param {AttributionLike|undefined} attributions Attributions.\n     *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n     *     or `undefined`.\n     * @api\n     */\n    Source.prototype.setAttributions = function (attributions) {\n        this.attributions_ = adaptAttributions(attributions);\n        this.changed();\n    };\n    /**\n     * Set the state of the source.\n     * @param {import(\"./State.js\").default} state State.\n     */\n    Source.prototype.setState = function (state) {\n        this.state_ = state;\n        this.changed();\n    };\n    return Source;\n}(BaseObject));\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {?Attribution} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n    if (!attributionLike) {\n        return null;\n    }\n    if (Array.isArray(attributionLike)) {\n        return function (frameState) {\n            return attributionLike;\n        };\n    }\n    if (typeof attributionLike === 'function') {\n        return attributionLike;\n    }\n    return function (frameState) {\n        return [attributionLike];\n    };\n}\nexport default Source;\n//# sourceMappingURL=Source.js.map","/**\n * @module ol/TileState\n */\n/**\n * @enum {number}\n */\nexport default {\n    IDLE: 0,\n    LOADING: 1,\n    LOADED: 2,\n    /**\n     * Indicates that tile loading failed\n     * @type {number}\n     */\n    ERROR: 3,\n    EMPTY: 4,\n};\n//# sourceMappingURL=TileState.js.map","/**\n * @module ol/easing\n */\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n    return Math.pow(t, 3);\n}\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n    return 1 - easeIn(1 - t);\n}\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n    return 3 * t * t - 2 * t * t * t;\n}\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n    return t;\n}\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n    if (t < 0.5) {\n        return inAndOut(2 * t);\n    }\n    else {\n        return 1 - inAndOut(2 * (t - 0.5));\n    }\n}\n//# sourceMappingURL=easing.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport { abstract } from './util.js';\nimport { easeIn } from './easing.js';\n/**\n * A function that takes an {@link module:ol/Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   var xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     var data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n/**\n * {@link module:ol/source/Tile~Tile} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @api\n */\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nvar Tile = /** @class */ (function (_super) {\n    __extends(Tile, _super);\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"./TileState.js\").default} state State.\n     * @param {Options} [opt_options] Tile options.\n     */\n    function Tile(tileCoord, state, opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @type {import(\"./tilecoord.js\").TileCoord}\n         */\n        _this.tileCoord = tileCoord;\n        /**\n         * @protected\n         * @type {import(\"./TileState.js\").default}\n         */\n        _this.state = state;\n        /**\n         * An \"interim\" tile for this tile. The interim tile may be used while this\n         * one is loading, for \"smooth\" transitions when changing params/dimensions\n         * on the source.\n         * @type {Tile}\n         */\n        _this.interimTile = null;\n        /**\n         * A key assigned to the tile. This is used by the tile source to determine\n         * if this tile can effectively be used, or if a new tile should be created\n         * and this one be used as an interim tile for this new tile.\n         * @type {string}\n         */\n        _this.key = '';\n        /**\n         * The duration for the opacity transition.\n         * @type {number}\n         */\n        _this.transition_ =\n            options.transition === undefined ? 250 : options.transition;\n        /**\n         * Lookup of start times for rendering transitions.  If the start time is\n         * equal to -1, the transition is complete.\n         * @type {Object<string, number>}\n         */\n        _this.transitionStarts_ = {};\n        return _this;\n    }\n    /**\n     * @protected\n     */\n    Tile.prototype.changed = function () {\n        this.dispatchEvent(EventType.CHANGE);\n    };\n    /**\n     * Called by the tile cache when the tile is removed from the cache due to expiry\n     */\n    Tile.prototype.release = function () { };\n    /**\n     * @return {string} Key.\n     */\n    Tile.prototype.getKey = function () {\n        return this.key + '/' + this.tileCoord;\n    };\n    /**\n     * Get the interim tile most suitable for rendering using the chain of interim\n     * tiles. This corresponds to the  most recent tile that has been loaded, if no\n     * such tile exists, the original tile is returned.\n     * @return {!Tile} Best tile for rendering.\n     */\n    Tile.prototype.getInterimTile = function () {\n        if (!this.interimTile) {\n            //empty chain\n            return this;\n        }\n        var tile = this.interimTile;\n        // find the first loaded tile and return it. Since the chain is sorted in\n        // decreasing order of creation time, there is no need to search the remainder\n        // of the list (all those tiles correspond to older requests and will be\n        // cleaned up by refreshInterimChain)\n        do {\n            if (tile.getState() == TileState.LOADED) {\n                // Show tile immediately instead of fading it in after loading, because\n                // the interim tile is in place already\n                this.transition_ = 0;\n                return tile;\n            }\n            tile = tile.interimTile;\n        } while (tile);\n        // we can not find a better tile\n        return this;\n    };\n    /**\n     * Goes through the chain of interim tiles and discards sections of the chain\n     * that are no longer relevant.\n     */\n    Tile.prototype.refreshInterimChain = function () {\n        if (!this.interimTile) {\n            return;\n        }\n        var tile = this.interimTile;\n        var prev = /** @type {Tile} */ (this);\n        do {\n            if (tile.getState() == TileState.LOADED) {\n                //we have a loaded tile, we can discard the rest of the list\n                //we would could abort any LOADING tile request\n                //older than this tile (i.e. any LOADING tile following this entry in the chain)\n                tile.interimTile = null;\n                break;\n            }\n            else if (tile.getState() == TileState.LOADING) {\n                //keep this LOADING tile any loaded tiles later in the chain are\n                //older than this tile, so we're still interested in the request\n                prev = tile;\n            }\n            else if (tile.getState() == TileState.IDLE) {\n                //the head of the list is the most current tile, we don't need\n                //to start any other requests for this chain\n                prev.interimTile = tile.interimTile;\n            }\n            else {\n                prev = tile;\n            }\n            tile = prev.interimTile;\n        } while (tile);\n    };\n    /**\n     * Get the tile coordinate for this tile.\n     * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n     * @api\n     */\n    Tile.prototype.getTileCoord = function () {\n        return this.tileCoord;\n    };\n    /**\n     * @return {import(\"./TileState.js\").default} State.\n     */\n    Tile.prototype.getState = function () {\n        return this.state;\n    };\n    /**\n     * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n     * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n     * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n     * the tile queue and will block other requests.\n     * @param {import(\"./TileState.js\").default} state State.\n     * @api\n     */\n    Tile.prototype.setState = function (state) {\n        if (this.state !== TileState.ERROR && this.state > state) {\n            throw new Error('Tile load sequence violation');\n        }\n        this.state = state;\n        this.changed();\n    };\n    /**\n     * Load the image or retry if loading previously failed.\n     * Loading is taken care of by the tile queue, and calling this method is\n     * only needed for preloading or for reloading in case of an error.\n     * @abstract\n     * @api\n     */\n    Tile.prototype.load = function () {\n        abstract();\n    };\n    /**\n     * Get the alpha value for rendering.\n     * @param {string} id An id for the renderer.\n     * @param {number} time The render frame time.\n     * @return {number} A number between 0 and 1.\n     */\n    Tile.prototype.getAlpha = function (id, time) {\n        if (!this.transition_) {\n            return 1;\n        }\n        var start = this.transitionStarts_[id];\n        if (!start) {\n            start = time;\n            this.transitionStarts_[id] = start;\n        }\n        else if (start === -1) {\n            return 1;\n        }\n        var delta = time - start + 1000 / 60; // avoid rendering at 0\n        if (delta >= this.transition_) {\n            return 1;\n        }\n        return easeIn(delta / this.transition_);\n    };\n    /**\n     * Determine if a tile is in an alpha transition.  A tile is considered in\n     * transition if tile.getAlpha() has not yet been called or has been called\n     * and returned 1.\n     * @param {string} id An id for the renderer.\n     * @return {boolean} The tile is in transition.\n     */\n    Tile.prototype.inTransition = function (id) {\n        if (!this.transition_) {\n            return false;\n        }\n        return this.transitionStarts_[id] !== -1;\n    };\n    /**\n     * Mark a transition as complete.\n     * @param {string} id An id for the renderer.\n     */\n    Tile.prototype.endTransition = function (id) {\n        if (this.transition_) {\n            this.transitionStarts_[id] = -1;\n        }\n    };\n    return Tile;\n}(EventTarget));\nexport default Tile;\n//# sourceMappingURL=Tile.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport { createCanvasContext2D } from './dom.js';\nimport { listenImage } from './Image.js';\nvar ImageTile = /** @class */ (function (_super) {\n    __extends(ImageTile, _super);\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"./TileState.js\").default} state State.\n     * @param {string} src Image source URI.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n     * @param {import(\"./Tile.js\").Options} [opt_options] Tile options.\n     */\n    function ImageTile(tileCoord, state, src, crossOrigin, tileLoadFunction, opt_options) {\n        var _this = _super.call(this, tileCoord, state, opt_options) || this;\n        /**\n         * @private\n         * @type {?string}\n         */\n        _this.crossOrigin_ = crossOrigin;\n        /**\n         * Image URI\n         *\n         * @private\n         * @type {string}\n         */\n        _this.src_ = src;\n        _this.key = src;\n        /**\n         * @private\n         * @type {HTMLImageElement|HTMLCanvasElement}\n         */\n        _this.image_ = new Image();\n        if (crossOrigin !== null) {\n            _this.image_.crossOrigin = crossOrigin;\n        }\n        /**\n         * @private\n         * @type {?function():void}\n         */\n        _this.unlisten_ = null;\n        /**\n         * @private\n         * @type {import(\"./Tile.js\").LoadFunction}\n         */\n        _this.tileLoadFunction_ = tileLoadFunction;\n        return _this;\n    }\n    /**\n     * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n     * @api\n     */\n    ImageTile.prototype.getImage = function () {\n        return this.image_;\n    };\n    /**\n     * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\n     * @param {HTMLCanvasElement|HTMLImageElement} element Element.\n     */\n    ImageTile.prototype.setImage = function (element) {\n        this.image_ = element;\n        this.state = TileState.LOADED;\n        this.unlistenImage_();\n        this.changed();\n    };\n    /**\n     * Tracks loading or read errors.\n     *\n     * @private\n     */\n    ImageTile.prototype.handleImageError_ = function () {\n        this.state = TileState.ERROR;\n        this.unlistenImage_();\n        this.image_ = getBlankImage();\n        this.changed();\n    };\n    /**\n     * Tracks successful image load.\n     *\n     * @private\n     */\n    ImageTile.prototype.handleImageLoad_ = function () {\n        var image = /** @type {HTMLImageElement} */ (this.image_);\n        if (image.naturalWidth && image.naturalHeight) {\n            this.state = TileState.LOADED;\n        }\n        else {\n            this.state = TileState.EMPTY;\n        }\n        this.unlistenImage_();\n        this.changed();\n    };\n    /**\n     * Load not yet loaded URI.\n     * @api\n     */\n    ImageTile.prototype.load = function () {\n        if (this.state == TileState.ERROR) {\n            this.state = TileState.IDLE;\n            this.image_ = new Image();\n            if (this.crossOrigin_ !== null) {\n                this.image_.crossOrigin = this.crossOrigin_;\n            }\n        }\n        if (this.state == TileState.IDLE) {\n            this.state = TileState.LOADING;\n            this.changed();\n            this.tileLoadFunction_(this, this.src_);\n            this.unlisten_ = listenImage(this.image_, this.handleImageLoad_.bind(this), this.handleImageError_.bind(this));\n        }\n    };\n    /**\n     * Discards event handlers which listen for load completion or errors.\n     *\n     * @private\n     */\n    ImageTile.prototype.unlistenImage_ = function () {\n        if (this.unlisten_) {\n            this.unlisten_();\n            this.unlisten_ = null;\n        }\n    };\n    return ImageTile;\n}(Tile));\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n    var ctx = createCanvasContext2D(1, 1);\n    ctx.fillStyle = 'rgba(0,0,0,0)';\n    ctx.fillRect(0, 0, 1, 1);\n    return ctx.canvas;\n}\nexport default ImageTile;\n//# sourceMappingURL=ImageTile.js.map","/**\n * @module ol/Kinetic\n */\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nvar Kinetic = /** @class */ (function () {\n    /**\n     * @param {number} decay Rate of decay (must be negative).\n     * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n     * @param {number} delay Delay to consider to calculate the kinetic\n     *     initial values (milliseconds).\n     */\n    function Kinetic(decay, minVelocity, delay) {\n        /**\n         * @private\n         * @type {number}\n         */\n        this.decay_ = decay;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.minVelocity_ = minVelocity;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.delay_ = delay;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.points_ = [];\n        /**\n         * @private\n         * @type {number}\n         */\n        this.angle_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.initialVelocity_ = 0;\n    }\n    /**\n     * FIXME empty description for jsdoc\n     */\n    Kinetic.prototype.begin = function () {\n        this.points_.length = 0;\n        this.angle_ = 0;\n        this.initialVelocity_ = 0;\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     */\n    Kinetic.prototype.update = function (x, y) {\n        this.points_.push(x, y, Date.now());\n    };\n    /**\n     * @return {boolean} Whether we should do kinetic animation.\n     */\n    Kinetic.prototype.end = function () {\n        if (this.points_.length < 6) {\n            // at least 2 points are required (i.e. there must be at least 6 elements\n            // in the array)\n            return false;\n        }\n        var delay = Date.now() - this.delay_;\n        var lastIndex = this.points_.length - 3;\n        if (this.points_[lastIndex + 2] < delay) {\n            // the last tracked point is too old, which means that the user stopped\n            // panning before releasing the map\n            return false;\n        }\n        // get the first point which still falls into the delay time\n        var firstIndex = lastIndex - 3;\n        while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n            firstIndex -= 3;\n        }\n        var duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n        // we don't want a duration of 0 (divide by zero)\n        // we also make sure the user panned for a duration of at least one frame\n        // (1/60s) to compute sane displacement values\n        if (duration < 1000 / 60) {\n            return false;\n        }\n        var dx = this.points_[lastIndex] - this.points_[firstIndex];\n        var dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n        this.angle_ = Math.atan2(dy, dx);\n        this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n        return this.initialVelocity_ > this.minVelocity_;\n    };\n    /**\n     * @return {number} Total distance travelled (pixels).\n     */\n    Kinetic.prototype.getDistance = function () {\n        return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n    };\n    /**\n     * @return {number} Angle of the kinetic panning animation (radians).\n     */\n    Kinetic.prototype.getAngle = function () {\n        return this.angle_;\n    };\n    return Kinetic;\n}());\nexport default Kinetic;\n//# sourceMappingURL=Kinetic.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport { TRUE } from '../functions.js';\nimport { abstract } from '../util.js';\nimport { compose as composeTransform, makeInverse } from '../transform.js';\nimport { getWidth } from '../extent.js';\nimport { shared as iconImageCache } from '../style/IconImageCache.js';\nimport { inView } from '../layer/Layer.js';\nimport { wrapX } from '../coordinate.js';\n/**\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n * @template T\n */\n/**\n * @abstract\n */\nvar MapRenderer = /** @class */ (function (_super) {\n    __extends(MapRenderer, _super);\n    /**\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    function MapRenderer(map) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = map;\n        return _this;\n    }\n    /**\n     * @abstract\n     * @param {import(\"../render/EventType.js\").default} type Event type.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    MapRenderer.prototype.dispatchRenderEvent = function (type, frameState) {\n        abstract();\n    };\n    /**\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @protected\n     */\n    MapRenderer.prototype.calculateMatrices2D = function (frameState) {\n        var viewState = frameState.viewState;\n        var coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n        var pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n        composeTransform(coordinateToPixelTransform, frameState.size[0] / 2, frameState.size[1] / 2, 1 / viewState.resolution, -1 / viewState.resolution, -viewState.rotation, -viewState.center[0], -viewState.center[1]);\n        makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n    };\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {boolean} checkWrapped Check for wrapped geometries.\n     * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n     * @param {S} thisArg Value to use as `this` when executing `callback`.\n     * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n     *     function, only layers which are visible and for which this function\n     *     returns `true` will be tested for features.  By default, all visible\n     *     layers will be tested.\n     * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n     * @return {T|undefined} Callback result.\n     * @template S,T,U\n     */\n    MapRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, checkWrapped, callback, thisArg, layerFilter, thisArg2) {\n        var result;\n        var viewState = frameState.viewState;\n        /**\n         * @param {boolean} managed Managed layer.\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\n         * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n         * @return {T|undefined} Callback result.\n         */\n        function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n            return callback.call(thisArg, feature, managed ? layer : null, geometry);\n        }\n        var projection = viewState.projection;\n        var translatedCoordinate = wrapX(coordinate.slice(), projection);\n        var offsets = [[0, 0]];\n        if (projection.canWrapX() && checkWrapped) {\n            var projectionExtent = projection.getExtent();\n            var worldWidth = getWidth(projectionExtent);\n            offsets.push([-worldWidth, 0], [worldWidth, 0]);\n        }\n        var layerStates = frameState.layerStatesArray;\n        var numLayers = layerStates.length;\n        var matches = /** @type {Array<HitMatch<T>>} */ ([]);\n        var tmpCoord = [];\n        for (var i = 0; i < offsets.length; i++) {\n            for (var j = numLayers - 1; j >= 0; --j) {\n                var layerState = layerStates[j];\n                var layer = layerState.layer;\n                if (layer.hasRenderer() &&\n                    inView(layerState, viewState) &&\n                    layerFilter.call(thisArg2, layer)) {\n                    var layerRenderer = layer.getRenderer();\n                    var source = layer.getSource();\n                    if (layerRenderer && source) {\n                        var coordinates = source.getWrapX()\n                            ? translatedCoordinate\n                            : coordinate;\n                        var callback_1 = forEachFeatureAtCoordinate.bind(null, layerState.managed);\n                        tmpCoord[0] = coordinates[0] + offsets[i][0];\n                        tmpCoord[1] = coordinates[1] + offsets[i][1];\n                        result = layerRenderer.forEachFeatureAtCoordinate(tmpCoord, frameState, hitTolerance, callback_1, matches);\n                    }\n                    if (result) {\n                        return result;\n                    }\n                }\n            }\n        }\n        if (matches.length === 0) {\n            return undefined;\n        }\n        var order = 1 / matches.length;\n        matches.forEach(function (m, i) { return (m.distanceSq += i * order); });\n        matches.sort(function (a, b) { return a.distanceSq - b.distanceSq; });\n        matches.some(function (m) {\n            return (result = m.callback(m.feature, m.layer, m.geometry));\n        });\n        return result;\n    };\n    /**\n     * @abstract\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n     *     callback.\n     * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} layerFilter Layer filter\n     *     function, only layers which are visible and for which this function\n     *     returns `true` will be tested for features.  By default, all visible\n     *     layers will be tested.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    MapRenderer.prototype.forEachLayerAtPixel = function (pixel, frameState, hitTolerance, callback, layerFilter) {\n        return abstract();\n    };\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {boolean} checkWrapped Check for wrapped geometries.\n     * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n     *     function, only layers which are visible and for which this function\n     *     returns `true` will be tested for features.  By default, all visible\n     *     layers will be tested.\n     * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n     * @return {boolean} Is there a feature at the given coordinate?\n     * @template U\n     */\n    MapRenderer.prototype.hasFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, checkWrapped, layerFilter, thisArg) {\n        var hasFeature = this.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, checkWrapped, TRUE, this, layerFilter, thisArg);\n        return hasFeature !== undefined;\n    };\n    /**\n     * @return {import(\"../PluggableMap.js\").default} Map.\n     */\n    MapRenderer.prototype.getMap = function () {\n        return this.map_;\n    };\n    /**\n     * Render.\n     * @abstract\n     * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    MapRenderer.prototype.renderFrame = function (frameState) {\n        abstract();\n    };\n    /**\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @protected\n     */\n    MapRenderer.prototype.scheduleExpireIconCache = function (frameState) {\n        if (iconImageCache.canExpireCache()) {\n            frameState.postRenderFunctions.push(expireIconCache);\n        }\n    };\n    return MapRenderer;\n}(Disposable));\n/**\n * @param {import(\"../PluggableMap.js\").default} map Map.\n * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n    iconImageCache.expire();\n}\nexport default MapRenderer;\n//# sourceMappingURL=Map.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/Composite\n */\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport { CLASS_UNSELECTABLE } from '../css.js';\nimport { checkedFonts } from '../render/canvas.js';\nimport { inView } from '../layer/Layer.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport { replaceChildren } from '../dom.js';\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nvar CompositeMapRenderer = /** @class */ (function (_super) {\n    __extends(CompositeMapRenderer, _super);\n    /**\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    function CompositeMapRenderer(map) {\n        var _this = _super.call(this, map) || this;\n        /**\n         * @type {import(\"../events.js\").EventsKey}\n         */\n        _this.fontChangeListenerKey_ = listen(checkedFonts, ObjectEventType.PROPERTYCHANGE, map.redrawText.bind(map));\n        /**\n         * @private\n         * @type {HTMLDivElement}\n         */\n        _this.element_ = document.createElement('div');\n        var style = _this.element_.style;\n        style.position = 'absolute';\n        style.width = '100%';\n        style.height = '100%';\n        style.zIndex = '0';\n        _this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n        var container = map.getViewport();\n        container.insertBefore(_this.element_, container.firstChild || null);\n        /**\n         * @private\n         * @type {Array<HTMLElement>}\n         */\n        _this.children_ = [];\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderedVisible_ = true;\n        return _this;\n    }\n    /**\n     * @param {import(\"../render/EventType.js\").default} type Event type.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    CompositeMapRenderer.prototype.dispatchRenderEvent = function (type, frameState) {\n        var map = this.getMap();\n        if (map.hasListener(type)) {\n            var event_1 = new RenderEvent(type, undefined, frameState);\n            map.dispatchEvent(event_1);\n        }\n    };\n    CompositeMapRenderer.prototype.disposeInternal = function () {\n        unlistenByKey(this.fontChangeListenerKey_);\n        this.element_.parentNode.removeChild(this.element_);\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * Render.\n     * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    CompositeMapRenderer.prototype.renderFrame = function (frameState) {\n        if (!frameState) {\n            if (this.renderedVisible_) {\n                this.element_.style.display = 'none';\n                this.renderedVisible_ = false;\n            }\n            return;\n        }\n        this.calculateMatrices2D(frameState);\n        this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n        var layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n            return a.zIndex - b.zIndex;\n        });\n        var viewState = frameState.viewState;\n        this.children_.length = 0;\n        /**\n         * @type {Array<import(\"../layer/BaseVector.js\").default>}\n         */\n        var declutterLayers = [];\n        var previousElement = null;\n        for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n            var layerState = layerStatesArray[i];\n            frameState.layerIndex = i;\n            if (!inView(layerState, viewState) ||\n                (layerState.sourceState != SourceState.READY &&\n                    layerState.sourceState != SourceState.UNDEFINED)) {\n                continue;\n            }\n            var layer = layerState.layer;\n            var element = layer.render(frameState, previousElement);\n            if (!element) {\n                continue;\n            }\n            if (element !== previousElement) {\n                this.children_.push(element);\n                previousElement = element;\n            }\n            if ('getDeclutter' in layer) {\n                declutterLayers.push(\n                /** @type {import(\"../layer/BaseVector.js\").default} */ (layer));\n            }\n        }\n        for (var i = declutterLayers.length - 1; i >= 0; --i) {\n            declutterLayers[i].renderDeclutter(frameState);\n        }\n        replaceChildren(this.element_, this.children_);\n        this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n        if (!this.renderedVisible_) {\n            this.element_.style.display = '';\n            this.renderedVisible_ = true;\n        }\n        this.scheduleExpireIconCache(frameState);\n    };\n    /**\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n     *     callback.\n     * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} layerFilter Layer filter\n     *     function, only layers which are visible and for which this function\n     *     returns `true` will be tested for features.  By default, all visible\n     *     layers will be tested.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    CompositeMapRenderer.prototype.forEachLayerAtPixel = function (pixel, frameState, hitTolerance, callback, layerFilter) {\n        var viewState = frameState.viewState;\n        var layerStates = frameState.layerStatesArray;\n        var numLayers = layerStates.length;\n        for (var i = numLayers - 1; i >= 0; --i) {\n            var layerState = layerStates[i];\n            var layer = layerState.layer;\n            if (layer.hasRenderer() &&\n                inView(layerState, viewState) &&\n                layerFilter(layer)) {\n                var layerRenderer = layer.getRenderer();\n                var data = layerRenderer.getDataAtPixel(pixel, frameState, hitTolerance);\n                if (data) {\n                    var result = callback(layer, data);\n                    if (result) {\n                        return result;\n                    }\n                }\n            }\n        }\n        return undefined;\n    };\n    return CompositeMapRenderer;\n}(MapRenderer));\nexport default CompositeMapRenderer;\n//# sourceMappingURL=Composite.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport SourceState from '../source/State.js';\nimport { assert } from '../asserts.js';\nimport { assign, clear } from '../obj.js';\nimport { getIntersection } from '../extent.js';\nimport { getUid } from '../util.js';\nimport { listen, unlistenByKey } from '../events.js';\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:layers', Return>} GroupOnSignature\n */\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|import(\"../Collection.js\").default<import(\"./Base.js\").default>} [layers] Child layers.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n    LAYERS: 'layers',\n};\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nvar LayerGroup = /** @class */ (function (_super) {\n    __extends(LayerGroup, _super);\n    /**\n     * @param {Options} [opt_options] Layer options.\n     */\n    function LayerGroup(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        var baseOptions = /** @type {Options} */ (assign({}, options));\n        delete baseOptions.layers;\n        var layers = options.layers;\n        _this = _super.call(this, baseOptions) || this;\n        /***\n         * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n         */\n        _this.on;\n        /***\n         * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n         */\n        _this.once;\n        /***\n         * @type {GroupOnSignature<void>}\n         */\n        _this.un;\n        /**\n         * @private\n         * @type {Array<import(\"../events.js\").EventsKey>}\n         */\n        _this.layersListenerKeys_ = [];\n        /**\n         * @private\n         * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n         */\n        _this.listenerKeys_ = {};\n        _this.addChangeListener(Property.LAYERS, _this.handleLayersChanged_);\n        if (layers) {\n            if (Array.isArray(layers)) {\n                layers = new Collection(layers.slice(), { unique: true });\n            }\n            else {\n                assert(typeof ( /** @type {?} */(layers).getArray) === 'function', 43); // Expected `layers` to be an array or a `Collection`\n            }\n        }\n        else {\n            layers = new Collection(undefined, { unique: true });\n        }\n        _this.setLayers(layers);\n        return _this;\n    }\n    /**\n     * @private\n     */\n    LayerGroup.prototype.handleLayerChange_ = function () {\n        this.changed();\n    };\n    /**\n     * @private\n     */\n    LayerGroup.prototype.handleLayersChanged_ = function () {\n        this.layersListenerKeys_.forEach(unlistenByKey);\n        this.layersListenerKeys_.length = 0;\n        var layers = this.getLayers();\n        this.layersListenerKeys_.push(listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this), listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this));\n        for (var id in this.listenerKeys_) {\n            this.listenerKeys_[id].forEach(unlistenByKey);\n        }\n        clear(this.listenerKeys_);\n        var layersArray = layers.getArray();\n        for (var i = 0, ii = layersArray.length; i < ii; i++) {\n            var layer = layersArray[i];\n            this.listenerKeys_[getUid(layer)] = [\n                listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n                listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n            ];\n        }\n        this.changed();\n    };\n    /**\n     * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n     * @private\n     */\n    LayerGroup.prototype.handleLayersAdd_ = function (collectionEvent) {\n        var layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n        this.listenerKeys_[getUid(layer)] = [\n            listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n            listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n        ];\n        this.changed();\n    };\n    /**\n     * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n     * @private\n     */\n    LayerGroup.prototype.handleLayersRemove_ = function (collectionEvent) {\n        var layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n        var key = getUid(layer);\n        this.listenerKeys_[key].forEach(unlistenByKey);\n        delete this.listenerKeys_[key];\n        this.changed();\n    };\n    /**\n     * Returns the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n     * in this group.\n     * @return {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} Collection of\n     *   {@link module:ol/layer/Base layers} that are part of this group.\n     * @observable\n     * @api\n     */\n    LayerGroup.prototype.getLayers = function () {\n        return /** @type {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} */ (this.get(Property.LAYERS));\n    };\n    /**\n     * Set the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n     * in this group.\n     * @param {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} layers Collection of\n     *   {@link module:ol/layer/Base layers} that are part of this group.\n     * @observable\n     * @api\n     */\n    LayerGroup.prototype.setLayers = function (layers) {\n        this.set(Property.LAYERS, layers);\n    };\n    /**\n     * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be modified in place).\n     * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n     */\n    LayerGroup.prototype.getLayersArray = function (opt_array) {\n        var array = opt_array !== undefined ? opt_array : [];\n        this.getLayers().forEach(function (layer) {\n            layer.getLayersArray(array);\n        });\n        return array;\n    };\n    /**\n     * Get the layer states list and use this groups z-index as the default\n     * for all layers in this and nested groups, if it is unset at this point.\n     * If opt_states is not provided and this group's z-index is undefined\n     * 0 is used a the default z-index.\n     * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list\n     * of layer states (to be modified in place).\n     * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n     */\n    LayerGroup.prototype.getLayerStatesArray = function (opt_states) {\n        var states = opt_states !== undefined ? opt_states : [];\n        var pos = states.length;\n        this.getLayers().forEach(function (layer) {\n            layer.getLayerStatesArray(states);\n        });\n        var ownLayerState = this.getLayerState();\n        var defaultZIndex = ownLayerState.zIndex;\n        if (!opt_states && ownLayerState.zIndex === undefined) {\n            defaultZIndex = 0;\n        }\n        for (var i = pos, ii = states.length; i < ii; i++) {\n            var layerState = states[i];\n            layerState.opacity *= ownLayerState.opacity;\n            layerState.visible = layerState.visible && ownLayerState.visible;\n            layerState.maxResolution = Math.min(layerState.maxResolution, ownLayerState.maxResolution);\n            layerState.minResolution = Math.max(layerState.minResolution, ownLayerState.minResolution);\n            layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n            layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n            if (ownLayerState.extent !== undefined) {\n                if (layerState.extent !== undefined) {\n                    layerState.extent = getIntersection(layerState.extent, ownLayerState.extent);\n                }\n                else {\n                    layerState.extent = ownLayerState.extent;\n                }\n            }\n            if (layerState.zIndex === undefined) {\n                layerState.zIndex = defaultZIndex;\n            }\n        }\n        return states;\n    };\n    /**\n     * @return {import(\"../source/State.js\").default} Source state.\n     */\n    LayerGroup.prototype.getSourceState = function () {\n        return SourceState.READY;\n    };\n    return LayerGroup;\n}(BaseLayer));\nexport default LayerGroup;\n//# sourceMappingURL=Group.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map event.\n */\nvar MapEvent = /** @class */ (function (_super) {\n    __extends(MapEvent, _super);\n    /**\n     * @param {string} type Event type.\n     * @param {import(\"./PluggableMap.js\").default} map Map.\n     * @param {?import(\"./PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n     */\n    function MapEvent(type, map, opt_frameState) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The map where the event occurred.\n         * @type {import(\"./PluggableMap.js\").default}\n         * @api\n         */\n        _this.map = map;\n        /**\n         * The frame state at the time of the event.\n         * @type {?import(\"./PluggableMap.js\").FrameState}\n         * @api\n         */\n        _this.frameState = opt_frameState !== undefined ? opt_frameState : null;\n        return _this;\n    }\n    return MapEvent;\n}(Event));\nexport default MapEvent;\n//# sourceMappingURL=MapEvent.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nvar MapBrowserEvent = /** @class */ (function (_super) {\n    __extends(MapBrowserEvent, _super);\n    /**\n     * @param {string} type Event type.\n     * @param {import(\"./PluggableMap.js\").default} map Map.\n     * @param {EVENT} originalEvent Original event.\n     * @param {boolean} [opt_dragging] Is the map currently being dragged?\n     * @param {?import(\"./PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n     */\n    function MapBrowserEvent(type, map, originalEvent, opt_dragging, opt_frameState) {\n        var _this = _super.call(this, type, map, opt_frameState) || this;\n        /**\n         * The original browser event.\n         * @const\n         * @type {EVENT}\n         * @api\n         */\n        _this.originalEvent = originalEvent;\n        /**\n         * The map pixel relative to the viewport corresponding to the original browser event.\n         * @type {?import(\"./pixel.js\").Pixel}\n         */\n        _this.pixel_ = null;\n        /**\n         * The coordinate in the user projection corresponding to the original browser event.\n         * @type {?import(\"./coordinate.js\").Coordinate}\n         */\n        _this.coordinate_ = null;\n        /**\n         * Indicates if the map is currently being dragged. Only set for\n         * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n         *\n         * @type {boolean}\n         * @api\n         */\n        _this.dragging = opt_dragging !== undefined ? opt_dragging : false;\n        return _this;\n    }\n    Object.defineProperty(MapBrowserEvent.prototype, \"pixel\", {\n        /**\n         * The map pixel relative to the viewport corresponding to the original event.\n         * @type {import(\"./pixel.js\").Pixel}\n         * @api\n         */\n        get: function () {\n            if (!this.pixel_) {\n                this.pixel_ = this.map.getEventPixel(this.originalEvent);\n            }\n            return this.pixel_;\n        },\n        set: function (pixel) {\n            this.pixel_ = pixel;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MapBrowserEvent.prototype, \"coordinate\", {\n        /**\n         * The coordinate corresponding to the original browser event.  This will be in the user\n         * projection if one is set.  Otherwise it will be in the view projection.\n         * @type {import(\"./coordinate.js\").Coordinate}\n         * @api\n         */\n        get: function () {\n            if (!this.coordinate_) {\n                this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n            }\n            return this.coordinate_;\n        },\n        set: function (coordinate) {\n            this.coordinate_ = coordinate;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Prevents the default browser action.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n     * @api\n     */\n    MapBrowserEvent.prototype.preventDefault = function () {\n        _super.prototype.preventDefault.call(this);\n        if ('preventDefault' in this.originalEvent) {\n            /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n        }\n    };\n    /**\n     * Prevents further propagation of the current event.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n     * @api\n     */\n    MapBrowserEvent.prototype.stopPropagation = function () {\n        _super.prototype.stopPropagation.call(this);\n        if ('stopPropagation' in this.originalEvent) {\n            /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n        }\n    };\n    return MapBrowserEvent;\n}(MapEvent));\nexport default MapBrowserEvent;\n//# sourceMappingURL=MapBrowserEvent.js.map","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n    /**\n     * A true single click with no dragging and no double click. Note that this\n     * event is delayed by 250 ms to ensure that it is not a double click.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n     * @api\n     */\n    SINGLECLICK: 'singleclick',\n    /**\n     * A click with no dragging. A double click will fire two of this.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n     * @api\n     */\n    CLICK: EventType.CLICK,\n    /**\n     * A true double click, with no dragging.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n     * @api\n     */\n    DBLCLICK: EventType.DBLCLICK,\n    /**\n     * Triggered when a pointer is dragged.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n     * @api\n     */\n    POINTERDRAG: 'pointerdrag',\n    /**\n     * Triggered when a pointer is moved. Note that on touch devices this is\n     * triggered when the map is panned, so is not the same as mousemove.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n     * @api\n     */\n    POINTERMOVE: 'pointermove',\n    POINTERDOWN: 'pointerdown',\n    POINTERUP: 'pointerup',\n    POINTEROVER: 'pointerover',\n    POINTEROUT: 'pointerout',\n    POINTERENTER: 'pointerenter',\n    POINTERLEAVE: 'pointerleave',\n    POINTERCANCEL: 'pointercancel',\n};\n/***\n * @typedef {'singleclick'|'click'|'dblclick'|'pointerdrag'|'pointermove'} Types\n */\n//# sourceMappingURL=MapBrowserEventType.js.map","/**\n * @module ol/pointer/EventType\n */\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n    POINTERMOVE: 'pointermove',\n    POINTERDOWN: 'pointerdown',\n    POINTERUP: 'pointerup',\n    POINTEROVER: 'pointerover',\n    POINTEROUT: 'pointerout',\n    POINTERENTER: 'pointerenter',\n    POINTERLEAVE: 'pointerleave',\n    POINTERCANCEL: 'pointercancel',\n};\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/MapBrowserEventHandler\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport Target from './events/Target.js';\nimport { PASSIVE_EVENT_LISTENERS } from './has.js';\nimport { VOID } from './functions.js';\nimport { listen, unlistenByKey } from './events.js';\nvar MapBrowserEventHandler = /** @class */ (function (_super) {\n    __extends(MapBrowserEventHandler, _super);\n    /**\n     * @param {import(\"./PluggableMap.js\").default} map The map with the viewport to listen to events on.\n     * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n     */\n    function MapBrowserEventHandler(map, moveTolerance) {\n        var _this = _super.call(this, map) || this;\n        /**\n         * This is the element that we will listen to the real events on.\n         * @type {import(\"./PluggableMap.js\").default}\n         * @private\n         */\n        _this.map_ = map;\n        /**\n         * @type {any}\n         * @private\n         */\n        _this.clickTimeoutId_;\n        /**\n         * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n         * @type {boolean}\n         */\n        _this.emulateClicks_ = false;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.dragging_ = false;\n        /**\n         * @type {!Array<import(\"./events.js\").EventsKey>}\n         * @private\n         */\n        _this.dragListenerKeys_ = [];\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.moveTolerance_ = moveTolerance === undefined ? 1 : moveTolerance;\n        /**\n         * The most recent \"down\" type event (or null if none have occurred).\n         * Set on pointerdown.\n         * @type {PointerEvent}\n         * @private\n         */\n        _this.down_ = null;\n        var element = _this.map_.getViewport();\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.activePointers_ = 0;\n        /**\n         * @type {!Object<number, boolean>}\n         * @private\n         */\n        _this.trackedTouches_ = {};\n        _this.element_ = element;\n        /**\n         * @type {?import(\"./events.js\").EventsKey}\n         * @private\n         */\n        _this.pointerdownListenerKey_ = listen(element, PointerEventType.POINTERDOWN, _this.handlePointerDown_, _this);\n        /**\n         * @type {PointerEvent}\n         * @private\n         */\n        _this.originalPointerMoveEvent_;\n        /**\n         * @type {?import(\"./events.js\").EventsKey}\n         * @private\n         */\n        _this.relayedListenerKey_ = listen(element, PointerEventType.POINTERMOVE, _this.relayEvent_, _this);\n        /**\n         * @private\n         */\n        _this.boundHandleTouchMove_ = _this.handleTouchMove_.bind(_this);\n        _this.element_.addEventListener(EventType.TOUCHMOVE, _this.boundHandleTouchMove_, PASSIVE_EVENT_LISTENERS ? { passive: false } : false);\n        return _this;\n    }\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.emulateClick_ = function (pointerEvent) {\n        var newEvent = new MapBrowserEvent(MapBrowserEventType.CLICK, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n        if (this.clickTimeoutId_ !== undefined) {\n            // double-click\n            clearTimeout(this.clickTimeoutId_);\n            this.clickTimeoutId_ = undefined;\n            newEvent = new MapBrowserEvent(MapBrowserEventType.DBLCLICK, this.map_, pointerEvent);\n            this.dispatchEvent(newEvent);\n        }\n        else {\n            // click\n            this.clickTimeoutId_ = setTimeout(\n            /** @this {MapBrowserEventHandler} */\n            function () {\n                this.clickTimeoutId_ = undefined;\n                var newEvent = new MapBrowserEvent(MapBrowserEventType.SINGLECLICK, this.map_, pointerEvent);\n                this.dispatchEvent(newEvent);\n            }.bind(this), 250);\n        }\n    };\n    /**\n     * Keeps track on how many pointers are currently active.\n     *\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.updateActivePointers_ = function (pointerEvent) {\n        var event = pointerEvent;\n        if (event.type == MapBrowserEventType.POINTERUP ||\n            event.type == MapBrowserEventType.POINTERCANCEL) {\n            delete this.trackedTouches_[event.pointerId];\n        }\n        else if (event.type == MapBrowserEventType.POINTERDOWN) {\n            this.trackedTouches_[event.pointerId] = true;\n        }\n        this.activePointers_ = Object.keys(this.trackedTouches_).length;\n    };\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.handlePointerUp_ = function (pointerEvent) {\n        this.updateActivePointers_(pointerEvent);\n        var newEvent = new MapBrowserEvent(MapBrowserEventType.POINTERUP, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n        // We emulate click events on left mouse button click, touch contact, and pen\n        // contact. isMouseActionButton returns true in these cases (evt.button is set\n        // to 0).\n        // See http://www.w3.org/TR/pointerevents/#button-states\n        // We only fire click, singleclick, and doubleclick if nobody has called\n        // event.preventDefault().\n        if (this.emulateClicks_ &&\n            !newEvent.defaultPrevented &&\n            !this.dragging_ &&\n            this.isMouseActionButton_(pointerEvent)) {\n            this.emulateClick_(this.down_);\n        }\n        if (this.activePointers_ === 0) {\n            this.dragListenerKeys_.forEach(unlistenByKey);\n            this.dragListenerKeys_.length = 0;\n            this.dragging_ = false;\n            this.down_ = null;\n        }\n    };\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @return {boolean} If the left mouse button was pressed.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.isMouseActionButton_ = function (pointerEvent) {\n        return pointerEvent.button === 0;\n    };\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.handlePointerDown_ = function (pointerEvent) {\n        this.emulateClicks_ = this.activePointers_ === 0;\n        this.updateActivePointers_(pointerEvent);\n        var newEvent = new MapBrowserEvent(MapBrowserEventType.POINTERDOWN, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n        // Store a copy of the down event\n        this.down_ = /** @type {PointerEvent} */ ({});\n        for (var property in pointerEvent) {\n            var value = pointerEvent[property];\n            this.down_[property] = typeof value === 'function' ? VOID : value;\n        }\n        if (this.dragListenerKeys_.length === 0) {\n            var doc = this.map_.getOwnerDocument();\n            this.dragListenerKeys_.push(listen(doc, MapBrowserEventType.POINTERMOVE, this.handlePointerMove_, this), listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this), \n            /* Note that the listener for `pointercancel is set up on\n             * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n             * the `pointerup` and `pointermove` listeners.\n             *\n             * The reason for this is the following: `TouchSource.vacuumTouches_()`\n             * issues `pointercancel` events, when there was no `touchend` for a\n             * `touchstart`. Now, let's say a first `touchstart` is registered on\n             * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n             * But `documentPointerEventHandler_` doesn't know about the first\n             * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n             * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n             * only registered there.\n             */\n            listen(this.element_, MapBrowserEventType.POINTERCANCEL, this.handlePointerUp_, this));\n            if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n                this.dragListenerKeys_.push(listen(this.element_.getRootNode(), MapBrowserEventType.POINTERUP, this.handlePointerUp_, this));\n            }\n        }\n    };\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.handlePointerMove_ = function (pointerEvent) {\n        // Between pointerdown and pointerup, pointermove events are triggered.\n        // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n        // moved a significant distance.\n        if (this.isMoving_(pointerEvent)) {\n            this.dragging_ = true;\n            var newEvent = new MapBrowserEvent(MapBrowserEventType.POINTERDRAG, this.map_, pointerEvent, this.dragging_);\n            this.dispatchEvent(newEvent);\n        }\n    };\n    /**\n     * Wrap and relay a pointer event.  Note that this requires that the type\n     * string for the MapBrowserEvent matches the PointerEvent type.\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.relayEvent_ = function (pointerEvent) {\n        this.originalPointerMoveEvent_ = pointerEvent;\n        var dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n        this.dispatchEvent(new MapBrowserEvent(pointerEvent.type, this.map_, pointerEvent, dragging));\n    };\n    /**\n     * Flexible handling of a `touch-action: none` css equivalent: because calling\n     * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n     * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n     * when an interaction (currently `DragPan` handles the event.\n     * @param {TouchEvent} event Event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.handleTouchMove_ = function (event) {\n        // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n        // may not be initialized yet when we get here on a platform without native pointer events.\n        var originalEvent = this.originalPointerMoveEvent_;\n        if ((!originalEvent || originalEvent.defaultPrevented) &&\n            (typeof event.cancelable !== 'boolean' || event.cancelable === true)) {\n            event.preventDefault();\n        }\n    };\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @return {boolean} Is moving.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.isMoving_ = function (pointerEvent) {\n        return (this.dragging_ ||\n            Math.abs(pointerEvent.clientX - this.down_.clientX) >\n                this.moveTolerance_ ||\n            Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_);\n    };\n    /**\n     * Clean up.\n     */\n    MapBrowserEventHandler.prototype.disposeInternal = function () {\n        if (this.relayedListenerKey_) {\n            unlistenByKey(this.relayedListenerKey_);\n            this.relayedListenerKey_ = null;\n        }\n        this.element_.removeEventListener(EventType.TOUCHMOVE, this.boundHandleTouchMove_);\n        if (this.pointerdownListenerKey_) {\n            unlistenByKey(this.pointerdownListenerKey_);\n            this.pointerdownListenerKey_ = null;\n        }\n        this.dragListenerKeys_.forEach(unlistenByKey);\n        this.dragListenerKeys_.length = 0;\n        this.element_ = null;\n        _super.prototype.disposeInternal.call(this);\n    };\n    return MapBrowserEventHandler;\n}(Target));\nexport default MapBrowserEventHandler;\n//# sourceMappingURL=MapBrowserEventHandler.js.map","/**\n * @module ol/MapEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered after a map frame is rendered.\n     * @event module:ol/MapEvent~MapEvent#postrender\n     * @api\n     */\n    POSTRENDER: 'postrender',\n    /**\n     * Triggered when the map starts moving.\n     * @event module:ol/MapEvent~MapEvent#movestart\n     * @api\n     */\n    MOVESTART: 'movestart',\n    /**\n     * Triggered after the map is moved.\n     * @event module:ol/MapEvent~MapEvent#moveend\n     * @api\n     */\n    MOVEEND: 'moveend',\n};\n/***\n * @typedef {'postrender'|'movestart'|'moveend'} Types\n */\n//# sourceMappingURL=MapEventType.js.map","/**\n * @module ol/MapProperty\n */\n/**\n * @enum {string}\n */\nexport default {\n    LAYERGROUP: 'layergroup',\n    SIZE: 'size',\n    TARGET: 'target',\n    VIEW: 'view',\n};\n//# sourceMappingURL=MapProperty.js.map","/**\n * @module ol/structs/PriorityQueue\n */\nimport { assert } from '../asserts.js';\nimport { clear } from '../obj.js';\n/**\n * @type {number}\n */\nexport var DROP = Infinity;\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nvar PriorityQueue = /** @class */ (function () {\n    /**\n     * @param {function(T): number} priorityFunction Priority function.\n     * @param {function(T): string} keyFunction Key function.\n     */\n    function PriorityQueue(priorityFunction, keyFunction) {\n        /**\n         * @type {function(T): number}\n         * @private\n         */\n        this.priorityFunction_ = priorityFunction;\n        /**\n         * @type {function(T): string}\n         * @private\n         */\n        this.keyFunction_ = keyFunction;\n        /**\n         * @type {Array<T>}\n         * @private\n         */\n        this.elements_ = [];\n        /**\n         * @type {Array<number>}\n         * @private\n         */\n        this.priorities_ = [];\n        /**\n         * @type {!Object<string, boolean>}\n         * @private\n         */\n        this.queuedElements_ = {};\n    }\n    /**\n     * FIXME empty description for jsdoc\n     */\n    PriorityQueue.prototype.clear = function () {\n        this.elements_.length = 0;\n        this.priorities_.length = 0;\n        clear(this.queuedElements_);\n    };\n    /**\n     * Remove and return the highest-priority element. O(log N).\n     * @return {T} Element.\n     */\n    PriorityQueue.prototype.dequeue = function () {\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var element = elements[0];\n        if (elements.length == 1) {\n            elements.length = 0;\n            priorities.length = 0;\n        }\n        else {\n            elements[0] = elements.pop();\n            priorities[0] = priorities.pop();\n            this.siftUp_(0);\n        }\n        var elementKey = this.keyFunction_(element);\n        delete this.queuedElements_[elementKey];\n        return element;\n    };\n    /**\n     * Enqueue an element. O(log N).\n     * @param {T} element Element.\n     * @return {boolean} The element was added to the queue.\n     */\n    PriorityQueue.prototype.enqueue = function (element) {\n        assert(!(this.keyFunction_(element) in this.queuedElements_), 31); // Tried to enqueue an `element` that was already added to the queue\n        var priority = this.priorityFunction_(element);\n        if (priority != DROP) {\n            this.elements_.push(element);\n            this.priorities_.push(priority);\n            this.queuedElements_[this.keyFunction_(element)] = true;\n            this.siftDown_(0, this.elements_.length - 1);\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @return {number} Count.\n     */\n    PriorityQueue.prototype.getCount = function () {\n        return this.elements_.length;\n    };\n    /**\n     * Gets the index of the left child of the node at the given index.\n     * @param {number} index The index of the node to get the left child for.\n     * @return {number} The index of the left child.\n     * @private\n     */\n    PriorityQueue.prototype.getLeftChildIndex_ = function (index) {\n        return index * 2 + 1;\n    };\n    /**\n     * Gets the index of the right child of the node at the given index.\n     * @param {number} index The index of the node to get the right child for.\n     * @return {number} The index of the right child.\n     * @private\n     */\n    PriorityQueue.prototype.getRightChildIndex_ = function (index) {\n        return index * 2 + 2;\n    };\n    /**\n     * Gets the index of the parent of the node at the given index.\n     * @param {number} index The index of the node to get the parent for.\n     * @return {number} The index of the parent.\n     * @private\n     */\n    PriorityQueue.prototype.getParentIndex_ = function (index) {\n        return (index - 1) >> 1;\n    };\n    /**\n     * Make this a heap. O(N).\n     * @private\n     */\n    PriorityQueue.prototype.heapify_ = function () {\n        var i;\n        for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n            this.siftUp_(i);\n        }\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    PriorityQueue.prototype.isEmpty = function () {\n        return this.elements_.length === 0;\n    };\n    /**\n     * @param {string} key Key.\n     * @return {boolean} Is key queued.\n     */\n    PriorityQueue.prototype.isKeyQueued = function (key) {\n        return key in this.queuedElements_;\n    };\n    /**\n     * @param {T} element Element.\n     * @return {boolean} Is queued.\n     */\n    PriorityQueue.prototype.isQueued = function (element) {\n        return this.isKeyQueued(this.keyFunction_(element));\n    };\n    /**\n     * @param {number} index The index of the node to move down.\n     * @private\n     */\n    PriorityQueue.prototype.siftUp_ = function (index) {\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var count = elements.length;\n        var element = elements[index];\n        var priority = priorities[index];\n        var startIndex = index;\n        while (index < count >> 1) {\n            var lIndex = this.getLeftChildIndex_(index);\n            var rIndex = this.getRightChildIndex_(index);\n            var smallerChildIndex = rIndex < count && priorities[rIndex] < priorities[lIndex]\n                ? rIndex\n                : lIndex;\n            elements[index] = elements[smallerChildIndex];\n            priorities[index] = priorities[smallerChildIndex];\n            index = smallerChildIndex;\n        }\n        elements[index] = element;\n        priorities[index] = priority;\n        this.siftDown_(startIndex, index);\n    };\n    /**\n     * @param {number} startIndex The index of the root.\n     * @param {number} index The index of the node to move up.\n     * @private\n     */\n    PriorityQueue.prototype.siftDown_ = function (startIndex, index) {\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var element = elements[index];\n        var priority = priorities[index];\n        while (index > startIndex) {\n            var parentIndex = this.getParentIndex_(index);\n            if (priorities[parentIndex] > priority) {\n                elements[index] = elements[parentIndex];\n                priorities[index] = priorities[parentIndex];\n                index = parentIndex;\n            }\n            else {\n                break;\n            }\n        }\n        elements[index] = element;\n        priorities[index] = priority;\n    };\n    /**\n     * FIXME empty description for jsdoc\n     */\n    PriorityQueue.prototype.reprioritize = function () {\n        var priorityFunction = this.priorityFunction_;\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var index = 0;\n        var n = elements.length;\n        var element, i, priority;\n        for (i = 0; i < n; ++i) {\n            element = elements[i];\n            priority = priorityFunction(element);\n            if (priority == DROP) {\n                delete this.queuedElements_[this.keyFunction_(element)];\n            }\n            else {\n                priorities[index] = priority;\n                elements[index++] = element;\n            }\n        }\n        elements.length = index;\n        priorities.length = index;\n        this.heapify_();\n    };\n    return PriorityQueue;\n}());\nexport default PriorityQueue;\n//# sourceMappingURL=PriorityQueue.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, { DROP } from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\nvar TileQueue = /** @class */ (function (_super) {\n    __extends(TileQueue, _super);\n    /**\n     * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n     * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n     */\n    function TileQueue(tilePriorityFunction, tileChangeCallback) {\n        var _this = _super.call(this, \n        /**\n         * @param {Array} element Element.\n         * @return {number} Priority.\n         */\n        function (element) {\n            return tilePriorityFunction.apply(null, element);\n        }, \n        /**\n         * @param {Array} element Element.\n         * @return {string} Key.\n         */\n        function (element) {\n            return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n        }) || this;\n        /** @private */\n        _this.boundHandleTileChange_ = _this.handleTileChange.bind(_this);\n        /**\n         * @private\n         * @type {function(): ?}\n         */\n        _this.tileChangeCallback_ = tileChangeCallback;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.tilesLoading_ = 0;\n        /**\n         * @private\n         * @type {!Object<string,boolean>}\n         */\n        _this.tilesLoadingKeys_ = {};\n        return _this;\n    }\n    /**\n     * @param {Array} element Element.\n     * @return {boolean} The element was added to the queue.\n     */\n    TileQueue.prototype.enqueue = function (element) {\n        var added = _super.prototype.enqueue.call(this, element);\n        if (added) {\n            var tile = element[0];\n            tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n        }\n        return added;\n    };\n    /**\n     * @return {number} Number of tiles loading.\n     */\n    TileQueue.prototype.getTilesLoading = function () {\n        return this.tilesLoading_;\n    };\n    /**\n     * @param {import(\"./events/Event.js\").default} event Event.\n     * @protected\n     */\n    TileQueue.prototype.handleTileChange = function (event) {\n        var tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n        var state = tile.getState();\n        if (state === TileState.LOADED ||\n            state === TileState.ERROR ||\n            state === TileState.EMPTY) {\n            tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n            var tileKey = tile.getKey();\n            if (tileKey in this.tilesLoadingKeys_) {\n                delete this.tilesLoadingKeys_[tileKey];\n                --this.tilesLoading_;\n            }\n            this.tileChangeCallback_();\n        }\n    };\n    /**\n     * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n     * @param {number} maxNewLoads Maximum number of new tiles to load.\n     */\n    TileQueue.prototype.loadMoreTiles = function (maxTotalLoading, maxNewLoads) {\n        var newLoads = 0;\n        var state, tile, tileKey;\n        while (this.tilesLoading_ < maxTotalLoading &&\n            newLoads < maxNewLoads &&\n            this.getCount() > 0) {\n            tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n            tileKey = tile.getKey();\n            state = tile.getState();\n            if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n                this.tilesLoadingKeys_[tileKey] = true;\n                ++this.tilesLoading_;\n                ++newLoads;\n                tile.load();\n            }\n        }\n    };\n    return TileQueue;\n}(PriorityQueue));\nexport default TileQueue;\n/**\n * @param {import('./PluggableMap.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(frameState, tile, tileSourceKey, tileCenter, tileResolution) {\n    // Filter out tiles at higher zoom levels than the current zoom level, or that\n    // are outside the visible extent.\n    if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n        return DROP;\n    }\n    if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n        return DROP;\n    }\n    // Prioritize the highest zoom level tiles closest to the focus.\n    // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n    // Within a zoom level, tiles are prioritized by the distance in pixels between\n    // the center of the tile and the center of the viewport.  The factor of 65536\n    // means that the prioritization should behave as desired for tiles up to\n    // 65536 * Math.log(2) = 45426 pixels from the focus.\n    var center = frameState.viewState.center;\n    var deltaX = tileCenter[0] - center[0];\n    var deltaY = tileCenter[1] - center[1];\n    return (65536 * Math.log(tileResolution) +\n        Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution);\n}\n//# sourceMappingURL=TileQueue.js.map","/**\n * @module ol/ViewProperty\n */\n/**\n * @enum {string}\n */\nexport default {\n    CENTER: 'center',\n    RESOLUTION: 'resolution',\n    ROTATION: 'rotation',\n};\n//# sourceMappingURL=ViewProperty.js.map","/**\n * @module ol/tilegrid/common\n */\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport var DEFAULT_MAX_ZOOM = 42;\n/**\n * Default tile size.\n * @type {number}\n */\nexport var DEFAULT_TILE_SIZE = 256;\n//# sourceMappingURL=common.js.map","/**\n * @module ol/centerconstraint\n */\nimport { clamp } from './math.js';\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n    return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [opt_centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, opt_isMoving, opt_centerShift) {\n        if (center) {\n            var viewWidth = onlyCenter ? 0 : size[0] * resolution;\n            var viewHeight = onlyCenter ? 0 : size[1] * resolution;\n            var shiftX = opt_centerShift ? opt_centerShift[0] : 0;\n            var shiftY = opt_centerShift ? opt_centerShift[1] : 0;\n            var minX = extent[0] + viewWidth / 2 + shiftX;\n            var maxX = extent[2] - viewWidth / 2 + shiftX;\n            var minY = extent[1] + viewHeight / 2 + shiftY;\n            var maxY = extent[3] - viewHeight / 2 + shiftY;\n            // note: when zooming out of bounds, min and max values for x and y may\n            // end up inverted (min > max); this has to be accounted for\n            if (minX > maxX) {\n                minX = (maxX + minX) / 2;\n                maxX = minX;\n            }\n            if (minY > maxY) {\n                minY = (maxY + minY) / 2;\n                maxY = minY;\n            }\n            var x = clamp(center[0], minX, maxX);\n            var y = clamp(center[1], minY, maxY);\n            var ratio = 30 * resolution;\n            // during an interaction, allow some overscroll\n            if (opt_isMoving && smooth) {\n                x +=\n                    -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n                        ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n                y +=\n                    -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n                        ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n            }\n            return [x, y];\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n    return center;\n}\n//# sourceMappingURL=centerconstraint.js.map","/**\n * @module ol/resolutionconstraint\n */\nimport { clamp } from './math.js';\nimport { getHeight, getWidth } from './extent.js';\nimport { linearFindNearest } from './array.js';\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(resolution, maxExtent, viewportSize, showFullExtent) {\n    var xResolution = getWidth(maxExtent) / viewportSize[0];\n    var yResolution = getHeight(maxExtent) / viewportSize[1];\n    if (showFullExtent) {\n        return Math.min(resolution, Math.max(xResolution, yResolution));\n    }\n    return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n    var result = Math.min(resolution, maxResolution);\n    var ratio = 50;\n    result *=\n        Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n            1;\n    if (minResolution) {\n        result = Math.max(result, minResolution);\n        result /=\n            Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n                ratio +\n                1;\n    }\n    return clamp(result, minResolution / 2, maxResolution * 2);\n}\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(resolutions, opt_smooth, opt_maxExtent, opt_showFullExtent) {\n    return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n        if (resolution !== undefined) {\n            var maxResolution = resolutions[0];\n            var minResolution = resolutions[resolutions.length - 1];\n            var cappedMaxRes = opt_maxExtent\n                ? getViewportClampedResolution(maxResolution, opt_maxExtent, size, opt_showFullExtent)\n                : maxResolution;\n            // during interacting or animating, allow intermediary values\n            if (opt_isMoving) {\n                var smooth = opt_smooth !== undefined ? opt_smooth : true;\n                if (!smooth) {\n                    return clamp(resolution, minResolution, cappedMaxRes);\n                }\n                return getSmoothClampedResolution(resolution, cappedMaxRes, minResolution);\n            }\n            var capped = Math.min(cappedMaxRes, resolution);\n            var z = Math.floor(linearFindNearest(resolutions, capped, direction));\n            if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n                return resolutions[z + 1];\n            }\n            return resolutions[z];\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [opt_minResolution] Minimum resolution.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(power, maxResolution, opt_minResolution, opt_smooth, opt_maxExtent, opt_showFullExtent) {\n    return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n        if (resolution !== undefined) {\n            var cappedMaxRes = opt_maxExtent\n                ? getViewportClampedResolution(maxResolution, opt_maxExtent, size, opt_showFullExtent)\n                : maxResolution;\n            var minResolution = opt_minResolution !== undefined ? opt_minResolution : 0;\n            // during interacting or animating, allow intermediary values\n            if (opt_isMoving) {\n                var smooth = opt_smooth !== undefined ? opt_smooth : true;\n                if (!smooth) {\n                    return clamp(resolution, minResolution, cappedMaxRes);\n                }\n                return getSmoothClampedResolution(resolution, cappedMaxRes, minResolution);\n            }\n            var tolerance = 1e-9;\n            var minZoomLevel = Math.ceil(Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance);\n            var offset = -direction * (0.5 - tolerance) + 0.5;\n            var capped = Math.min(cappedMaxRes, resolution);\n            var cappedZoomLevel = Math.floor(Math.log(maxResolution / capped) / Math.log(power) + offset);\n            var zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n            var newResolution = maxResolution / Math.pow(power, zoomLevel);\n            return clamp(newResolution, minResolution, cappedMaxRes);\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(maxResolution, minResolution, opt_smooth, opt_maxExtent, opt_showFullExtent) {\n    return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n        if (resolution !== undefined) {\n            var cappedMaxRes = opt_maxExtent\n                ? getViewportClampedResolution(maxResolution, opt_maxExtent, size, opt_showFullExtent)\n                : maxResolution;\n            var smooth = opt_smooth !== undefined ? opt_smooth : true;\n            if (!smooth || !opt_isMoving) {\n                return clamp(resolution, minResolution, cappedMaxRes);\n            }\n            return getSmoothClampedResolution(resolution, cappedMaxRes, minResolution);\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n//# sourceMappingURL=resolutionconstraint.js.map","/**\n * @module ol/rotationconstraint\n */\nimport { toRadians } from './math.js';\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n    if (rotation !== undefined) {\n        return 0;\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n    if (rotation !== undefined) {\n        return rotation;\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n    var theta = (2 * Math.PI) / n;\n    return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n        if (opt_isMoving) {\n            return rotation;\n        }\n        if (rotation !== undefined) {\n            rotation = Math.floor(rotation / theta + 0.5) * theta;\n            return rotation;\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {number} [opt_tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(opt_tolerance) {\n    var tolerance = opt_tolerance || toRadians(5);\n    return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n        if (opt_isMoving) {\n            return rotation;\n        }\n        if (rotation !== undefined) {\n            if (Math.abs(rotation) <= tolerance) {\n                return 0;\n            }\n            else {\n                return rotation;\n            }\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n//# sourceMappingURL=rotationconstraint.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport GeometryType from './geom/GeometryType.js';\nimport Units from './proj/Units.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport { DEFAULT_TILE_SIZE } from './tilegrid/common.js';\nimport { METERS_PER_UNIT, createProjection, fromUserCoordinate, fromUserExtent, getUserProjection, toUserCoordinate, toUserExtent, } from './proj.js';\nimport { VOID } from './functions.js';\nimport { add as addCoordinate, equals as coordinatesEqual, rotate as rotateCoordinate, } from './coordinate.js';\nimport { assert } from './asserts.js';\nimport { assign } from './obj.js';\nimport { none as centerNone, createExtent } from './centerconstraint.js';\nimport { clamp, modulo } from './math.js';\nimport { createMinMaxResolution } from './resolutionconstraint.js';\nimport { createSnapToN, createSnapToZero, disable, none as rotationNone, } from './rotationconstraint.js';\nimport { createSnapToPower, createSnapToResolutions, } from './resolutionconstraint.js';\nimport { easeOut } from './easing.js';\nimport { equals } from './coordinate.js';\nimport { getCenter, getForViewAndSize, getHeight, getWidth, isEmpty, } from './extent.js';\nimport { inAndOut } from './easing.js';\nimport { linearFindNearest } from './array.js';\nimport { fromExtent as polygonFromExtent } from './geom/Polygon.js';\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center.\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {import(\"./coordinate.js\").Coordinate} [nextCenter] The next center during an animation series.\n * @property {number} [nextResolution] The next resolution during an animation series.\n * @property {number} [nextRotation] The next rotation during an animation series.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nvar DEFAULT_MIN_ZOOM = 0;\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Spherical Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `opt_anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nvar View = /** @class */ (function (_super) {\n    __extends(View, _super);\n    /**\n     * @param {ViewOptions} [opt_options] View options.\n     */\n    function View(opt_options) {\n        var _this = _super.call(this) || this;\n        /***\n         * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n         */\n        _this.on;\n        /***\n         * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n         */\n        _this.once;\n        /***\n         * @type {ViewOnSignature<void>}\n         */\n        _this.un;\n        var options = assign({}, opt_options);\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.hints_ = [0, 0];\n        /**\n         * @private\n         * @type {Array<Array<Animation>>}\n         */\n        _this.animations_ = [];\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.updateAnimationKey_;\n        /**\n         * @private\n         * @const\n         * @type {import(\"./proj/Projection.js\").default}\n         */\n        _this.projection_ = createProjection(options.projection, 'EPSG:3857');\n        /**\n         * @private\n         * @type {import(\"./size.js\").Size}\n         */\n        _this.viewportSize_ = [100, 100];\n        /**\n         * @private\n         * @type {import(\"./coordinate.js\").Coordinate|undefined}\n         */\n        _this.targetCenter_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.targetResolution_;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.targetRotation_;\n        /**\n         * @private\n         * @type {import(\"./coordinate.js\").Coordinate}\n         */\n        _this.nextCenter_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.nextResolution_;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.nextRotation_;\n        /**\n         * @private\n         * @type {import(\"./coordinate.js\").Coordinate|undefined}\n         */\n        _this.cancelAnchor_ = undefined;\n        if (options.center) {\n            options.center = fromUserCoordinate(options.center, _this.projection_);\n        }\n        if (options.extent) {\n            options.extent = fromUserExtent(options.extent, _this.projection_);\n        }\n        _this.applyOptions_(options);\n        return _this;\n    }\n    /**\n     * Set up the view with the given options.\n     * @param {ViewOptions} options View options.\n     */\n    View.prototype.applyOptions_ = function (options) {\n        /**\n         * @type {Object<string, *>}\n         */\n        var properties = {};\n        var resolutionConstraintInfo = createResolutionConstraint(options);\n        /**\n         * @private\n         * @type {number}\n         */\n        this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.minResolution_ = resolutionConstraintInfo.minResolution;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n        /**\n         * @private\n         * @type {Array<number>|undefined}\n         */\n        this.resolutions_ = options.resolutions;\n        /**\n         * @type {Array<number>|undefined}\n         * @private\n         */\n        this.padding_ = options.padding;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.minZoom_ = resolutionConstraintInfo.minZoom;\n        var centerConstraint = createCenterConstraint(options);\n        var resolutionConstraint = resolutionConstraintInfo.constraint;\n        var rotationConstraint = createRotationConstraint(options);\n        /**\n         * @private\n         * @type {Constraints}\n         */\n        this.constraints_ = {\n            center: centerConstraint,\n            resolution: resolutionConstraint,\n            rotation: rotationConstraint,\n        };\n        this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n        this.setCenterInternal(options.center !== undefined ? options.center : null);\n        if (options.resolution !== undefined) {\n            this.setResolution(options.resolution);\n        }\n        else if (options.zoom !== undefined) {\n            this.setZoom(options.zoom);\n        }\n        this.setProperties(properties);\n        /**\n         * @private\n         * @type {ViewOptions}\n         */\n        this.options_ = options;\n    };\n    Object.defineProperty(View.prototype, \"padding\", {\n        /**\n         * Padding (in css pixels).\n         * If the map viewport is partially covered with other content (overlays) along\n         * its edges, this setting allows to shift the center of the viewport away from that\n         * content. The order of the values in the array is top, right, bottom, left.\n         * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n         * @type {Array<number>|undefined}\n         * @api\n         */\n        get: function () {\n            return this.padding_;\n        },\n        set: function (padding) {\n            var oldPadding = this.padding_;\n            this.padding_ = padding;\n            var center = this.getCenter();\n            if (center) {\n                var newPadding = padding || [0, 0, 0, 0];\n                oldPadding = oldPadding || [0, 0, 0, 0];\n                var resolution = this.getResolution();\n                var offsetX = (resolution / 2) *\n                    (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n                var offsetY = (resolution / 2) *\n                    (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n                this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Get an updated version of the view options used to construct the view.  The\n     * current resolution (or zoom), center, and rotation are applied to any stored\n     * options.  The provided options can be used to apply new min/max zoom or\n     * resolution limits.\n     * @param {ViewOptions} newOptions New options to be applied.\n     * @return {ViewOptions} New options updated with the current view state.\n     */\n    View.prototype.getUpdatedOptions_ = function (newOptions) {\n        var options = assign({}, this.options_);\n        // preserve resolution (or zoom)\n        if (options.resolution !== undefined) {\n            options.resolution = this.getResolution();\n        }\n        else {\n            options.zoom = this.getZoom();\n        }\n        // preserve center\n        options.center = this.getCenterInternal();\n        // preserve rotation\n        options.rotation = this.getRotation();\n        return assign({}, options, newOptions);\n    };\n    /**\n     * Animate the view.  The view's center, zoom (or resolution), and rotation\n     * can be animated for smooth transitions between view states.  For example,\n     * to animate the view to a new zoom level:\n     *\n     *     view.animate({zoom: view.getZoom() + 1});\n     *\n     * By default, the animation lasts one second and uses in-and-out easing.  You\n     * can customize this behavior by including `duration` (in milliseconds) and\n     * `easing` options (see {@link module:ol/easing}).\n     *\n     * To chain together multiple animations, call the method with multiple\n     * animation objects.  For example, to first zoom and then pan:\n     *\n     *     view.animate({zoom: 10}, {center: [0, 0]});\n     *\n     * If you provide a function as the last argument to the animate method, it\n     * will get called at the end of an animation series.  The callback will be\n     * called with `true` if the animation series completed on its own or `false`\n     * if it was cancelled.\n     *\n     * Animations are cancelled by user interactions (e.g. dragging the map) or by\n     * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n     * (or another method that calls one of these).\n     *\n     * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n     *     options.  Multiple animations can be run in series by passing multiple\n     *     options objects.  To run multiple animations in parallel, call the method\n     *     multiple times.  An optional callback can be provided as a final\n     *     argument.  The callback will be called with a boolean indicating whether\n     *     the animation completed without being cancelled.\n     * @api\n     */\n    View.prototype.animate = function (var_args) {\n        if (this.isDef() && !this.getAnimating()) {\n            this.resolveConstraints(0);\n        }\n        var args = new Array(arguments.length);\n        for (var i = 0; i < args.length; ++i) {\n            var options = arguments[i];\n            if (options.center) {\n                options = assign({}, options);\n                options.center = fromUserCoordinate(options.center, this.getProjection());\n            }\n            if (options.anchor) {\n                options = assign({}, options);\n                options.anchor = fromUserCoordinate(options.anchor, this.getProjection());\n            }\n            args[i] = options;\n        }\n        this.animateInternal.apply(this, args);\n    };\n    /**\n     * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n     */\n    View.prototype.animateInternal = function (var_args) {\n        var animationCount = arguments.length;\n        var callback;\n        if (animationCount > 1 &&\n            typeof arguments[animationCount - 1] === 'function') {\n            callback = arguments[animationCount - 1];\n            --animationCount;\n        }\n        var i = 0;\n        for (; i < animationCount && !this.isDef(); ++i) {\n            // if view properties are not yet set, shortcut to the final state\n            var state = arguments[i];\n            if (state.center) {\n                this.setCenterInternal(state.center);\n            }\n            if (state.zoom !== undefined) {\n                this.setZoom(state.zoom);\n            }\n            else if (state.resolution) {\n                this.setResolution(state.resolution);\n            }\n            if (state.rotation !== undefined) {\n                this.setRotation(state.rotation);\n            }\n        }\n        if (i === animationCount) {\n            if (callback) {\n                animationCallback(callback, true);\n            }\n            return;\n        }\n        var start = Date.now();\n        var center = this.targetCenter_.slice();\n        var resolution = this.targetResolution_;\n        var rotation = this.targetRotation_;\n        var series = [];\n        for (; i < animationCount; ++i) {\n            var options = /** @type {AnimationOptions} */ (arguments[i]);\n            var animation = {\n                start: start,\n                complete: false,\n                anchor: options.anchor,\n                duration: options.duration !== undefined ? options.duration : 1000,\n                easing: options.easing || inAndOut,\n                callback: callback,\n            };\n            if (options.center) {\n                animation.sourceCenter = center;\n                animation.targetCenter = options.center.slice();\n                center = animation.targetCenter;\n            }\n            if (options.zoom !== undefined) {\n                animation.sourceResolution = resolution;\n                animation.targetResolution = this.getResolutionForZoom(options.zoom);\n                resolution = animation.targetResolution;\n            }\n            else if (options.resolution) {\n                animation.sourceResolution = resolution;\n                animation.targetResolution = options.resolution;\n                resolution = animation.targetResolution;\n            }\n            if (options.rotation !== undefined) {\n                animation.sourceRotation = rotation;\n                var delta = modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n                animation.targetRotation = rotation + delta;\n                rotation = animation.targetRotation;\n            }\n            // check if animation is a no-op\n            if (isNoopAnimation(animation)) {\n                animation.complete = true;\n                // we still push it onto the series for callback handling\n            }\n            else {\n                start += animation.duration;\n            }\n            series.push(animation);\n        }\n        this.animations_.push(series);\n        this.setHint(ViewHint.ANIMATING, 1);\n        this.updateAnimations_();\n    };\n    /**\n     * Determine if the view is being animated.\n     * @return {boolean} The view is being animated.\n     * @api\n     */\n    View.prototype.getAnimating = function () {\n        return this.hints_[ViewHint.ANIMATING] > 0;\n    };\n    /**\n     * Determine if the user is interacting with the view, such as panning or zooming.\n     * @return {boolean} The view is being interacted with.\n     * @api\n     */\n    View.prototype.getInteracting = function () {\n        return this.hints_[ViewHint.INTERACTING] > 0;\n    };\n    /**\n     * Cancel any ongoing animations.\n     * @api\n     */\n    View.prototype.cancelAnimations = function () {\n        this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n        var anchor;\n        for (var i = 0, ii = this.animations_.length; i < ii; ++i) {\n            var series = this.animations_[i];\n            if (series[0].callback) {\n                animationCallback(series[0].callback, false);\n            }\n            if (!anchor) {\n                for (var j = 0, jj = series.length; j < jj; ++j) {\n                    var animation = series[j];\n                    if (!animation.complete) {\n                        anchor = animation.anchor;\n                        break;\n                    }\n                }\n            }\n        }\n        this.animations_.length = 0;\n        this.cancelAnchor_ = anchor;\n        this.nextCenter_ = null;\n        this.nextResolution_ = NaN;\n        this.nextRotation_ = NaN;\n    };\n    /**\n     * Update all animations.\n     */\n    View.prototype.updateAnimations_ = function () {\n        if (this.updateAnimationKey_ !== undefined) {\n            cancelAnimationFrame(this.updateAnimationKey_);\n            this.updateAnimationKey_ = undefined;\n        }\n        if (!this.getAnimating()) {\n            return;\n        }\n        var now = Date.now();\n        var more = false;\n        for (var i = this.animations_.length - 1; i >= 0; --i) {\n            var series = this.animations_[i];\n            var seriesComplete = true;\n            for (var j = 0, jj = series.length; j < jj; ++j) {\n                var animation = series[j];\n                if (animation.complete) {\n                    continue;\n                }\n                var elapsed = now - animation.start;\n                var fraction = animation.duration > 0 ? elapsed / animation.duration : 1;\n                if (fraction >= 1) {\n                    animation.complete = true;\n                    fraction = 1;\n                }\n                else {\n                    seriesComplete = false;\n                }\n                var progress = animation.easing(fraction);\n                if (animation.sourceCenter) {\n                    var x0 = animation.sourceCenter[0];\n                    var y0 = animation.sourceCenter[1];\n                    var x1 = animation.targetCenter[0];\n                    var y1 = animation.targetCenter[1];\n                    this.nextCenter_ = animation.targetCenter;\n                    var x = x0 + progress * (x1 - x0);\n                    var y = y0 + progress * (y1 - y0);\n                    this.targetCenter_ = [x, y];\n                }\n                if (animation.sourceResolution && animation.targetResolution) {\n                    var resolution = progress === 1\n                        ? animation.targetResolution\n                        : animation.sourceResolution +\n                            progress *\n                                (animation.targetResolution - animation.sourceResolution);\n                    if (animation.anchor) {\n                        var size = this.getViewportSize_(this.getRotation());\n                        var constrainedResolution = this.constraints_.resolution(resolution, 0, size, true);\n                        this.targetCenter_ = this.calculateCenterZoom(constrainedResolution, animation.anchor);\n                    }\n                    this.nextResolution_ = animation.targetResolution;\n                    this.targetResolution_ = resolution;\n                    this.applyTargetState_(true);\n                }\n                if (animation.sourceRotation !== undefined &&\n                    animation.targetRotation !== undefined) {\n                    var rotation = progress === 1\n                        ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                            Math.PI\n                        : animation.sourceRotation +\n                            progress *\n                                (animation.targetRotation - animation.sourceRotation);\n                    if (animation.anchor) {\n                        var constrainedRotation = this.constraints_.rotation(rotation, true);\n                        this.targetCenter_ = this.calculateCenterRotate(constrainedRotation, animation.anchor);\n                    }\n                    this.nextRotation_ = animation.targetRotation;\n                    this.targetRotation_ = rotation;\n                }\n                this.applyTargetState_(true);\n                more = true;\n                if (!animation.complete) {\n                    break;\n                }\n            }\n            if (seriesComplete) {\n                this.animations_[i] = null;\n                this.setHint(ViewHint.ANIMATING, -1);\n                this.nextCenter_ = null;\n                this.nextResolution_ = NaN;\n                this.nextRotation_ = NaN;\n                var callback = series[0].callback;\n                if (callback) {\n                    animationCallback(callback, true);\n                }\n            }\n        }\n        // prune completed series\n        this.animations_ = this.animations_.filter(Boolean);\n        if (more && this.updateAnimationKey_ === undefined) {\n            this.updateAnimationKey_ = requestAnimationFrame(this.updateAnimations_.bind(this));\n        }\n    };\n    /**\n     * @param {number} rotation Target rotation.\n     * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n     */\n    View.prototype.calculateCenterRotate = function (rotation, anchor) {\n        var center;\n        var currentCenter = this.getCenterInternal();\n        if (currentCenter !== undefined) {\n            center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n            rotateCoordinate(center, rotation - this.getRotation());\n            addCoordinate(center, anchor);\n        }\n        return center;\n    };\n    /**\n     * @param {number} resolution Target resolution.\n     * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n     */\n    View.prototype.calculateCenterZoom = function (resolution, anchor) {\n        var center;\n        var currentCenter = this.getCenterInternal();\n        var currentResolution = this.getResolution();\n        if (currentCenter !== undefined && currentResolution !== undefined) {\n            var x = anchor[0] -\n                (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n            var y = anchor[1] -\n                (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n            center = [x, y];\n        }\n        return center;\n    };\n    /**\n     * Returns the current viewport size.\n     * @private\n     * @param {number} [opt_rotation] Take into account the rotation of the viewport when giving the size\n     * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n     */\n    View.prototype.getViewportSize_ = function (opt_rotation) {\n        var size = this.viewportSize_;\n        if (opt_rotation) {\n            var w = size[0];\n            var h = size[1];\n            return [\n                Math.abs(w * Math.cos(opt_rotation)) +\n                    Math.abs(h * Math.sin(opt_rotation)),\n                Math.abs(w * Math.sin(opt_rotation)) +\n                    Math.abs(h * Math.cos(opt_rotation)),\n            ];\n        }\n        else {\n            return size;\n        }\n    };\n    /**\n     * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n     * to avoid performance hit and layout reflow.\n     * This should be done on map size change.\n     * Note: the constraints are not resolved during an animation to avoid stopping it\n     * @param {import(\"./size.js\").Size} [opt_size] Viewport size; if undefined, [100, 100] is assumed\n     */\n    View.prototype.setViewportSize = function (opt_size) {\n        this.viewportSize_ = Array.isArray(opt_size)\n            ? opt_size.slice()\n            : [100, 100];\n        if (!this.getAnimating()) {\n            this.resolveConstraints(0);\n        }\n    };\n    /**\n     * Get the view center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.getCenter = function () {\n        var center = this.getCenterInternal();\n        if (!center) {\n            return center;\n        }\n        return toUserCoordinate(center, this.getProjection());\n    };\n    /**\n     * Get the view center without transforming to user projection.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n     */\n    View.prototype.getCenterInternal = function () {\n        return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (this.get(ViewProperty.CENTER));\n    };\n    /**\n     * @return {Constraints} Constraints.\n     */\n    View.prototype.getConstraints = function () {\n        return this.constraints_;\n    };\n    /**\n     * @return {boolean} Resolution constraint is set\n     */\n    View.prototype.getConstrainResolution = function () {\n        return this.options_.constrainResolution;\n    };\n    /**\n     * @param {Array<number>} [opt_hints] Destination array.\n     * @return {Array<number>} Hint.\n     */\n    View.prototype.getHints = function (opt_hints) {\n        if (opt_hints !== undefined) {\n            opt_hints[0] = this.hints_[0];\n            opt_hints[1] = this.hints_[1];\n            return opt_hints;\n        }\n        else {\n            return this.hints_.slice();\n        }\n    };\n    /**\n     * Calculate the extent for the current view state and the passed size.\n     * The size is the pixel dimensions of the box into which the calculated extent\n     * should fit. In most cases you want to get the extent of the entire map,\n     * that is `map.getSize()`.\n     * @param {import(\"./size.js\").Size} [opt_size] Box pixel size. If not provided, the size\n     * of the map that uses this view will be used.\n     * @return {import(\"./extent.js\").Extent} Extent.\n     * @api\n     */\n    View.prototype.calculateExtent = function (opt_size) {\n        var extent = this.calculateExtentInternal(opt_size);\n        return toUserExtent(extent, this.getProjection());\n    };\n    /**\n     * @param {import(\"./size.js\").Size} [opt_size] Box pixel size. If not provided,\n     * the map's last known viewport size will be used.\n     * @return {import(\"./extent.js\").Extent} Extent.\n     */\n    View.prototype.calculateExtentInternal = function (opt_size) {\n        var size = opt_size || this.getViewportSizeMinusPadding_();\n        var center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (this.getCenterInternal());\n        assert(center, 1); // The view center is not defined\n        var resolution = /** @type {!number} */ (this.getResolution());\n        assert(resolution !== undefined, 2); // The view resolution is not defined\n        var rotation = /** @type {!number} */ (this.getRotation());\n        assert(rotation !== undefined, 3); // The view rotation is not defined\n        return getForViewAndSize(center, resolution, rotation, size);\n    };\n    /**\n     * Get the maximum resolution of the view.\n     * @return {number} The maximum resolution of the view.\n     * @api\n     */\n    View.prototype.getMaxResolution = function () {\n        return this.maxResolution_;\n    };\n    /**\n     * Get the minimum resolution of the view.\n     * @return {number} The minimum resolution of the view.\n     * @api\n     */\n    View.prototype.getMinResolution = function () {\n        return this.minResolution_;\n    };\n    /**\n     * Get the maximum zoom level for the view.\n     * @return {number} The maximum zoom level.\n     * @api\n     */\n    View.prototype.getMaxZoom = function () {\n        return /** @type {number} */ (this.getZoomForResolution(this.minResolution_));\n    };\n    /**\n     * Set a new maximum zoom level for the view.\n     * @param {number} zoom The maximum zoom level.\n     * @api\n     */\n    View.prototype.setMaxZoom = function (zoom) {\n        this.applyOptions_(this.getUpdatedOptions_({ maxZoom: zoom }));\n    };\n    /**\n     * Get the minimum zoom level for the view.\n     * @return {number} The minimum zoom level.\n     * @api\n     */\n    View.prototype.getMinZoom = function () {\n        return /** @type {number} */ (this.getZoomForResolution(this.maxResolution_));\n    };\n    /**\n     * Set a new minimum zoom level for the view.\n     * @param {number} zoom The minimum zoom level.\n     * @api\n     */\n    View.prototype.setMinZoom = function (zoom) {\n        this.applyOptions_(this.getUpdatedOptions_({ minZoom: zoom }));\n    };\n    /**\n     * Set whether the view should allow intermediary zoom levels.\n     * @param {boolean} enabled Whether the resolution is constrained.\n     * @api\n     */\n    View.prototype.setConstrainResolution = function (enabled) {\n        this.applyOptions_(this.getUpdatedOptions_({ constrainResolution: enabled }));\n    };\n    /**\n     * Get the view projection.\n     * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n     * @api\n     */\n    View.prototype.getProjection = function () {\n        return this.projection_;\n    };\n    /**\n     * Get the view resolution.\n     * @return {number|undefined} The resolution of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.getResolution = function () {\n        return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n    };\n    /**\n     * Get the resolutions for the view. This returns the array of resolutions\n     * passed to the constructor of the View, or undefined if none were given.\n     * @return {Array<number>|undefined} The resolutions of the view.\n     * @api\n     */\n    View.prototype.getResolutions = function () {\n        return this.resolutions_;\n    };\n    /**\n     * Get the resolution for a provided extent (in map units) and size (in pixels).\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {import(\"./size.js\").Size} [opt_size] Box pixel size.\n     * @return {number} The resolution at which the provided extent will render at\n     *     the given size.\n     * @api\n     */\n    View.prototype.getResolutionForExtent = function (extent, opt_size) {\n        return this.getResolutionForExtentInternal(fromUserExtent(extent, this.getProjection()), opt_size);\n    };\n    /**\n     * Get the resolution for a provided extent (in map units) and size (in pixels).\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {import(\"./size.js\").Size} [opt_size] Box pixel size.\n     * @return {number} The resolution at which the provided extent will render at\n     *     the given size.\n     */\n    View.prototype.getResolutionForExtentInternal = function (extent, opt_size) {\n        var size = opt_size || this.getViewportSizeMinusPadding_();\n        var xResolution = getWidth(extent) / size[0];\n        var yResolution = getHeight(extent) / size[1];\n        return Math.max(xResolution, yResolution);\n    };\n    /**\n     * Return a function that returns a value between 0 and 1 for a\n     * resolution. Exponential scaling is assumed.\n     * @param {number} [opt_power] Power.\n     * @return {function(number): number} Resolution for value function.\n     */\n    View.prototype.getResolutionForValueFunction = function (opt_power) {\n        var power = opt_power || 2;\n        var maxResolution = this.getConstrainedResolution(this.maxResolution_);\n        var minResolution = this.minResolution_;\n        var max = Math.log(maxResolution / minResolution) / Math.log(power);\n        return (\n        /**\n         * @param {number} value Value.\n         * @return {number} Resolution.\n         */\n        function (value) {\n            var resolution = maxResolution / Math.pow(power, value * max);\n            return resolution;\n        });\n    };\n    /**\n     * Get the view rotation.\n     * @return {number} The rotation of the view in radians.\n     * @observable\n     * @api\n     */\n    View.prototype.getRotation = function () {\n        return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n    };\n    /**\n     * Return a function that returns a resolution for a value between\n     * 0 and 1. Exponential scaling is assumed.\n     * @param {number} [opt_power] Power.\n     * @return {function(number): number} Value for resolution function.\n     */\n    View.prototype.getValueForResolutionFunction = function (opt_power) {\n        var logPower = Math.log(opt_power || 2);\n        var maxResolution = this.getConstrainedResolution(this.maxResolution_);\n        var minResolution = this.minResolution_;\n        var max = Math.log(maxResolution / minResolution) / logPower;\n        return (\n        /**\n         * @param {number} resolution Resolution.\n         * @return {number} Value.\n         */\n        function (resolution) {\n            var value = Math.log(maxResolution / resolution) / logPower / max;\n            return value;\n        });\n    };\n    /**\n     * Returns the size of the viewport minus padding.\n     * @private\n     * @param {number} [opt_rotation] Take into account the rotation of the viewport when giving the size\n     * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n     */\n    View.prototype.getViewportSizeMinusPadding_ = function (opt_rotation) {\n        var size = this.getViewportSize_(opt_rotation);\n        var padding = this.padding_;\n        if (padding) {\n            size = [\n                size[0] - padding[1] - padding[3],\n                size[1] - padding[0] - padding[2],\n            ];\n        }\n        return size;\n    };\n    /**\n     * @return {State} View state.\n     */\n    View.prototype.getState = function () {\n        var projection = this.getProjection();\n        var resolution = this.getResolution();\n        var rotation = this.getRotation();\n        var center = /** @type {import(\"./coordinate.js\").Coordinate} */ (this.getCenterInternal());\n        var padding = this.padding_;\n        if (padding) {\n            var reducedSize = this.getViewportSizeMinusPadding_();\n            center = calculateCenterOn(center, this.getViewportSize_(), [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]], resolution, rotation);\n        }\n        return {\n            center: center.slice(0),\n            projection: projection !== undefined ? projection : null,\n            resolution: resolution,\n            nextCenter: this.nextCenter_,\n            nextResolution: this.nextResolution_,\n            nextRotation: this.nextRotation_,\n            rotation: rotation,\n            zoom: this.getZoom(),\n        };\n    };\n    /**\n     * Get the current zoom level. This method may return non-integer zoom levels\n     * if the view does not constrain the resolution, or if an interaction or\n     * animation is underway.\n     * @return {number|undefined} Zoom.\n     * @api\n     */\n    View.prototype.getZoom = function () {\n        var zoom;\n        var resolution = this.getResolution();\n        if (resolution !== undefined) {\n            zoom = this.getZoomForResolution(resolution);\n        }\n        return zoom;\n    };\n    /**\n     * Get the zoom level for a resolution.\n     * @param {number} resolution The resolution.\n     * @return {number|undefined} The zoom level for the provided resolution.\n     * @api\n     */\n    View.prototype.getZoomForResolution = function (resolution) {\n        var offset = this.minZoom_ || 0;\n        var max, zoomFactor;\n        if (this.resolutions_) {\n            var nearest = linearFindNearest(this.resolutions_, resolution, 1);\n            offset = nearest;\n            max = this.resolutions_[nearest];\n            if (nearest == this.resolutions_.length - 1) {\n                zoomFactor = 2;\n            }\n            else {\n                zoomFactor = max / this.resolutions_[nearest + 1];\n            }\n        }\n        else {\n            max = this.maxResolution_;\n            zoomFactor = this.zoomFactor_;\n        }\n        return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n    };\n    /**\n     * Get the resolution for a zoom level.\n     * @param {number} zoom Zoom level.\n     * @return {number} The view resolution for the provided zoom level.\n     * @api\n     */\n    View.prototype.getResolutionForZoom = function (zoom) {\n        if (this.resolutions_) {\n            if (this.resolutions_.length <= 1) {\n                return 0;\n            }\n            var baseLevel = clamp(Math.floor(zoom), 0, this.resolutions_.length - 2);\n            var zoomFactor = this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n            return (this.resolutions_[baseLevel] /\n                Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1)));\n        }\n        else {\n            return (this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_));\n        }\n    };\n    /**\n     * Fit the given geometry or extent based on the given map size and border.\n     * The size is pixel dimensions of the box to fit the extent into.\n     * In most cases you will want to use the map size, that is `map.getSize()`.\n     * Takes care of the map angle.\n     * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n     *     extent to fit the view to.\n     * @param {FitOptions} [opt_options] Options.\n     * @api\n     */\n    View.prototype.fit = function (geometryOrExtent, opt_options) {\n        /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n        var geometry;\n        assert(Array.isArray(geometryOrExtent) ||\n            typeof ( /** @type {?} */(geometryOrExtent).getSimplifiedGeometry) ===\n                'function', 24); // Invalid extent or geometry provided as `geometry`\n        if (Array.isArray(geometryOrExtent)) {\n            assert(!isEmpty(geometryOrExtent), 25); // Cannot fit empty extent provided as `geometry`\n            var extent = fromUserExtent(geometryOrExtent, this.getProjection());\n            geometry = polygonFromExtent(extent);\n        }\n        else if (geometryOrExtent.getType() === GeometryType.CIRCLE) {\n            var extent = fromUserExtent(geometryOrExtent.getExtent(), this.getProjection());\n            geometry = polygonFromExtent(extent);\n            geometry.rotate(this.getRotation(), getCenter(extent));\n        }\n        else {\n            var userProjection = getUserProjection();\n            if (userProjection) {\n                geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometryOrExtent\n                    .clone()\n                    .transform(userProjection, this.getProjection()));\n            }\n            else {\n                geometry = geometryOrExtent;\n            }\n        }\n        this.fitInternal(geometry, opt_options);\n    };\n    /**\n     * Calculate rotated extent\n     * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n     * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n     */\n    View.prototype.rotatedExtentForGeometry = function (geometry) {\n        var rotation = this.getRotation();\n        var cosAngle = Math.cos(rotation);\n        var sinAngle = Math.sin(-rotation);\n        var coords = geometry.getFlatCoordinates();\n        var stride = geometry.getStride();\n        var minRotX = +Infinity;\n        var minRotY = +Infinity;\n        var maxRotX = -Infinity;\n        var maxRotY = -Infinity;\n        for (var i = 0, ii = coords.length; i < ii; i += stride) {\n            var rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n            var rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n            minRotX = Math.min(minRotX, rotX);\n            minRotY = Math.min(minRotY, rotY);\n            maxRotX = Math.max(maxRotX, rotX);\n            maxRotY = Math.max(maxRotY, rotY);\n        }\n        return [minRotX, minRotY, maxRotX, maxRotY];\n    };\n    /**\n     * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n     * @param {FitOptions} [opt_options] Options.\n     */\n    View.prototype.fitInternal = function (geometry, opt_options) {\n        var options = opt_options || {};\n        var size = options.size;\n        if (!size) {\n            size = this.getViewportSizeMinusPadding_();\n        }\n        var padding = options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n        var nearest = options.nearest !== undefined ? options.nearest : false;\n        var minResolution;\n        if (options.minResolution !== undefined) {\n            minResolution = options.minResolution;\n        }\n        else if (options.maxZoom !== undefined) {\n            minResolution = this.getResolutionForZoom(options.maxZoom);\n        }\n        else {\n            minResolution = 0;\n        }\n        var rotatedExtent = this.rotatedExtentForGeometry(geometry);\n        // calculate resolution\n        var resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n            size[0] - padding[1] - padding[3],\n            size[1] - padding[0] - padding[2],\n        ]);\n        resolution = isNaN(resolution)\n            ? minResolution\n            : Math.max(resolution, minResolution);\n        resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n        // calculate center\n        var rotation = this.getRotation();\n        var sinAngle = Math.sin(rotation);\n        var cosAngle = Math.cos(rotation);\n        var centerRot = getCenter(rotatedExtent);\n        centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n        centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n        var centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n        var centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n        var center = this.getConstrainedCenter([centerX, centerY], resolution);\n        var callback = options.callback ? options.callback : VOID;\n        if (options.duration !== undefined) {\n            this.animateInternal({\n                resolution: resolution,\n                center: center,\n                duration: options.duration,\n                easing: options.easing,\n            }, callback);\n        }\n        else {\n            this.targetResolution_ = resolution;\n            this.targetCenter_ = center;\n            this.applyTargetState_(false, true);\n            animationCallback(callback, true);\n        }\n    };\n    /**\n     * Center on coordinate and view position.\n     * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"./size.js\").Size} size Box pixel size.\n     * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n     * @api\n     */\n    View.prototype.centerOn = function (coordinate, size, position) {\n        this.centerOnInternal(fromUserCoordinate(coordinate, this.getProjection()), size, position);\n    };\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"./size.js\").Size} size Box pixel size.\n     * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n     */\n    View.prototype.centerOnInternal = function (coordinate, size, position) {\n        this.setCenterInternal(calculateCenterOn(coordinate, size, position, this.getResolution(), this.getRotation()));\n    };\n    /**\n     * Calculates the shift between map and viewport center.\n     * @param {import(\"./coordinate.js\").Coordinate} center Center.\n     * @param {number} resolution Resolution.\n     * @param {number} rotation Rotation.\n     * @param {import(\"./size.js\").Size} size Size.\n     * @return {Array<number>|undefined} Center shift.\n     */\n    View.prototype.calculateCenterShift = function (center, resolution, rotation, size) {\n        var centerShift;\n        var padding = this.padding_;\n        if (padding && center) {\n            var reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n            var shiftedCenter = calculateCenterOn(center, size, [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]], resolution, rotation);\n            centerShift = [\n                center[0] - shiftedCenter[0],\n                center[1] - shiftedCenter[1],\n            ];\n        }\n        return centerShift;\n    };\n    /**\n     * @return {boolean} Is defined.\n     */\n    View.prototype.isDef = function () {\n        return !!this.getCenterInternal() && this.getResolution() !== undefined;\n    };\n    /**\n     * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n     * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n     * @api\n     */\n    View.prototype.adjustCenter = function (deltaCoordinates) {\n        var center = toUserCoordinate(this.targetCenter_, this.getProjection());\n        this.setCenter([\n            center[0] + deltaCoordinates[0],\n            center[1] + deltaCoordinates[1],\n        ]);\n    };\n    /**\n     * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n     * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n     */\n    View.prototype.adjustCenterInternal = function (deltaCoordinates) {\n        var center = this.targetCenter_;\n        this.setCenterInternal([\n            center[0] + deltaCoordinates[0],\n            center[1] + deltaCoordinates[1],\n        ]);\n    };\n    /**\n     * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n     * constraint will apply.\n     * @param {number} ratio The ratio to apply on the view resolution.\n     * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n     * @api\n     */\n    View.prototype.adjustResolution = function (ratio, opt_anchor) {\n        var anchor = opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n        this.adjustResolutionInternal(ratio, anchor);\n    };\n    /**\n     * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n     * constraint will apply.\n     * @param {number} ratio The ratio to apply on the view resolution.\n     * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n     */\n    View.prototype.adjustResolutionInternal = function (ratio, opt_anchor) {\n        var isMoving = this.getAnimating() || this.getInteracting();\n        var size = this.getViewportSize_(this.getRotation());\n        var newResolution = this.constraints_.resolution(this.targetResolution_ * ratio, 0, size, isMoving);\n        if (opt_anchor) {\n            this.targetCenter_ = this.calculateCenterZoom(newResolution, opt_anchor);\n        }\n        this.targetResolution_ *= ratio;\n        this.applyTargetState_();\n    };\n    /**\n     * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n     * constraint will apply.\n     * @param {number} delta Relative value to add to the zoom level.\n     * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n     * @api\n     */\n    View.prototype.adjustZoom = function (delta, opt_anchor) {\n        this.adjustResolution(Math.pow(this.zoomFactor_, -delta), opt_anchor);\n    };\n    /**\n     * Adds a value to the view rotation, optionally using an anchor. Any rotation\n     * constraint will apply.\n     * @param {number} delta Relative value to add to the zoom rotation, in radians.\n     * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The rotation center.\n     * @api\n     */\n    View.prototype.adjustRotation = function (delta, opt_anchor) {\n        if (opt_anchor) {\n            opt_anchor = fromUserCoordinate(opt_anchor, this.getProjection());\n        }\n        this.adjustRotationInternal(delta, opt_anchor);\n    };\n    /**\n     * @param {number} delta Relative value to add to the zoom rotation, in radians.\n     * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The rotation center.\n     */\n    View.prototype.adjustRotationInternal = function (delta, opt_anchor) {\n        var isMoving = this.getAnimating() || this.getInteracting();\n        var newRotation = this.constraints_.rotation(this.targetRotation_ + delta, isMoving);\n        if (opt_anchor) {\n            this.targetCenter_ = this.calculateCenterRotate(newRotation, opt_anchor);\n        }\n        this.targetRotation_ += delta;\n        this.applyTargetState_();\n    };\n    /**\n     * Set the center of the current view. Any extent constraint will apply.\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.setCenter = function (center) {\n        this.setCenterInternal(fromUserCoordinate(center, this.getProjection()));\n    };\n    /**\n     * Set the center using the view projection (not the user projection).\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n     */\n    View.prototype.setCenterInternal = function (center) {\n        this.targetCenter_ = center;\n        this.applyTargetState_();\n    };\n    /**\n     * @param {import(\"./ViewHint.js\").default} hint Hint.\n     * @param {number} delta Delta.\n     * @return {number} New value.\n     */\n    View.prototype.setHint = function (hint, delta) {\n        this.hints_[hint] += delta;\n        this.changed();\n        return this.hints_[hint];\n    };\n    /**\n     * Set the resolution for this view. Any resolution constraint will apply.\n     * @param {number|undefined} resolution The resolution of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.setResolution = function (resolution) {\n        this.targetResolution_ = resolution;\n        this.applyTargetState_();\n    };\n    /**\n     * Set the rotation for this view. Any rotation constraint will apply.\n     * @param {number} rotation The rotation of the view in radians.\n     * @observable\n     * @api\n     */\n    View.prototype.setRotation = function (rotation) {\n        this.targetRotation_ = rotation;\n        this.applyTargetState_();\n    };\n    /**\n     * Zoom to a specific zoom level. Any resolution constrain will apply.\n     * @param {number} zoom Zoom level.\n     * @api\n     */\n    View.prototype.setZoom = function (zoom) {\n        this.setResolution(this.getResolutionForZoom(zoom));\n    };\n    /**\n     * Recompute rotation/resolution/center based on target values.\n     * Note: we have to compute rotation first, then resolution and center considering that\n     * parameters can influence one another in case a view extent constraint is present.\n     * @param {boolean} [opt_doNotCancelAnims] Do not cancel animations.\n     * @param {boolean} [opt_forceMoving] Apply constraints as if the view is moving.\n     * @private\n     */\n    View.prototype.applyTargetState_ = function (opt_doNotCancelAnims, opt_forceMoving) {\n        var isMoving = this.getAnimating() || this.getInteracting() || opt_forceMoving;\n        // compute rotation\n        var newRotation = this.constraints_.rotation(this.targetRotation_, isMoving);\n        var size = this.getViewportSize_(newRotation);\n        var newResolution = this.constraints_.resolution(this.targetResolution_, 0, size, isMoving);\n        var newCenter = this.constraints_.center(this.targetCenter_, newResolution, size, isMoving, this.calculateCenterShift(this.targetCenter_, newResolution, newRotation, size));\n        if (this.get(ViewProperty.ROTATION) !== newRotation) {\n            this.set(ViewProperty.ROTATION, newRotation);\n        }\n        if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n            this.set(ViewProperty.RESOLUTION, newResolution);\n        }\n        if (!this.get(ViewProperty.CENTER) ||\n            !equals(this.get(ViewProperty.CENTER), newCenter)) {\n            this.set(ViewProperty.CENTER, newCenter);\n        }\n        if (this.getAnimating() && !opt_doNotCancelAnims) {\n            this.cancelAnimations();\n        }\n        this.cancelAnchor_ = undefined;\n    };\n    /**\n     * If any constraints need to be applied, an animation will be triggered.\n     * This is typically done on interaction end.\n     * Note: calling this with a duration of 0 will apply the constrained values straight away,\n     * without animation.\n     * @param {number} [opt_duration] The animation duration in ms.\n     * @param {number} [opt_resolutionDirection] Which direction to zoom.\n     * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n     */\n    View.prototype.resolveConstraints = function (opt_duration, opt_resolutionDirection, opt_anchor) {\n        var duration = opt_duration !== undefined ? opt_duration : 200;\n        var direction = opt_resolutionDirection || 0;\n        var newRotation = this.constraints_.rotation(this.targetRotation_);\n        var size = this.getViewportSize_(newRotation);\n        var newResolution = this.constraints_.resolution(this.targetResolution_, direction, size);\n        var newCenter = this.constraints_.center(this.targetCenter_, newResolution, size, false, this.calculateCenterShift(this.targetCenter_, newResolution, newRotation, size));\n        if (duration === 0 && !this.cancelAnchor_) {\n            this.targetResolution_ = newResolution;\n            this.targetRotation_ = newRotation;\n            this.targetCenter_ = newCenter;\n            this.applyTargetState_();\n            return;\n        }\n        var anchor = opt_anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n        this.cancelAnchor_ = undefined;\n        if (this.getResolution() !== newResolution ||\n            this.getRotation() !== newRotation ||\n            !this.getCenterInternal() ||\n            !equals(this.getCenterInternal(), newCenter)) {\n            if (this.getAnimating()) {\n                this.cancelAnimations();\n            }\n            this.animateInternal({\n                rotation: newRotation,\n                center: newCenter,\n                resolution: newResolution,\n                duration: duration,\n                easing: easeOut,\n                anchor: anchor,\n            });\n        }\n    };\n    /**\n     * Notify the View that an interaction has started.\n     * The view state will be resolved to a stable one if needed\n     * (depending on its constraints).\n     * @api\n     */\n    View.prototype.beginInteraction = function () {\n        this.resolveConstraints(0);\n        this.setHint(ViewHint.INTERACTING, 1);\n    };\n    /**\n     * Notify the View that an interaction has ended. The view state will be resolved\n     * to a stable one if needed (depending on its constraints).\n     * @param {number} [opt_duration] Animation duration in ms.\n     * @param {number} [opt_resolutionDirection] Which direction to zoom.\n     * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n     * @api\n     */\n    View.prototype.endInteraction = function (opt_duration, opt_resolutionDirection, opt_anchor) {\n        var anchor = opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n        this.endInteractionInternal(opt_duration, opt_resolutionDirection, anchor);\n    };\n    /**\n     * Notify the View that an interaction has ended. The view state will be resolved\n     * to a stable one if needed (depending on its constraints).\n     * @param {number} [opt_duration] Animation duration in ms.\n     * @param {number} [opt_resolutionDirection] Which direction to zoom.\n     * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n     */\n    View.prototype.endInteractionInternal = function (opt_duration, opt_resolutionDirection, opt_anchor) {\n        this.setHint(ViewHint.INTERACTING, -1);\n        this.resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor);\n    };\n    /**\n     * Get a valid position for the view center according to the current constraints.\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n     * @param {number} [opt_targetResolution] Target resolution. If not supplied, the current one will be used.\n     * This is useful to guess a valid center position at a different zoom level.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n     */\n    View.prototype.getConstrainedCenter = function (targetCenter, opt_targetResolution) {\n        var size = this.getViewportSize_(this.getRotation());\n        return this.constraints_.center(targetCenter, opt_targetResolution || this.getResolution(), size);\n    };\n    /**\n     * Get a valid zoom level according to the current view constraints.\n     * @param {number|undefined} targetZoom Target zoom.\n     * @param {number} [opt_direction=0] Indicate which resolution should be used\n     * by a renderer if the view resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @return {number|undefined} Valid zoom level.\n     */\n    View.prototype.getConstrainedZoom = function (targetZoom, opt_direction) {\n        var targetRes = this.getResolutionForZoom(targetZoom);\n        return this.getZoomForResolution(this.getConstrainedResolution(targetRes, opt_direction));\n    };\n    /**\n     * Get a valid resolution according to the current view constraints.\n     * @param {number|undefined} targetResolution Target resolution.\n     * @param {number} [opt_direction=0] Indicate which resolution should be used\n     * by a renderer if the view resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @return {number|undefined} Valid resolution.\n     */\n    View.prototype.getConstrainedResolution = function (targetResolution, opt_direction) {\n        var direction = opt_direction || 0;\n        var size = this.getViewportSize_(this.getRotation());\n        return this.constraints_.resolution(targetResolution, direction, size);\n    };\n    return View;\n}(BaseObject));\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n    setTimeout(function () {\n        callback(returnValue);\n    }, 0);\n}\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n    if (options.extent !== undefined) {\n        var smooth = options.smoothExtentConstraint !== undefined\n            ? options.smoothExtentConstraint\n            : true;\n        return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n    }\n    var projection = createProjection(options.projection, 'EPSG:3857');\n    if (options.multiWorld !== true && projection.isGlobal()) {\n        var extent = projection.getExtent().slice();\n        extent[0] = -Infinity;\n        extent[2] = Infinity;\n        return createExtent(extent, false, false);\n    }\n    return centerNone;\n}\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n    var resolutionConstraint;\n    var maxResolution;\n    var minResolution;\n    // TODO: move these to be ol constants\n    // see https://github.com/openlayers/openlayers/issues/2076\n    var defaultMaxZoom = 28;\n    var defaultZoomFactor = 2;\n    var minZoom = options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n    var maxZoom = options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n    var zoomFactor = options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n    var multiWorld = options.multiWorld !== undefined ? options.multiWorld : false;\n    var smooth = options.smoothResolutionConstraint !== undefined\n        ? options.smoothResolutionConstraint\n        : true;\n    var showFullExtent = options.showFullExtent !== undefined ? options.showFullExtent : false;\n    var projection = createProjection(options.projection, 'EPSG:3857');\n    var projExtent = projection.getExtent();\n    var constrainOnlyCenter = options.constrainOnlyCenter;\n    var extent = options.extent;\n    if (!multiWorld && !extent && projection.isGlobal()) {\n        constrainOnlyCenter = false;\n        extent = projExtent;\n    }\n    if (options.resolutions !== undefined) {\n        var resolutions = options.resolutions;\n        maxResolution = resolutions[minZoom];\n        minResolution =\n            resolutions[maxZoom] !== undefined\n                ? resolutions[maxZoom]\n                : resolutions[resolutions.length - 1];\n        if (options.constrainResolution) {\n            resolutionConstraint = createSnapToResolutions(resolutions, smooth, !constrainOnlyCenter && extent, showFullExtent);\n        }\n        else {\n            resolutionConstraint = createMinMaxResolution(maxResolution, minResolution, smooth, !constrainOnlyCenter && extent, showFullExtent);\n        }\n    }\n    else {\n        // calculate the default min and max resolution\n        var size = !projExtent\n            ? // use an extent that can fit the whole world if need be\n                (360 * METERS_PER_UNIT[Units.DEGREES]) / projection.getMetersPerUnit()\n            : Math.max(getWidth(projExtent), getHeight(projExtent));\n        var defaultMaxResolution = size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n        var defaultMinResolution = defaultMaxResolution /\n            Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n        // user provided maxResolution takes precedence\n        maxResolution = options.maxResolution;\n        if (maxResolution !== undefined) {\n            minZoom = 0;\n        }\n        else {\n            maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n        }\n        // user provided minResolution takes precedence\n        minResolution = options.minResolution;\n        if (minResolution === undefined) {\n            if (options.maxZoom !== undefined) {\n                if (options.maxResolution !== undefined) {\n                    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n                }\n                else {\n                    minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n                }\n            }\n            else {\n                minResolution = defaultMinResolution;\n            }\n        }\n        // given discrete zoom levels, minResolution may be different than provided\n        maxZoom =\n            minZoom +\n                Math.floor(Math.log(maxResolution / minResolution) / Math.log(zoomFactor));\n        minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n        if (options.constrainResolution) {\n            resolutionConstraint = createSnapToPower(zoomFactor, maxResolution, minResolution, smooth, !constrainOnlyCenter && extent, showFullExtent);\n        }\n        else {\n            resolutionConstraint = createMinMaxResolution(maxResolution, minResolution, smooth, !constrainOnlyCenter && extent, showFullExtent);\n        }\n    }\n    return {\n        constraint: resolutionConstraint,\n        maxResolution: maxResolution,\n        minResolution: minResolution,\n        minZoom: minZoom,\n        zoomFactor: zoomFactor,\n    };\n}\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n    var enableRotation = options.enableRotation !== undefined ? options.enableRotation : true;\n    if (enableRotation) {\n        var constrainRotation = options.constrainRotation;\n        if (constrainRotation === undefined || constrainRotation === true) {\n            return createSnapToZero();\n        }\n        else if (constrainRotation === false) {\n            return rotationNone;\n        }\n        else if (typeof constrainRotation === 'number') {\n            return createSnapToN(constrainRotation);\n        }\n        else {\n            return rotationNone;\n        }\n    }\n    else {\n        return disable;\n    }\n}\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n    if (animation.sourceCenter && animation.targetCenter) {\n        if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n            return false;\n        }\n    }\n    if (animation.sourceResolution !== animation.targetResolution) {\n        return false;\n    }\n    if (animation.sourceRotation !== animation.targetRotation) {\n        return false;\n    }\n    return true;\n}\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n    // calculate rotated position\n    var cosAngle = Math.cos(-rotation);\n    var sinAngle = Math.sin(-rotation);\n    var rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n    var rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n    rotX += (size[0] / 2 - position[0]) * resolution;\n    rotY += (position[1] - size[1] / 2) * resolution;\n    // go back to original angle\n    sinAngle = -sinAngle; // go back to original rotation\n    var centerX = rotX * cosAngle - rotY * sinAngle;\n    var centerY = rotY * cosAngle + rotX * sinAngle;\n    return [centerX, centerY];\n}\nexport default View;\n//# sourceMappingURL=View.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/PluggableMap\n */\nimport BaseObject from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport EventType from './events/EventType.js';\nimport LayerGroup from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, { getTilePriority } from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport { DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS } from './has.js';\nimport { TRUE } from './functions.js';\nimport { apply as applyTransform, create as createTransform, } from './transform.js';\nimport { assert } from './asserts.js';\nimport { clone, createOrUpdateEmpty, equals, getForViewAndSize, isEmpty, } from './extent.js';\nimport { fromUserCoordinate, toUserCoordinate } from './proj.js';\nimport { hasArea } from './size.js';\nimport { listen, unlistenByKey } from './events.js';\nimport { removeNode } from './dom.js';\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {import(\"rbush\").default} declutterTree DeclutterTree.\n * @property {null|import(\"./extent.js\").Extent} extent Extent.\n * @property {import(\"./extent.js\").Extent} [nextExtent] Next extent during an animation series.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n */\n/**\n * @typedef {function(PluggableMap, ?FrameState): any} PostRenderFunction\n */\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:layergroup'|'change:size'|'change:target'|'change:view'} MapObjectEventTypes\n */\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<MapObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapBrowserEventType\").Types, import(\"./MapBrowserEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapEventType\").Types, import(\"./MapEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./render/EventType\").MapRenderEventTypes, import(\"./render/Event\").default, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|MapObjectEventTypes|\n *      import(\"./MapBrowserEventType\").Types|import(\"./MapEventType\").Types|\n *      import(\"./render/EventType\").MapRenderEventTypes, Return>} PluggableMapOnSignature\n */\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control.defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction.defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * @property {View|Promise<import(\"./View.js\").ViewOptions>} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n/**\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nvar PluggableMap = /** @class */ (function (_super) {\n    __extends(PluggableMap, _super);\n    /**\n     * @param {MapOptions} options Map options.\n     */\n    function PluggableMap(options) {\n        var _this = _super.call(this) || this;\n        /***\n         * @type {PluggableMapOnSignature<import(\"./events\").EventsKey>}\n         */\n        _this.on;\n        /***\n         * @type {PluggableMapOnSignature<import(\"./events\").EventsKey>}\n         */\n        _this.once;\n        /***\n         * @type {PluggableMapOnSignature<void>}\n         */\n        _this.un;\n        var optionsInternal = createOptionsInternal(options);\n        /** @private */\n        _this.boundHandleBrowserEvent_ = _this.handleBrowserEvent.bind(_this);\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.maxTilesLoading_ =\n            options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ =\n            options.pixelRatio !== undefined\n                ? options.pixelRatio\n                : DEVICE_PIXEL_RATIO;\n        /**\n         * @private\n         * @type {*}\n         */\n        _this.postRenderTimeoutHandle_;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.animationDelayKey_;\n        /**\n         * @private\n         */\n        _this.animationDelay_ = /** @this {PluggableMap} */ function () {\n            this.animationDelayKey_ = undefined;\n            this.renderFrame_(Date.now());\n        }.bind(_this);\n        /**\n         * @private\n         * @type {import(\"./transform.js\").Transform}\n         */\n        _this.coordinateToPixelTransform_ = createTransform();\n        /**\n         * @private\n         * @type {import(\"./transform.js\").Transform}\n         */\n        _this.pixelToCoordinateTransform_ = createTransform();\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.frameIndex_ = 0;\n        /**\n         * @private\n         * @type {?FrameState}\n         */\n        _this.frameState_ = null;\n        /**\n         * The extent at the previous 'moveend' event.\n         * @private\n         * @type {import(\"./extent.js\").Extent}\n         */\n        _this.previousExtent_ = null;\n        /**\n         * @private\n         * @type {?import(\"./events.js\").EventsKey}\n         */\n        _this.viewPropertyListenerKey_ = null;\n        /**\n         * @private\n         * @type {?import(\"./events.js\").EventsKey}\n         */\n        _this.viewChangeListenerKey_ = null;\n        /**\n         * @private\n         * @type {?Array<import(\"./events.js\").EventsKey>}\n         */\n        _this.layerGroupPropertyListenerKeys_ = null;\n        /**\n         * @private\n         * @type {!HTMLElement}\n         */\n        _this.viewport_ = document.createElement('div');\n        _this.viewport_.className =\n            'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n        _this.viewport_.style.position = 'relative';\n        _this.viewport_.style.overflow = 'hidden';\n        _this.viewport_.style.width = '100%';\n        _this.viewport_.style.height = '100%';\n        /**\n         * @private\n         * @type {!HTMLElement}\n         */\n        _this.overlayContainer_ = document.createElement('div');\n        _this.overlayContainer_.style.position = 'absolute';\n        _this.overlayContainer_.style.zIndex = '0';\n        _this.overlayContainer_.style.width = '100%';\n        _this.overlayContainer_.style.height = '100%';\n        _this.overlayContainer_.style.pointerEvents = 'none';\n        _this.overlayContainer_.className = 'ol-overlaycontainer';\n        _this.viewport_.appendChild(_this.overlayContainer_);\n        /**\n         * @private\n         * @type {!HTMLElement}\n         */\n        _this.overlayContainerStopEvent_ = document.createElement('div');\n        _this.overlayContainerStopEvent_.style.position = 'absolute';\n        _this.overlayContainerStopEvent_.style.zIndex = '0';\n        _this.overlayContainerStopEvent_.style.width = '100%';\n        _this.overlayContainerStopEvent_.style.height = '100%';\n        _this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n        _this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n        _this.viewport_.appendChild(_this.overlayContainerStopEvent_);\n        /**\n         * @private\n         * @type {MapBrowserEventHandler}\n         */\n        _this.mapBrowserEventHandler_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.moveTolerance_ = options.moveTolerance;\n        /**\n         * @private\n         * @type {HTMLElement|Document}\n         */\n        _this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n        /**\n         * @private\n         * @type {?Array<import(\"./events.js\").EventsKey>}\n         */\n        _this.keyHandlerKeys_ = null;\n        /**\n         * @type {Collection<import(\"./control/Control.js\").default>}\n         * @protected\n         */\n        _this.controls = optionsInternal.controls || new Collection();\n        /**\n         * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n         * @protected\n         */\n        _this.interactions = optionsInternal.interactions || new Collection();\n        /**\n         * @type {Collection<import(\"./Overlay.js\").default>}\n         * @private\n         */\n        _this.overlays_ = optionsInternal.overlays;\n        /**\n         * A lookup of overlays by id.\n         * @private\n         * @type {Object<string, import(\"./Overlay.js\").default>}\n         */\n        _this.overlayIdIndex_ = {};\n        /**\n         * @type {import(\"./renderer/Map.js\").default}\n         * @private\n         */\n        _this.renderer_ = null;\n        /**\n         * @type {undefined|function(Event): void}\n         * @private\n         */\n        _this.handleResize_;\n        /**\n         * @private\n         * @type {!Array<PostRenderFunction>}\n         */\n        _this.postRenderFunctions_ = [];\n        /**\n         * @private\n         * @type {TileQueue}\n         */\n        _this.tileQueue_ = new TileQueue(_this.getTilePriority.bind(_this), _this.handleTileChange_.bind(_this));\n        _this.addChangeListener(MapProperty.LAYERGROUP, _this.handleLayerGroupChanged_);\n        _this.addChangeListener(MapProperty.VIEW, _this.handleViewChanged_);\n        _this.addChangeListener(MapProperty.SIZE, _this.handleSizeChanged_);\n        _this.addChangeListener(MapProperty.TARGET, _this.handleTargetChanged_);\n        // setProperties will trigger the rendering of the map if the map\n        // is \"defined\" already.\n        _this.setProperties(optionsInternal.values);\n        var map = _this;\n        if (options.view && !(options.view instanceof View)) {\n            options.view.then(function (viewOptions) {\n                map.setView(new View(viewOptions));\n            });\n        }\n        _this.controls.addEventListener(CollectionEventType.ADD, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(this);\n        }.bind(_this));\n        _this.controls.addEventListener(CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(null);\n        }.bind(_this));\n        _this.interactions.addEventListener(CollectionEventType.ADD, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(this);\n        }.bind(_this));\n        _this.interactions.addEventListener(CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(null);\n        }.bind(_this));\n        _this.overlays_.addEventListener(CollectionEventType.ADD, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            this.addOverlayInternal_(\n            /** @type {import(\"./Overlay.js\").default} */ (event.element));\n        }.bind(_this));\n        _this.overlays_.addEventListener(CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            var overlay = /** @type {import(\"./Overlay.js\").default} */ (event.element);\n            var id = overlay.getId();\n            if (id !== undefined) {\n                delete this.overlayIdIndex_[id.toString()];\n            }\n            event.element.setMap(null);\n        }.bind(_this));\n        _this.controls.forEach(\n        /**\n         * @param {import(\"./control/Control.js\").default} control Control.\n         * @this {PluggableMap}\n         */\n        function (control) {\n            control.setMap(this);\n        }.bind(_this));\n        _this.interactions.forEach(\n        /**\n         * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n         * @this {PluggableMap}\n         */\n        function (interaction) {\n            interaction.setMap(this);\n        }.bind(_this));\n        _this.overlays_.forEach(_this.addOverlayInternal_.bind(_this));\n        return _this;\n    }\n    /**\n     * @abstract\n     * @return {import(\"./renderer/Map.js\").default} The map renderer\n     */\n    PluggableMap.prototype.createRenderer = function () {\n        throw new Error('Use a map type that has a createRenderer method');\n    };\n    /**\n     * Add the given control to the map.\n     * @param {import(\"./control/Control.js\").default} control Control.\n     * @api\n     */\n    PluggableMap.prototype.addControl = function (control) {\n        this.getControls().push(control);\n    };\n    /**\n     * Add the given interaction to the map. If you want to add an interaction\n     * at another point of the collection use `getInteraction()` and the methods\n     * available on {@link module:ol/Collection~Collection}. This can be used to\n     * stop the event propagation from the handleEvent function. The interactions\n     * get to handle the events in the reverse order of this collection.\n     * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n     * @api\n     */\n    PluggableMap.prototype.addInteraction = function (interaction) {\n        this.getInteractions().push(interaction);\n    };\n    /**\n     * Adds the given layer to the top of this map. If you want to add a layer\n     * elsewhere in the stack, use `getLayers()` and the methods available on\n     * {@link module:ol/Collection~Collection}.\n     * @param {import(\"./layer/Base.js\").default} layer Layer.\n     * @api\n     */\n    PluggableMap.prototype.addLayer = function (layer) {\n        var layers = this.getLayerGroup().getLayers();\n        layers.push(layer);\n    };\n    /**\n     * Add the given overlay to the map.\n     * @param {import(\"./Overlay.js\").default} overlay Overlay.\n     * @api\n     */\n    PluggableMap.prototype.addOverlay = function (overlay) {\n        this.getOverlays().push(overlay);\n    };\n    /**\n     * This deals with map's overlay collection changes.\n     * @param {import(\"./Overlay.js\").default} overlay Overlay.\n     * @private\n     */\n    PluggableMap.prototype.addOverlayInternal_ = function (overlay) {\n        var id = overlay.getId();\n        if (id !== undefined) {\n            this.overlayIdIndex_[id.toString()] = overlay;\n        }\n        overlay.setMap(this);\n    };\n    /**\n     *\n     * Clean up.\n     */\n    PluggableMap.prototype.disposeInternal = function () {\n        this.setTarget(null);\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * Detect features that intersect a pixel on the viewport, and execute a\n     * callback with each intersecting feature. Layers included in the detection can\n     * be configured through the `layerFilter` option in `opt_options`.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n     *     called with two arguments. The first argument is one\n     *     {@link module:ol/Feature feature} or\n     *     {@link module:ol/render/Feature render feature} at the pixel, the second is\n     *     the {@link module:ol/layer/Layer layer} of the feature and will be null for\n     *     unmanaged layers. To stop detection, callback functions can return a\n     *     truthy value.\n     * @param {AtPixelOptions} [opt_options] Optional options.\n     * @return {T|undefined} Callback result, i.e. the return value of last\n     * callback execution, or the first truthy callback return value.\n     * @template T\n     * @api\n     */\n    PluggableMap.prototype.forEachFeatureAtPixel = function (pixel, callback, opt_options) {\n        if (!this.frameState_) {\n            return;\n        }\n        var coordinate = this.getCoordinateFromPixelInternal(pixel);\n        opt_options = opt_options !== undefined ? opt_options : {};\n        var hitTolerance = opt_options.hitTolerance !== undefined ? opt_options.hitTolerance : 0;\n        var layerFilter = opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n        var checkWrapped = opt_options.checkWrapped !== false;\n        return this.renderer_.forEachFeatureAtCoordinate(coordinate, this.frameState_, hitTolerance, checkWrapped, callback, null, layerFilter, null);\n    };\n    /**\n     * Get all features that intersect a pixel on the viewport.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {AtPixelOptions} [opt_options] Optional options.\n     * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n     * an empty array if none were found.\n     * @api\n     */\n    PluggableMap.prototype.getFeaturesAtPixel = function (pixel, opt_options) {\n        var features = [];\n        this.forEachFeatureAtPixel(pixel, function (feature) {\n            features.push(feature);\n        }, opt_options);\n        return features;\n    };\n    /**\n     * Detect layers that have a color value at a pixel on the viewport, and\n     * execute a callback with each matching layer. Layers included in the\n     * detection can be configured through `opt_layerFilter`.\n     *\n     * Note: this may give false positives unless the map layers have had different `className`\n     * properties assigned to them.\n     *\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {function(this: S, import(\"./layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback\n     *     Layer callback. This callback will receive two arguments: first is the\n     *     {@link module:ol/layer/Layer layer}, second argument is an array representing\n     *     [R, G, B, A] pixel values (0 - 255) and will be `null` for layer types\n     *     that do not currently support this argument. To stop detection, callback\n     *     functions can return a truthy value.\n     * @param {AtPixelOptions} [opt_options] Configuration options.\n     * @return {T|undefined} Callback result, i.e. the return value of last\n     * callback execution, or the first truthy callback return value.\n     * @template S,T\n     * @api\n     */\n    PluggableMap.prototype.forEachLayerAtPixel = function (pixel, callback, opt_options) {\n        if (!this.frameState_) {\n            return;\n        }\n        var options = opt_options || {};\n        var hitTolerance = options.hitTolerance !== undefined ? options.hitTolerance : 0;\n        var layerFilter = options.layerFilter || TRUE;\n        return this.renderer_.forEachLayerAtPixel(pixel, this.frameState_, hitTolerance, callback, layerFilter);\n    };\n    /**\n     * Detect if features intersect a pixel on the viewport. Layers included in the\n     * detection can be configured through `opt_layerFilter`.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {AtPixelOptions} [opt_options] Optional options.\n     * @return {boolean} Is there a feature at the given pixel?\n     * @api\n     */\n    PluggableMap.prototype.hasFeatureAtPixel = function (pixel, opt_options) {\n        if (!this.frameState_) {\n            return false;\n        }\n        var coordinate = this.getCoordinateFromPixelInternal(pixel);\n        opt_options = opt_options !== undefined ? opt_options : {};\n        var layerFilter = opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n        var hitTolerance = opt_options.hitTolerance !== undefined ? opt_options.hitTolerance : 0;\n        var checkWrapped = opt_options.checkWrapped !== false;\n        return this.renderer_.hasFeatureAtCoordinate(coordinate, this.frameState_, hitTolerance, checkWrapped, layerFilter, null);\n    };\n    /**\n     * Returns the coordinate in user projection for a browser event.\n     * @param {MouseEvent} event Event.\n     * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n     * @api\n     */\n    PluggableMap.prototype.getEventCoordinate = function (event) {\n        return this.getCoordinateFromPixel(this.getEventPixel(event));\n    };\n    /**\n     * Returns the coordinate in view projection for a browser event.\n     * @param {MouseEvent} event Event.\n     * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n     */\n    PluggableMap.prototype.getEventCoordinateInternal = function (event) {\n        return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n    };\n    /**\n     * Returns the map pixel position for a browser event relative to the viewport.\n     * @param {UIEvent} event Event.\n     * @return {import(\"./pixel.js\").Pixel} Pixel.\n     * @api\n     */\n    PluggableMap.prototype.getEventPixel = function (event) {\n        var viewportPosition = this.viewport_.getBoundingClientRect();\n        var eventPosition = \n        //FIXME Are we really calling this with a TouchEvent anywhere?\n        'changedTouches' in event\n            ? /** @type {TouchEvent} */ (event).changedTouches[0]\n            : /** @type {MouseEvent} */ (event);\n        return [\n            eventPosition.clientX - viewportPosition.left,\n            eventPosition.clientY - viewportPosition.top,\n        ];\n    };\n    /**\n     * Get the target in which this map is rendered.\n     * Note that this returns what is entered as an option or in setTarget:\n     * if that was an element, it returns an element; if a string, it returns that.\n     * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n     *     map is rendered in.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getTarget = function () {\n        return /** @type {HTMLElement|string|undefined} */ (this.get(MapProperty.TARGET));\n    };\n    /**\n     * Get the DOM element into which this map is rendered. In contrast to\n     * `getTarget` this method always return an `Element`, or `null` if the\n     * map has no target.\n     * @return {HTMLElement} The element that the map is rendered in.\n     * @api\n     */\n    PluggableMap.prototype.getTargetElement = function () {\n        var target = this.getTarget();\n        if (target !== undefined) {\n            return typeof target === 'string'\n                ? document.getElementById(target)\n                : target;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Get the coordinate for a given pixel.  This returns a coordinate in the\n     * user projection.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n     * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n     * @api\n     */\n    PluggableMap.prototype.getCoordinateFromPixel = function (pixel) {\n        return toUserCoordinate(this.getCoordinateFromPixelInternal(pixel), this.getView().getProjection());\n    };\n    /**\n     * Get the coordinate for a given pixel.  This returns a coordinate in the\n     * map view projection.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n     * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n     */\n    PluggableMap.prototype.getCoordinateFromPixelInternal = function (pixel) {\n        var frameState = this.frameState_;\n        if (!frameState) {\n            return null;\n        }\n        else {\n            return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n        }\n    };\n    /**\n     * Get the map controls. Modifying this collection changes the controls\n     * associated with the map.\n     * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n     * @api\n     */\n    PluggableMap.prototype.getControls = function () {\n        return this.controls;\n    };\n    /**\n     * Get the map overlays. Modifying this collection changes the overlays\n     * associated with the map.\n     * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n     * @api\n     */\n    PluggableMap.prototype.getOverlays = function () {\n        return this.overlays_;\n    };\n    /**\n     * Get an overlay by its identifier (the value returned by overlay.getId()).\n     * Note that the index treats string and numeric identifiers as the same. So\n     * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n     * @param {string|number} id Overlay identifier.\n     * @return {import(\"./Overlay.js\").default} Overlay.\n     * @api\n     */\n    PluggableMap.prototype.getOverlayById = function (id) {\n        var overlay = this.overlayIdIndex_[id.toString()];\n        return overlay !== undefined ? overlay : null;\n    };\n    /**\n     * Get the map interactions. Modifying this collection changes the interactions\n     * associated with the map.\n     *\n     * Interactions are used for e.g. pan, zoom and rotate.\n     * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n     * @api\n     */\n    PluggableMap.prototype.getInteractions = function () {\n        return this.interactions;\n    };\n    /**\n     * Get the layergroup associated with this map.\n     * @return {LayerGroup} A layer group containing the layers in this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getLayerGroup = function () {\n        return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n    };\n    /**\n     * Clear any existing layers and add layers to the map.\n     * @param {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>} layers The layers to be added to the map.\n     * @api\n     */\n    PluggableMap.prototype.setLayers = function (layers) {\n        var group = this.getLayerGroup();\n        if (layers instanceof Collection) {\n            group.setLayers(layers);\n            return;\n        }\n        var collection = group.getLayers();\n        collection.clear();\n        collection.extend(layers);\n    };\n    /**\n     * Get the collection of layers associated with this map.\n     * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n     * @api\n     */\n    PluggableMap.prototype.getLayers = function () {\n        var layers = this.getLayerGroup().getLayers();\n        return layers;\n    };\n    /**\n     * @return {boolean} Layers have sources that are still loading.\n     */\n    PluggableMap.prototype.getLoading = function () {\n        var layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n        for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n            var layer = layerStatesArray[i].layer;\n            var source = /** @type {import(\"./layer/Layer.js\").default} */ (layer).getSource();\n            if (source && source.loading) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * Get the pixel for a coordinate.  This takes a coordinate in the user\n     * projection and returns the corresponding pixel.\n     * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n     * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n     * @api\n     */\n    PluggableMap.prototype.getPixelFromCoordinate = function (coordinate) {\n        var viewCoordinate = fromUserCoordinate(coordinate, this.getView().getProjection());\n        return this.getPixelFromCoordinateInternal(viewCoordinate);\n    };\n    /**\n     * Get the pixel for a coordinate.  This takes a coordinate in the map view\n     * projection and returns the corresponding pixel.\n     * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n     * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n     */\n    PluggableMap.prototype.getPixelFromCoordinateInternal = function (coordinate) {\n        var frameState = this.frameState_;\n        if (!frameState) {\n            return null;\n        }\n        else {\n            return applyTransform(frameState.coordinateToPixelTransform, coordinate.slice(0, 2));\n        }\n    };\n    /**\n     * Get the map renderer.\n     * @return {import(\"./renderer/Map.js\").default} Renderer\n     */\n    PluggableMap.prototype.getRenderer = function () {\n        return this.renderer_;\n    };\n    /**\n     * Get the size of this map.\n     * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getSize = function () {\n        return /** @type {import(\"./size.js\").Size|undefined} */ (this.get(MapProperty.SIZE));\n    };\n    /**\n     * Get the view associated with this map. A view manages properties such as\n     * center and resolution.\n     * @return {View} The view that controls this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getView = function () {\n        return /** @type {View} */ (this.get(MapProperty.VIEW));\n    };\n    /**\n     * Get the element that serves as the map viewport.\n     * @return {HTMLElement} Viewport.\n     * @api\n     */\n    PluggableMap.prototype.getViewport = function () {\n        return this.viewport_;\n    };\n    /**\n     * Get the element that serves as the container for overlays.  Elements added to\n     * this container will let mousedown and touchstart events through to the map,\n     * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n     * events.\n     * @return {!HTMLElement} The map's overlay container.\n     */\n    PluggableMap.prototype.getOverlayContainer = function () {\n        return this.overlayContainer_;\n    };\n    /**\n     * Get the element that serves as a container for overlays that don't allow\n     * event propagation. Elements added to this container won't let mousedown and\n     * touchstart events through to the map, so clicks and gestures on an overlay\n     * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n     * @return {!HTMLElement} The map's overlay container that stops events.\n     */\n    PluggableMap.prototype.getOverlayContainerStopEvent = function () {\n        return this.overlayContainerStopEvent_;\n    };\n    /**\n     * @return {!Document} The document where the map is displayed.\n     */\n    PluggableMap.prototype.getOwnerDocument = function () {\n        var targetElement = this.getTargetElement();\n        return targetElement ? targetElement.ownerDocument : document;\n    };\n    /**\n     * @param {import(\"./Tile.js\").default} tile Tile.\n     * @param {string} tileSourceKey Tile source key.\n     * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n     * @param {number} tileResolution Tile resolution.\n     * @return {number} Tile priority.\n     */\n    PluggableMap.prototype.getTilePriority = function (tile, tileSourceKey, tileCenter, tileResolution) {\n        return getTilePriority(this.frameState_, tile, tileSourceKey, tileCenter, tileResolution);\n    };\n    /**\n     * @param {UIEvent} browserEvent Browser event.\n     * @param {string} [opt_type] Type.\n     */\n    PluggableMap.prototype.handleBrowserEvent = function (browserEvent, opt_type) {\n        var type = opt_type || browserEvent.type;\n        var mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n        this.handleMapBrowserEvent(mapBrowserEvent);\n    };\n    /**\n     * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n     */\n    PluggableMap.prototype.handleMapBrowserEvent = function (mapBrowserEvent) {\n        if (!this.frameState_) {\n            // With no view defined, we cannot translate pixels into geographical\n            // coordinates so interactions cannot be used.\n            return;\n        }\n        var originalEvent = /** @type {PointerEvent} */ (mapBrowserEvent.originalEvent);\n        var eventType = originalEvent.type;\n        if (eventType === PointerEventType.POINTERDOWN ||\n            eventType === EventType.WHEEL ||\n            eventType === EventType.KEYDOWN) {\n            var doc = this.getOwnerDocument();\n            var rootNode = this.viewport_.getRootNode\n                ? this.viewport_.getRootNode()\n                : doc;\n            var target = /** @type {Node} */ (originalEvent.target);\n            if (\n            // Abort if the target is a child of the container for elements whose events are not meant\n            // to be handled by map interactions.\n            this.overlayContainerStopEvent_.contains(target) ||\n                // Abort if the event target is a child of the container that is no longer in the page.\n                // It's possible for the target to no longer be in the page if it has been removed in an\n                // event listener, this might happen in a Control that recreates it's content based on\n                // user interaction either manually or via a render in something like https://reactjs.org/\n                !(rootNode === doc ? doc.documentElement : rootNode).contains(target)) {\n                return;\n            }\n        }\n        mapBrowserEvent.frameState = this.frameState_;\n        if (this.dispatchEvent(mapBrowserEvent) !== false) {\n            var interactionsArray = this.getInteractions().getArray().slice();\n            for (var i = interactionsArray.length - 1; i >= 0; i--) {\n                var interaction = interactionsArray[i];\n                if (interaction.getMap() !== this ||\n                    !interaction.getActive() ||\n                    !this.getTargetElement()) {\n                    continue;\n                }\n                var cont = interaction.handleEvent(mapBrowserEvent);\n                if (!cont || mapBrowserEvent.propagationStopped) {\n                    break;\n                }\n            }\n        }\n    };\n    /**\n     * @protected\n     */\n    PluggableMap.prototype.handlePostRender = function () {\n        var frameState = this.frameState_;\n        // Manage the tile queue\n        // Image loads are expensive and a limited resource, so try to use them\n        // efficiently:\n        // * When the view is static we allow a large number of parallel tile loads\n        //   to complete the frame as quickly as possible.\n        // * When animating or interacting, image loads can cause janks, so we reduce\n        //   the maximum number of loads per frame and limit the number of parallel\n        //   tile loads to remain reactive to view changes and to reduce the chance of\n        //   loading tiles that will quickly disappear from view.\n        var tileQueue = this.tileQueue_;\n        if (!tileQueue.isEmpty()) {\n            var maxTotalLoading = this.maxTilesLoading_;\n            var maxNewLoads = maxTotalLoading;\n            if (frameState) {\n                var hints = frameState.viewHints;\n                if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n                    var lowOnFrameBudget = Date.now() - frameState.time > 8;\n                    maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n                    maxNewLoads = lowOnFrameBudget ? 0 : 2;\n                }\n            }\n            if (tileQueue.getTilesLoading() < maxTotalLoading) {\n                tileQueue.reprioritize(); // FIXME only call if view has changed\n                tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n            }\n        }\n        if (frameState &&\n            this.hasListener(RenderEventType.RENDERCOMPLETE) &&\n            !frameState.animate &&\n            !this.tileQueue_.getTilesLoading() &&\n            !this.getLoading()) {\n            this.renderer_.dispatchRenderEvent(RenderEventType.RENDERCOMPLETE, frameState);\n        }\n        var postRenderFunctions = this.postRenderFunctions_;\n        for (var i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n            postRenderFunctions[i](this, frameState);\n        }\n        postRenderFunctions.length = 0;\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleSizeChanged_ = function () {\n        if (this.getView() && !this.getView().getAnimating()) {\n            this.getView().resolveConstraints(0);\n        }\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleTargetChanged_ = function () {\n        // target may be undefined, null, a string or an Element.\n        // If it's a string we convert it to an Element before proceeding.\n        // If it's not now an Element we remove the viewport from the DOM.\n        // If it's an Element we append the viewport element to it.\n        var targetElement;\n        if (this.getTarget()) {\n            targetElement = this.getTargetElement();\n        }\n        if (this.mapBrowserEventHandler_) {\n            for (var i = 0, ii = this.keyHandlerKeys_.length; i < ii; ++i) {\n                unlistenByKey(this.keyHandlerKeys_[i]);\n            }\n            this.keyHandlerKeys_ = null;\n            this.viewport_.removeEventListener(EventType.CONTEXTMENU, this.boundHandleBrowserEvent_);\n            this.viewport_.removeEventListener(EventType.WHEEL, this.boundHandleBrowserEvent_);\n            if (this.handleResize_ !== undefined) {\n                removeEventListener(EventType.RESIZE, this.handleResize_, false);\n                this.handleResize_ = undefined;\n            }\n            this.mapBrowserEventHandler_.dispose();\n            this.mapBrowserEventHandler_ = null;\n            removeNode(this.viewport_);\n        }\n        if (!targetElement) {\n            if (this.renderer_) {\n                clearTimeout(this.postRenderTimeoutHandle_);\n                this.postRenderTimeoutHandle_ = undefined;\n                this.postRenderFunctions_.length = 0;\n                this.renderer_.dispose();\n                this.renderer_ = null;\n            }\n            if (this.animationDelayKey_) {\n                cancelAnimationFrame(this.animationDelayKey_);\n                this.animationDelayKey_ = undefined;\n            }\n        }\n        else {\n            targetElement.appendChild(this.viewport_);\n            if (!this.renderer_) {\n                this.renderer_ = this.createRenderer();\n            }\n            this.mapBrowserEventHandler_ = new MapBrowserEventHandler(this, this.moveTolerance_);\n            for (var key in MapBrowserEventType) {\n                this.mapBrowserEventHandler_.addEventListener(MapBrowserEventType[key], this.handleMapBrowserEvent.bind(this));\n            }\n            this.viewport_.addEventListener(EventType.CONTEXTMENU, this.boundHandleBrowserEvent_, false);\n            this.viewport_.addEventListener(EventType.WHEEL, this.boundHandleBrowserEvent_, PASSIVE_EVENT_LISTENERS ? { passive: false } : false);\n            var keyboardEventTarget = !this.keyboardEventTarget_\n                ? targetElement\n                : this.keyboardEventTarget_;\n            this.keyHandlerKeys_ = [\n                listen(keyboardEventTarget, EventType.KEYDOWN, this.handleBrowserEvent, this),\n                listen(keyboardEventTarget, EventType.KEYPRESS, this.handleBrowserEvent, this),\n            ];\n            if (!this.handleResize_) {\n                this.handleResize_ = this.updateSize.bind(this);\n                window.addEventListener(EventType.RESIZE, this.handleResize_, false);\n            }\n        }\n        this.updateSize();\n        // updateSize calls setSize, so no need to call this.render\n        // ourselves here.\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleTileChange_ = function () {\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleViewPropertyChanged_ = function () {\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleViewChanged_ = function () {\n        if (this.viewPropertyListenerKey_) {\n            unlistenByKey(this.viewPropertyListenerKey_);\n            this.viewPropertyListenerKey_ = null;\n        }\n        if (this.viewChangeListenerKey_) {\n            unlistenByKey(this.viewChangeListenerKey_);\n            this.viewChangeListenerKey_ = null;\n        }\n        var view = this.getView();\n        if (view) {\n            this.updateViewportSize_();\n            this.viewPropertyListenerKey_ = listen(view, ObjectEventType.PROPERTYCHANGE, this.handleViewPropertyChanged_, this);\n            this.viewChangeListenerKey_ = listen(view, EventType.CHANGE, this.handleViewPropertyChanged_, this);\n            view.resolveConstraints(0);\n        }\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleLayerGroupChanged_ = function () {\n        if (this.layerGroupPropertyListenerKeys_) {\n            this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n            this.layerGroupPropertyListenerKeys_ = null;\n        }\n        var layerGroup = this.getLayerGroup();\n        if (layerGroup) {\n            this.layerGroupPropertyListenerKeys_ = [\n                listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n                listen(layerGroup, EventType.CHANGE, this.render, this),\n            ];\n        }\n        this.render();\n    };\n    /**\n     * @return {boolean} Is rendered.\n     */\n    PluggableMap.prototype.isRendered = function () {\n        return !!this.frameState_;\n    };\n    /**\n     * Requests an immediate render in a synchronous manner.\n     * @api\n     */\n    PluggableMap.prototype.renderSync = function () {\n        if (this.animationDelayKey_) {\n            cancelAnimationFrame(this.animationDelayKey_);\n        }\n        this.animationDelay_();\n    };\n    /**\n     * Redraws all text after new fonts have loaded\n     */\n    PluggableMap.prototype.redrawText = function () {\n        var layerStates = this.getLayerGroup().getLayerStatesArray();\n        for (var i = 0, ii = layerStates.length; i < ii; ++i) {\n            var layer = layerStates[i].layer;\n            if (layer.hasRenderer()) {\n                layer.getRenderer().handleFontsChanged();\n            }\n        }\n    };\n    /**\n     * Request a map rendering (at the next animation frame).\n     * @api\n     */\n    PluggableMap.prototype.render = function () {\n        if (this.renderer_ && this.animationDelayKey_ === undefined) {\n            this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n        }\n    };\n    /**\n     * Remove the given control from the map.\n     * @param {import(\"./control/Control.js\").default} control Control.\n     * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n     *     if the control was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeControl = function (control) {\n        return this.getControls().remove(control);\n    };\n    /**\n     * Remove the given interaction from the map.\n     * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n     * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n     *     undefined if the interaction was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeInteraction = function (interaction) {\n        return this.getInteractions().remove(interaction);\n    };\n    /**\n     * Removes the given layer from the map.\n     * @param {import(\"./layer/Base.js\").default} layer Layer.\n     * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n     *     layer was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeLayer = function (layer) {\n        var layers = this.getLayerGroup().getLayers();\n        return layers.remove(layer);\n    };\n    /**\n     * Remove the given overlay from the map.\n     * @param {import(\"./Overlay.js\").default} overlay Overlay.\n     * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n     *     if the overlay was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeOverlay = function (overlay) {\n        return this.getOverlays().remove(overlay);\n    };\n    /**\n     * @param {number} time Time.\n     * @private\n     */\n    PluggableMap.prototype.renderFrame_ = function (time) {\n        var _this = this;\n        var size = this.getSize();\n        var view = this.getView();\n        var previousFrameState = this.frameState_;\n        /** @type {?FrameState} */\n        var frameState = null;\n        if (size !== undefined && hasArea(size) && view && view.isDef()) {\n            var viewHints = view.getHints(this.frameState_ ? this.frameState_.viewHints : undefined);\n            var viewState = view.getState();\n            frameState = {\n                animate: false,\n                coordinateToPixelTransform: this.coordinateToPixelTransform_,\n                declutterTree: null,\n                extent: getForViewAndSize(viewState.center, viewState.resolution, viewState.rotation, size),\n                index: this.frameIndex_++,\n                layerIndex: 0,\n                layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n                pixelRatio: this.pixelRatio_,\n                pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n                postRenderFunctions: [],\n                size: size,\n                tileQueue: this.tileQueue_,\n                time: time,\n                usedTiles: {},\n                viewState: viewState,\n                viewHints: viewHints,\n                wantedTiles: {},\n            };\n            if (viewState.nextCenter && viewState.nextResolution) {\n                var rotation = isNaN(viewState.nextRotation)\n                    ? viewState.rotation\n                    : viewState.nextRotation;\n                frameState.nextExtent = getForViewAndSize(viewState.nextCenter, viewState.nextResolution, rotation, size);\n            }\n        }\n        this.frameState_ = frameState;\n        this.renderer_.renderFrame(frameState);\n        if (frameState) {\n            if (frameState.animate) {\n                this.render();\n            }\n            Array.prototype.push.apply(this.postRenderFunctions_, frameState.postRenderFunctions);\n            if (previousFrameState) {\n                var moveStart = !this.previousExtent_ ||\n                    (!isEmpty(this.previousExtent_) &&\n                        !equals(frameState.extent, this.previousExtent_));\n                if (moveStart) {\n                    this.dispatchEvent(new MapEvent(MapEventType.MOVESTART, this, previousFrameState));\n                    this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n                }\n            }\n            var idle = this.previousExtent_ &&\n                !frameState.viewHints[ViewHint.ANIMATING] &&\n                !frameState.viewHints[ViewHint.INTERACTING] &&\n                !equals(frameState.extent, this.previousExtent_);\n            if (idle) {\n                this.dispatchEvent(new MapEvent(MapEventType.MOVEEND, this, frameState));\n                clone(frameState.extent, this.previousExtent_);\n            }\n        }\n        this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n        if (!this.postRenderTimeoutHandle_) {\n            this.postRenderTimeoutHandle_ = setTimeout(function () {\n                _this.postRenderTimeoutHandle_ = undefined;\n                _this.handlePostRender();\n            }, 0);\n        }\n    };\n    /**\n     * Sets the layergroup of this map.\n     * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setLayerGroup = function (layerGroup) {\n        this.set(MapProperty.LAYERGROUP, layerGroup);\n    };\n    /**\n     * Set the size of this map.\n     * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setSize = function (size) {\n        this.set(MapProperty.SIZE, size);\n    };\n    /**\n     * Set the target element to render this map into.\n     * @param {HTMLElement|string} [target] The Element or id of the Element\n     *     that the map is rendered in.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setTarget = function (target) {\n        this.set(MapProperty.TARGET, target);\n    };\n    /**\n     * Set the view for this map.\n     * @param {View|Promise<import(\"./View.js\").ViewOptions>} view The view that controls this map.\n     * It is also possible to pass a promise that resolves to options for constructing a view.  This\n     * alternative allows view properties to be resolved by sources or other components that load\n     * view-related metadata.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setView = function (view) {\n        if (!view || view instanceof View) {\n            this.set(MapProperty.VIEW, view);\n            return;\n        }\n        this.set(MapProperty.VIEW, new View());\n        var map = this;\n        view.then(function (viewOptions) {\n            map.setView(new View(viewOptions));\n        });\n    };\n    /**\n     * Force a recalculation of the map viewport size.  This should be called when\n     * third-party code changes the size of the map viewport.\n     * @api\n     */\n    PluggableMap.prototype.updateSize = function () {\n        var targetElement = this.getTargetElement();\n        var size = undefined;\n        if (targetElement) {\n            var computedStyle = getComputedStyle(targetElement);\n            var width = targetElement.offsetWidth -\n                parseFloat(computedStyle['borderLeftWidth']) -\n                parseFloat(computedStyle['paddingLeft']) -\n                parseFloat(computedStyle['paddingRight']) -\n                parseFloat(computedStyle['borderRightWidth']);\n            var height = targetElement.offsetHeight -\n                parseFloat(computedStyle['borderTopWidth']) -\n                parseFloat(computedStyle['paddingTop']) -\n                parseFloat(computedStyle['paddingBottom']) -\n                parseFloat(computedStyle['borderBottomWidth']);\n            if (!isNaN(width) && !isNaN(height)) {\n                size = [width, height];\n                if (!hasArea(size) &&\n                    !!(targetElement.offsetWidth ||\n                        targetElement.offsetHeight ||\n                        targetElement.getClientRects().length)) {\n                    // eslint-disable-next-line\n                    console.warn(\"No map visible because the map container's width or height are 0.\");\n                }\n            }\n        }\n        this.setSize(size);\n        this.updateViewportSize_();\n    };\n    /**\n     * Recomputes the viewport size and save it on the view object (if any)\n     * @private\n     */\n    PluggableMap.prototype.updateViewportSize_ = function () {\n        var view = this.getView();\n        if (view) {\n            var size = undefined;\n            var computedStyle = getComputedStyle(this.viewport_);\n            if (computedStyle.width && computedStyle.height) {\n                size = [\n                    parseInt(computedStyle.width, 10),\n                    parseInt(computedStyle.height, 10),\n                ];\n            }\n            view.setViewportSize(size);\n        }\n    };\n    return PluggableMap;\n}(BaseObject));\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n    /**\n     * @type {HTMLElement|Document}\n     */\n    var keyboardEventTarget = null;\n    if (options.keyboardEventTarget !== undefined) {\n        keyboardEventTarget =\n            typeof options.keyboardEventTarget === 'string'\n                ? document.getElementById(options.keyboardEventTarget)\n                : options.keyboardEventTarget;\n    }\n    /**\n     * @type {Object<string, *>}\n     */\n    var values = {};\n    var layerGroup = options.layers &&\n        typeof ( /** @type {?} */(options.layers).getLayers) === 'function'\n        ? /** @type {LayerGroup} */ (options.layers)\n        : new LayerGroup({ layers: /** @type {Collection} */ (options.layers) });\n    values[MapProperty.LAYERGROUP] = layerGroup;\n    values[MapProperty.TARGET] = options.target;\n    values[MapProperty.VIEW] =\n        options.view instanceof View ? options.view : new View();\n    var controls;\n    if (options.controls !== undefined) {\n        if (Array.isArray(options.controls)) {\n            controls = new Collection(options.controls.slice());\n        }\n        else {\n            assert(typeof ( /** @type {?} */(options.controls).getArray) === 'function', 47); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n            controls = /** @type {Collection} */ (options.controls);\n        }\n    }\n    var interactions;\n    if (options.interactions !== undefined) {\n        if (Array.isArray(options.interactions)) {\n            interactions = new Collection(options.interactions.slice());\n        }\n        else {\n            assert(typeof ( /** @type {?} */(options.interactions).getArray) ===\n                'function', 48); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n            interactions = /** @type {Collection} */ (options.interactions);\n        }\n    }\n    var overlays;\n    if (options.overlays !== undefined) {\n        if (Array.isArray(options.overlays)) {\n            overlays = new Collection(options.overlays.slice());\n        }\n        else {\n            assert(typeof ( /** @type {?} */(options.overlays).getArray) === 'function', 49); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n            overlays = options.overlays;\n        }\n    }\n    else {\n        overlays = new Collection();\n    }\n    return {\n        controls: controls,\n        interactions: interactions,\n        keyboardEventTarget: keyboardEventTarget,\n        overlays: overlays,\n        values: values,\n    };\n}\nexport default PluggableMap;\n//# sourceMappingURL=PluggableMap.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport { VOID } from '../functions.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport { removeNode } from '../dom.js';\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * var myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nvar Control = /** @class */ (function (_super) {\n    __extends(Control, _super);\n    /**\n     * @param {Options} options Control options.\n     */\n    function Control(options) {\n        var _this = _super.call(this) || this;\n        var element = options.element;\n        if (element && !options.target && !element.style.pointerEvents) {\n            element.style.pointerEvents = 'auto';\n        }\n        /**\n         * @protected\n         * @type {HTMLElement}\n         */\n        _this.element = element ? element : null;\n        /**\n         * @private\n         * @type {HTMLElement}\n         */\n        _this.target_ = null;\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = null;\n        /**\n         * @protected\n         * @type {!Array<import(\"../events.js\").EventsKey>}\n         */\n        _this.listenerKeys = [];\n        if (options.render) {\n            _this.render = options.render;\n        }\n        if (options.target) {\n            _this.setTarget(options.target);\n        }\n        return _this;\n    }\n    /**\n     * Clean up.\n     */\n    Control.prototype.disposeInternal = function () {\n        removeNode(this.element);\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * Get the map associated with this control.\n     * @return {import(\"../PluggableMap.js\").default|undefined} Map.\n     * @api\n     */\n    Control.prototype.getMap = function () {\n        return this.map_;\n    };\n    /**\n     * Remove the control from its current map and attach it to the new map.\n     * Subclasses may set up event handlers to get notified about changes to\n     * the map here.\n     * @param {import(\"../PluggableMap.js\").default} [map] Map.\n     * @api\n     */\n    Control.prototype.setMap = function (map) {\n        if (this.map_) {\n            removeNode(this.element);\n        }\n        for (var i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n            unlistenByKey(this.listenerKeys[i]);\n        }\n        this.listenerKeys.length = 0;\n        this.map_ = map;\n        if (this.map_) {\n            var target = this.target_\n                ? this.target_\n                : map.getOverlayContainerStopEvent();\n            target.appendChild(this.element);\n            if (this.render !== VOID) {\n                this.listenerKeys.push(listen(map, MapEventType.POSTRENDER, this.render, this));\n            }\n            map.render();\n        }\n    };\n    /**\n     * Renders the control.\n     * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n     * @api\n     */\n    Control.prototype.render = function (mapEvent) { };\n    /**\n     * This function is used to set a target element for the control. It has no\n     * effect if it is called after the control has been added to the map (i.e.\n     * after `setMap` is called on the control). If no `target` is set in the\n     * options passed to the control constructor and if `setTarget` is not called\n     * then the control is added to the map's overlay container.\n     * @param {HTMLElement|string} target Target.\n     * @api\n     */\n    Control.prototype.setTarget = function (target) {\n        this.target_ =\n            typeof target === 'string' ? document.getElementById(target) : target;\n    };\n    return Control;\n}(BaseObject));\nexport default Control;\n//# sourceMappingURL=Control.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport { CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE } from '../css.js';\nimport { equals } from '../array.js';\nimport { inView } from '../layer/Layer.js';\nimport { removeChildren, replaceNode } from '../dom.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string|HTMLElement} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='›'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nvar Attribution = /** @class */ (function (_super) {\n    __extends(Attribution, _super);\n    /**\n     * @param {Options} [opt_options] Attribution options.\n     */\n    function Attribution(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            render: options.render,\n            target: options.target,\n        }) || this;\n        /**\n         * @private\n         * @type {HTMLElement}\n         */\n        _this.ulElement_ = document.createElement('ul');\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.collapsed_ =\n            options.collapsed !== undefined ? options.collapsed : true;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.userCollapsed_ = _this.collapsed_;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.overrideCollapsible_ = options.collapsible !== undefined;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.collapsible_ =\n            options.collapsible !== undefined ? options.collapsible : true;\n        if (!_this.collapsible_) {\n            _this.collapsed_ = false;\n        }\n        var className = options.className !== undefined ? options.className : 'ol-attribution';\n        var tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n        var expandClassName = options.expandClassName !== undefined\n            ? options.expandClassName\n            : className + '-expand';\n        var collapseLabel = options.collapseLabel !== undefined ? options.collapseLabel : '\\u203A';\n        var collapseClassName = options.collapseClassName !== undefined\n            ? options.collapseClassName\n            : className + '-collpase';\n        if (typeof collapseLabel === 'string') {\n            /**\n             * @private\n             * @type {HTMLElement}\n             */\n            _this.collapseLabel_ = document.createElement('span');\n            _this.collapseLabel_.textContent = collapseLabel;\n            _this.collapseLabel_.className = collapseClassName;\n        }\n        else {\n            _this.collapseLabel_ = collapseLabel;\n        }\n        var label = options.label !== undefined ? options.label : 'i';\n        if (typeof label === 'string') {\n            /**\n             * @private\n             * @type {HTMLElement}\n             */\n            _this.label_ = document.createElement('span');\n            _this.label_.textContent = label;\n            _this.label_.className = expandClassName;\n        }\n        else {\n            _this.label_ = label;\n        }\n        var activeLabel = _this.collapsible_ && !_this.collapsed_ ? _this.collapseLabel_ : _this.label_;\n        /**\n         * @private\n         * @type {HTMLElement}\n         */\n        _this.toggleButton_ = document.createElement('button');\n        _this.toggleButton_.setAttribute('type', 'button');\n        _this.toggleButton_.setAttribute('aria-expanded', String(!_this.collapsed_));\n        _this.toggleButton_.title = tipLabel;\n        _this.toggleButton_.appendChild(activeLabel);\n        _this.toggleButton_.addEventListener(EventType.CLICK, _this.handleClick_.bind(_this), false);\n        var cssClasses = className +\n            ' ' +\n            CLASS_UNSELECTABLE +\n            ' ' +\n            CLASS_CONTROL +\n            (_this.collapsed_ && _this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n            (_this.collapsible_ ? '' : ' ol-uncollapsible');\n        var element = _this.element;\n        element.className = cssClasses;\n        element.appendChild(_this.toggleButton_);\n        element.appendChild(_this.ulElement_);\n        /**\n         * A list of currently rendered resolutions.\n         * @type {Array<string>}\n         * @private\n         */\n        _this.renderedAttributions_ = [];\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderedVisible_ = true;\n        return _this;\n    }\n    /**\n     * Collect a list of visible attributions and set the collapsible state.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {Array<string>} Attributions.\n     * @private\n     */\n    Attribution.prototype.collectSourceAttributions_ = function (frameState) {\n        /**\n         * Used to determine if an attribution already exists.\n         * @type {!Object<string, boolean>}\n         */\n        var lookup = {};\n        /**\n         * A list of visible attributions.\n         * @type {Array<string>}\n         */\n        var visibleAttributions = [];\n        var collapsible = true;\n        var layerStatesArray = frameState.layerStatesArray;\n        for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n            var layerState = layerStatesArray[i];\n            if (!inView(layerState, frameState.viewState)) {\n                continue;\n            }\n            var source = /** @type {import(\"../layer/Layer.js\").default} */ (layerState.layer).getSource();\n            if (!source) {\n                continue;\n            }\n            var attributionGetter = source.getAttributions();\n            if (!attributionGetter) {\n                continue;\n            }\n            var attributions = attributionGetter(frameState);\n            if (!attributions) {\n                continue;\n            }\n            collapsible =\n                collapsible && source.getAttributionsCollapsible() !== false;\n            if (Array.isArray(attributions)) {\n                for (var j = 0, jj = attributions.length; j < jj; ++j) {\n                    if (!(attributions[j] in lookup)) {\n                        visibleAttributions.push(attributions[j]);\n                        lookup[attributions[j]] = true;\n                    }\n                }\n            }\n            else {\n                if (!(attributions in lookup)) {\n                    visibleAttributions.push(attributions);\n                    lookup[attributions] = true;\n                }\n            }\n        }\n        if (!this.overrideCollapsible_) {\n            this.setCollapsible(collapsible);\n        }\n        return visibleAttributions;\n    };\n    /**\n     * @private\n     * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    Attribution.prototype.updateElement_ = function (frameState) {\n        if (!frameState) {\n            if (this.renderedVisible_) {\n                this.element.style.display = 'none';\n                this.renderedVisible_ = false;\n            }\n            return;\n        }\n        var attributions = this.collectSourceAttributions_(frameState);\n        var visible = attributions.length > 0;\n        if (this.renderedVisible_ != visible) {\n            this.element.style.display = visible ? '' : 'none';\n            this.renderedVisible_ = visible;\n        }\n        if (equals(attributions, this.renderedAttributions_)) {\n            return;\n        }\n        removeChildren(this.ulElement_);\n        // append the attributions\n        for (var i = 0, ii = attributions.length; i < ii; ++i) {\n            var element = document.createElement('li');\n            element.innerHTML = attributions[i];\n            this.ulElement_.appendChild(element);\n        }\n        this.renderedAttributions_ = attributions;\n    };\n    /**\n     * @param {MouseEvent} event The event to handle\n     * @private\n     */\n    Attribution.prototype.handleClick_ = function (event) {\n        event.preventDefault();\n        this.handleToggle_();\n        this.userCollapsed_ = this.collapsed_;\n    };\n    /**\n     * @private\n     */\n    Attribution.prototype.handleToggle_ = function () {\n        this.element.classList.toggle(CLASS_COLLAPSED);\n        if (this.collapsed_) {\n            replaceNode(this.collapseLabel_, this.label_);\n        }\n        else {\n            replaceNode(this.label_, this.collapseLabel_);\n        }\n        this.collapsed_ = !this.collapsed_;\n        this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n    };\n    /**\n     * Return `true` if the attribution is collapsible, `false` otherwise.\n     * @return {boolean} True if the widget is collapsible.\n     * @api\n     */\n    Attribution.prototype.getCollapsible = function () {\n        return this.collapsible_;\n    };\n    /**\n     * Set whether the attribution should be collapsible.\n     * @param {boolean} collapsible True if the widget is collapsible.\n     * @api\n     */\n    Attribution.prototype.setCollapsible = function (collapsible) {\n        if (this.collapsible_ === collapsible) {\n            return;\n        }\n        this.collapsible_ = collapsible;\n        this.element.classList.toggle('ol-uncollapsible');\n        if (this.userCollapsed_) {\n            this.handleToggle_();\n        }\n    };\n    /**\n     * Collapse or expand the attribution according to the passed parameter. Will\n     * not do anything if the attribution isn't collapsible or if the current\n     * collapsed state is already the one requested.\n     * @param {boolean} collapsed True if the widget is collapsed.\n     * @api\n     */\n    Attribution.prototype.setCollapsed = function (collapsed) {\n        this.userCollapsed_ = collapsed;\n        if (!this.collapsible_ || this.collapsed_ === collapsed) {\n            return;\n        }\n        this.handleToggle_();\n    };\n    /**\n     * Return `true` when the attribution is currently collapsed or `false`\n     * otherwise.\n     * @return {boolean} True if the widget is collapsed.\n     * @api\n     */\n    Attribution.prototype.getCollapsed = function () {\n        return this.collapsed_;\n    };\n    /**\n     * Update the attribution element.\n     * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n     * @override\n     */\n    Attribution.prototype.render = function (mapEvent) {\n        this.updateElement_(mapEvent.frameState);\n    };\n    return Attribution;\n}(Control));\nexport default Attribution;\n//# sourceMappingURL=Attribution.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport { CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE } from '../css.js';\nimport { easeOut } from '../easing.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nvar Rotate = /** @class */ (function (_super) {\n    __extends(Rotate, _super);\n    /**\n     * @param {Options} [opt_options] Rotate options.\n     */\n    function Rotate(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            render: options.render,\n            target: options.target,\n        }) || this;\n        var className = options.className !== undefined ? options.className : 'ol-rotate';\n        var label = options.label !== undefined ? options.label : '\\u21E7';\n        var compassClassName = options.compassClassName !== undefined\n            ? options.compassClassName\n            : 'ol-compass';\n        /**\n         * @type {HTMLElement}\n         * @private\n         */\n        _this.label_ = null;\n        if (typeof label === 'string') {\n            _this.label_ = document.createElement('span');\n            _this.label_.className = compassClassName;\n            _this.label_.textContent = label;\n        }\n        else {\n            _this.label_ = label;\n            _this.label_.classList.add(compassClassName);\n        }\n        var tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n        var button = document.createElement('button');\n        button.className = className + '-reset';\n        button.setAttribute('type', 'button');\n        button.title = tipLabel;\n        button.appendChild(_this.label_);\n        button.addEventListener(EventType.CLICK, _this.handleClick_.bind(_this), false);\n        var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n        var element = _this.element;\n        element.className = cssClasses;\n        element.appendChild(button);\n        _this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.rotation_ = undefined;\n        if (_this.autoHide_) {\n            _this.element.classList.add(CLASS_HIDDEN);\n        }\n        return _this;\n    }\n    /**\n     * @param {MouseEvent} event The event to handle\n     * @private\n     */\n    Rotate.prototype.handleClick_ = function (event) {\n        event.preventDefault();\n        if (this.callResetNorth_ !== undefined) {\n            this.callResetNorth_();\n        }\n        else {\n            this.resetNorth_();\n        }\n    };\n    /**\n     * @private\n     */\n    Rotate.prototype.resetNorth_ = function () {\n        var map = this.getMap();\n        var view = map.getView();\n        if (!view) {\n            // the map does not have a view, so we can't act\n            // upon it\n            return;\n        }\n        var rotation = view.getRotation();\n        if (rotation !== undefined) {\n            if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n                view.animate({\n                    rotation: 0,\n                    duration: this.duration_,\n                    easing: easeOut,\n                });\n            }\n            else {\n                view.setRotation(0);\n            }\n        }\n    };\n    /**\n     * Update the rotate control element.\n     * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n     * @override\n     */\n    Rotate.prototype.render = function (mapEvent) {\n        var frameState = mapEvent.frameState;\n        if (!frameState) {\n            return;\n        }\n        var rotation = frameState.viewState.rotation;\n        if (rotation != this.rotation_) {\n            var transform = 'rotate(' + rotation + 'rad)';\n            if (this.autoHide_) {\n                var contains = this.element.classList.contains(CLASS_HIDDEN);\n                if (!contains && rotation === 0) {\n                    this.element.classList.add(CLASS_HIDDEN);\n                }\n                else if (contains && rotation !== 0) {\n                    this.element.classList.remove(CLASS_HIDDEN);\n                }\n            }\n            this.label_.style.transform = transform;\n        }\n        this.rotation_ = rotation;\n    };\n    return Rotate;\n}(Control));\nexport default Rotate;\n//# sourceMappingURL=Rotate.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport { CLASS_CONTROL, CLASS_UNSELECTABLE } from '../css.js';\nimport { easeOut } from '../easing.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='–'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nvar Zoom = /** @class */ (function (_super) {\n    __extends(Zoom, _super);\n    /**\n     * @param {Options} [opt_options] Zoom options.\n     */\n    function Zoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            target: options.target,\n        }) || this;\n        var className = options.className !== undefined ? options.className : 'ol-zoom';\n        var delta = options.delta !== undefined ? options.delta : 1;\n        var zoomInClassName = options.zoomInClassName !== undefined\n            ? options.zoomInClassName\n            : className + '-in';\n        var zoomOutClassName = options.zoomOutClassName !== undefined\n            ? options.zoomOutClassName\n            : className + '-out';\n        var zoomInLabel = options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n        var zoomOutLabel = options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2013';\n        var zoomInTipLabel = options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n        var zoomOutTipLabel = options.zoomOutTipLabel !== undefined\n            ? options.zoomOutTipLabel\n            : 'Zoom out';\n        var inElement = document.createElement('button');\n        inElement.className = zoomInClassName;\n        inElement.setAttribute('type', 'button');\n        inElement.title = zoomInTipLabel;\n        inElement.appendChild(typeof zoomInLabel === 'string'\n            ? document.createTextNode(zoomInLabel)\n            : zoomInLabel);\n        inElement.addEventListener(EventType.CLICK, _this.handleClick_.bind(_this, delta), false);\n        var outElement = document.createElement('button');\n        outElement.className = zoomOutClassName;\n        outElement.setAttribute('type', 'button');\n        outElement.title = zoomOutTipLabel;\n        outElement.appendChild(typeof zoomOutLabel === 'string'\n            ? document.createTextNode(zoomOutLabel)\n            : zoomOutLabel);\n        outElement.addEventListener(EventType.CLICK, _this.handleClick_.bind(_this, -delta), false);\n        var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n        var element = _this.element;\n        element.className = cssClasses;\n        element.appendChild(inElement);\n        element.appendChild(outElement);\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    /**\n     * @param {number} delta Zoom delta.\n     * @param {MouseEvent} event The event to handle\n     * @private\n     */\n    Zoom.prototype.handleClick_ = function (delta, event) {\n        event.preventDefault();\n        this.zoomByDelta_(delta);\n    };\n    /**\n     * @param {number} delta Zoom delta.\n     * @private\n     */\n    Zoom.prototype.zoomByDelta_ = function (delta) {\n        var map = this.getMap();\n        var view = map.getView();\n        if (!view) {\n            // the map does not have a view, so we can't act\n            // upon it\n            return;\n        }\n        var currentZoom = view.getZoom();\n        if (currentZoom !== undefined) {\n            var newZoom = view.getConstrainedZoom(currentZoom + delta);\n            if (this.duration_ > 0) {\n                if (view.getAnimating()) {\n                    view.cancelAnimations();\n                }\n                view.animate({\n                    zoom: newZoom,\n                    duration: this.duration_,\n                    easing: easeOut,\n                });\n            }\n            else {\n                view.setZoom(newZoom);\n            }\n        }\n    };\n    return Zoom;\n}(Control));\nexport default Zoom;\n//# sourceMappingURL=Zoom.js.map","/**\n * @module ol/interaction/Property\n */\n/**\n * @enum {string}\n */\nexport default {\n    ACTIVE: 'active',\n};\n//# sourceMappingURL=Property.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport { easeOut, linear } from '../easing.js';\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active', Return>} InteractionOnSignature\n */\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nvar Interaction = /** @class */ (function (_super) {\n    __extends(Interaction, _super);\n    /**\n     * @param {InteractionOptions} [opt_options] Options.\n     */\n    function Interaction(opt_options) {\n        var _this = _super.call(this) || this;\n        /***\n         * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n         */\n        _this.on;\n        /***\n         * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n         */\n        _this.once;\n        /***\n         * @type {InteractionOnSignature<void>}\n         */\n        _this.un;\n        if (opt_options && opt_options.handleEvent) {\n            _this.handleEvent = opt_options.handleEvent;\n        }\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = null;\n        _this.setActive(true);\n        return _this;\n    }\n    /**\n     * Return whether the interaction is currently active.\n     * @return {boolean} `true` if the interaction is active, `false` otherwise.\n     * @observable\n     * @api\n     */\n    Interaction.prototype.getActive = function () {\n        return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n    };\n    /**\n     * Get the map associated with this interaction.\n     * @return {import(\"../PluggableMap.js\").default} Map.\n     * @api\n     */\n    Interaction.prototype.getMap = function () {\n        return this.map_;\n    };\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event}.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     * @api\n     */\n    Interaction.prototype.handleEvent = function (mapBrowserEvent) {\n        return true;\n    };\n    /**\n     * Activate or deactivate the interaction.\n     * @param {boolean} active Active.\n     * @observable\n     * @api\n     */\n    Interaction.prototype.setActive = function (active) {\n        this.set(InteractionProperty.ACTIVE, active);\n    };\n    /**\n     * Remove the interaction from its current map and attach it to the new map.\n     * Subclasses may set up event handlers to get notified about changes to\n     * the map here.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    Interaction.prototype.setMap = function (map) {\n        this.map_ = map;\n    };\n    return Interaction;\n}(BaseObject));\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [opt_duration] Duration.\n */\nexport function pan(view, delta, opt_duration) {\n    var currentCenter = view.getCenterInternal();\n    if (currentCenter) {\n        var center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n        view.animateInternal({\n            duration: opt_duration !== undefined ? opt_duration : 250,\n            easing: linear,\n            center: view.getConstrainedCenter(center),\n        });\n    }\n}\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] Anchor coordinate in the user projection.\n * @param {number} [opt_duration] Duration.\n */\nexport function zoomByDelta(view, delta, opt_anchor, opt_duration) {\n    var currentZoom = view.getZoom();\n    if (currentZoom === undefined) {\n        return;\n    }\n    var newZoom = view.getConstrainedZoom(currentZoom + delta);\n    var newResolution = view.getResolutionForZoom(newZoom);\n    if (view.getAnimating()) {\n        view.cancelAnimations();\n    }\n    view.animate({\n        resolution: newResolution,\n        anchor: opt_anchor,\n        duration: opt_duration !== undefined ? opt_duration : 250,\n        easing: easeOut,\n    });\n}\nexport default Interaction;\n//# sourceMappingURL=Interaction.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, { zoomByDelta } from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nvar DoubleClickZoom = /** @class */ (function (_super) {\n    __extends(DoubleClickZoom, _super);\n    /**\n     * @param {Options} [opt_options] Options.\n     */\n    function DoubleClickZoom(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.delta_ = options.delta ? options.delta : 1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\n     * doubleclick) and eventually zooms the map.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     */\n    DoubleClickZoom.prototype.handleEvent = function (mapBrowserEvent) {\n        var stopEvent = false;\n        if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n            var browserEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n            var map = mapBrowserEvent.map;\n            var anchor = mapBrowserEvent.coordinate;\n            var delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n            var view = map.getView();\n            zoomByDelta(view, delta, anchor, this.duration_);\n            browserEvent.preventDefault();\n            stopEvent = true;\n        }\n        return !stopEvent;\n    };\n    return DoubleClickZoom;\n}(Interaction));\nexport default DoubleClickZoom;\n//# sourceMappingURL=DoubleClickZoom.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport { getValues } from '../obj.js';\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nvar PointerInteraction = /** @class */ (function (_super) {\n    __extends(PointerInteraction, _super);\n    /**\n     * @param {Options} [opt_options] Options.\n     */\n    function PointerInteraction(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, \n        /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)) || this;\n        if (options.handleDownEvent) {\n            _this.handleDownEvent = options.handleDownEvent;\n        }\n        if (options.handleDragEvent) {\n            _this.handleDragEvent = options.handleDragEvent;\n        }\n        if (options.handleMoveEvent) {\n            _this.handleMoveEvent = options.handleMoveEvent;\n        }\n        if (options.handleUpEvent) {\n            _this.handleUpEvent = options.handleUpEvent;\n        }\n        if (options.stopDown) {\n            _this.stopDown = options.stopDown;\n        }\n        /**\n         * @type {boolean}\n         * @protected\n         */\n        _this.handlingDownUpSequence = false;\n        /**\n         * @type {!Object<string, PointerEvent>}\n         * @private\n         */\n        _this.trackedPointers_ = {};\n        /**\n         * @type {Array<PointerEvent>}\n         * @protected\n         */\n        _this.targetPointers = [];\n        return _this;\n    }\n    /**\n     * Returns the current number of pointers involved in the interaction,\n     * e.g. `2` when two fingers are used.\n     * @return {number} The number of pointers.\n     * @api\n     */\n    PointerInteraction.prototype.getPointerCount = function () {\n        return this.targetPointers.length;\n    };\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     * @protected\n     */\n    PointerInteraction.prototype.handleDownEvent = function (mapBrowserEvent) {\n        return false;\n    };\n    /**\n     * Handle pointer drag events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @protected\n     */\n    PointerInteraction.prototype.handleDragEvent = function (mapBrowserEvent) { };\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} and may call into\n     * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n     * detected.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     * @api\n     */\n    PointerInteraction.prototype.handleEvent = function (mapBrowserEvent) {\n        if (!mapBrowserEvent.originalEvent) {\n            return true;\n        }\n        var stopEvent = false;\n        this.updateTrackedPointers_(mapBrowserEvent);\n        if (this.handlingDownUpSequence) {\n            if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n                this.handleDragEvent(mapBrowserEvent);\n                // prevent page scrolling during dragging\n                mapBrowserEvent.originalEvent.preventDefault();\n            }\n            else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n                var handledUp = this.handleUpEvent(mapBrowserEvent);\n                this.handlingDownUpSequence =\n                    handledUp && this.targetPointers.length > 0;\n            }\n        }\n        else {\n            if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n                var handled = this.handleDownEvent(mapBrowserEvent);\n                this.handlingDownUpSequence = handled;\n                stopEvent = this.stopDown(handled);\n            }\n            else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n                this.handleMoveEvent(mapBrowserEvent);\n            }\n        }\n        return !stopEvent;\n    };\n    /**\n     * Handle pointer move events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @protected\n     */\n    PointerInteraction.prototype.handleMoveEvent = function (mapBrowserEvent) { };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     * @protected\n     */\n    PointerInteraction.prototype.handleUpEvent = function (mapBrowserEvent) {\n        return false;\n    };\n    /**\n     * This function is used to determine if \"down\" events should be propagated\n     * to other interactions or should be stopped.\n     * @param {boolean} handled Was the event handled by the interaction?\n     * @return {boolean} Should the `down` event be stopped?\n     */\n    PointerInteraction.prototype.stopDown = function (handled) {\n        return handled;\n    };\n    /**\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @private\n     */\n    PointerInteraction.prototype.updateTrackedPointers_ = function (mapBrowserEvent) {\n        if (isPointerDraggingEvent(mapBrowserEvent)) {\n            var event_1 = mapBrowserEvent.originalEvent;\n            var id = event_1.pointerId.toString();\n            if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n                delete this.trackedPointers_[id];\n            }\n            else if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n                this.trackedPointers_[id] = event_1;\n            }\n            else if (id in this.trackedPointers_) {\n                // update only when there was a pointerdown event for this pointer\n                this.trackedPointers_[id] = event_1;\n            }\n            this.targetPointers = getValues(this.trackedPointers_);\n        }\n    };\n    return PointerInteraction;\n}(Interaction));\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {import(\"../pixel.js\").Pixel} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n    var length = pointerEvents.length;\n    var clientX = 0;\n    var clientY = 0;\n    for (var i = 0; i < length; i++) {\n        clientX += pointerEvents[i].clientX;\n        clientY += pointerEvents[i].clientY;\n    }\n    return [clientX / length, clientY / length];\n}\n/**\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\n *     or pointerup event.\n */\nfunction isPointerDraggingEvent(mapBrowserEvent) {\n    var type = mapBrowserEvent.type;\n    return (type === MapBrowserEventType.POINTERDOWN ||\n        type === MapBrowserEventType.POINTERDRAG ||\n        type === MapBrowserEventType.POINTERUP);\n}\nexport default PointerInteraction;\n//# sourceMappingURL=Pointer.js.map","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport { FALSE, TRUE } from '../functions.js';\nimport { MAC, WEBKIT } from '../has.js';\nimport { assert } from '../asserts.js';\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n    var conditions = arguments;\n    /**\n     * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n     * @return {boolean} All conditions passed.\n     */\n    return function (event) {\n        var pass = true;\n        for (var i = 0, ii = conditions.length; i < ii; ++i) {\n            pass = pass && conditions[i](event);\n            if (!pass) {\n                break;\n            }\n        }\n        return pass;\n    };\n}\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport var altKeyOnly = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (originalEvent.altKey &&\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n        !originalEvent.shiftKey);\n};\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport var altShiftKeysOnly = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (originalEvent.altKey &&\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n        originalEvent.shiftKey);\n};\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport var focus = function (event) {\n    return event.target.getTargetElement().contains(document.activeElement);\n};\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport var focusWithTabindex = function (event) {\n    return event.map.getTargetElement().hasAttribute('tabindex')\n        ? focus(event)\n        : true;\n};\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport var always = TRUE;\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport var click = function (mapBrowserEvent) {\n    return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport var mouseActionButton = function (mapBrowserEvent) {\n    var originalEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n    return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport var never = FALSE;\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport var pointerMove = function (mapBrowserEvent) {\n    return mapBrowserEvent.type == 'pointermove';\n};\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport var singleClick = function (mapBrowserEvent) {\n    return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport var doubleClick = function (mapBrowserEvent) {\n    return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport var noModifierKeys = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (!originalEvent.altKey &&\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n        !originalEvent.shiftKey);\n};\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport var platformModifierKeyOnly = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (!originalEvent.altKey &&\n        (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n        !originalEvent.shiftKey);\n};\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport var shiftKeyOnly = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (!originalEvent.altKey &&\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n        originalEvent.shiftKey);\n};\n/**\n * Return `true` if the target element is not editable, i.e. not a `<input>`-,\n * `<select>`- or `<textarea>`-element, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport var targetNotEditable = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    var tagName = /** @type {Element} */ (originalEvent.target).tagName;\n    return tagName !== 'INPUT' && tagName !== 'SELECT' && tagName !== 'TEXTAREA';\n};\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport var mouseOnly = function (mapBrowserEvent) {\n    var pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (mapBrowserEvent).originalEvent;\n    assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n    // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n    return pointerEvent.pointerType == 'mouse';\n};\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport var touchOnly = function (mapBrowserEvent) {\n    var pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (mapBrowserEvent).originalEvent;\n    assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n    // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n    return pointerEvt.pointerType === 'touch';\n};\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport var penOnly = function (mapBrowserEvent) {\n    var pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (mapBrowserEvent).originalEvent;\n    assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n    // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n    return pointerEvt.pointerType === 'pen';\n};\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport var primaryAction = function (mapBrowserEvent) {\n    var pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (mapBrowserEvent).originalEvent;\n    assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n    return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n//# sourceMappingURL=condition.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, { centroid as centroidFromPointers, } from './Pointer.js';\nimport { FALSE } from '../functions.js';\nimport { all, focusWithTabindex, noModifierKeys, primaryAction, } from '../events/condition.js';\nimport { easeOut } from '../easing.js';\nimport { rotate as rotateCoordinate, scale as scaleCoordinate, } from '../coordinate.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.noModifierKeys} and {@link module:ol/events/condition.primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nvar DragPan = /** @class */ (function (_super) {\n    __extends(DragPan, _super);\n    /**\n     * @param {Options} [opt_options] Options.\n     */\n    function DragPan(opt_options) {\n        var _this = _super.call(this, {\n            stopDown: FALSE,\n        }) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @private\n         * @type {import(\"../Kinetic.js\").default|undefined}\n         */\n        _this.kinetic_ = options.kinetic;\n        /**\n         * @type {import(\"../pixel.js\").Pixel}\n         */\n        _this.lastCentroid = null;\n        /**\n         * @type {number}\n         */\n        _this.lastPointersCount_;\n        /**\n         * @type {boolean}\n         */\n        _this.panning_ = false;\n        var condition = options.condition\n            ? options.condition\n            : all(noModifierKeys, primaryAction);\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.onFocusOnly\n            ? all(focusWithTabindex, condition)\n            : condition;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.noKinetic_ = false;\n        return _this;\n    }\n    /**\n     * Handle pointer drag events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     */\n    DragPan.prototype.handleDragEvent = function (mapBrowserEvent) {\n        if (!this.panning_) {\n            this.panning_ = true;\n            this.getMap().getView().beginInteraction();\n        }\n        var targetPointers = this.targetPointers;\n        var centroid = centroidFromPointers(targetPointers);\n        if (targetPointers.length == this.lastPointersCount_) {\n            if (this.kinetic_) {\n                this.kinetic_.update(centroid[0], centroid[1]);\n            }\n            if (this.lastCentroid) {\n                var delta = [\n                    this.lastCentroid[0] - centroid[0],\n                    centroid[1] - this.lastCentroid[1],\n                ];\n                var map = mapBrowserEvent.map;\n                var view = map.getView();\n                scaleCoordinate(delta, view.getResolution());\n                rotateCoordinate(delta, view.getRotation());\n                view.adjustCenterInternal(delta);\n            }\n        }\n        else if (this.kinetic_) {\n            // reset so we don't overestimate the kinetic energy after\n            // after one finger down, tiny drag, second finger down\n            this.kinetic_.begin();\n        }\n        this.lastCentroid = centroid;\n        this.lastPointersCount_ = targetPointers.length;\n        mapBrowserEvent.originalEvent.preventDefault();\n    };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    DragPan.prototype.handleUpEvent = function (mapBrowserEvent) {\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (this.targetPointers.length === 0) {\n            if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n                var distance = this.kinetic_.getDistance();\n                var angle = this.kinetic_.getAngle();\n                var center = view.getCenterInternal();\n                var centerpx = map.getPixelFromCoordinateInternal(center);\n                var dest = map.getCoordinateFromPixelInternal([\n                    centerpx[0] - distance * Math.cos(angle),\n                    centerpx[1] - distance * Math.sin(angle),\n                ]);\n                view.animateInternal({\n                    center: view.getConstrainedCenter(dest),\n                    duration: 500,\n                    easing: easeOut,\n                });\n            }\n            if (this.panning_) {\n                this.panning_ = false;\n                view.endInteraction();\n            }\n            return false;\n        }\n        else {\n            if (this.kinetic_) {\n                // reset so we don't overestimate the kinetic energy after\n                // after one finger up, tiny drag, second finger up\n                this.kinetic_.begin();\n            }\n            this.lastCentroid = null;\n            return true;\n        }\n    };\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    DragPan.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n            var map = mapBrowserEvent.map;\n            var view = map.getView();\n            this.lastCentroid = null;\n            // stop any current animation\n            if (view.getAnimating()) {\n                view.cancelAnimations();\n            }\n            if (this.kinetic_) {\n                this.kinetic_.begin();\n            }\n            // No kinetic as soon as more than one pointer on the screen is\n            // detected. This is to prevent nasty pans after pinch.\n            this.noKinetic_ = this.targetPointers.length > 1;\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return DragPan;\n}(PointerInteraction));\nexport default DragPan;\n//# sourceMappingURL=DragPan.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport { FALSE } from '../functions.js';\nimport { altShiftKeysOnly, mouseActionButton, mouseOnly, } from '../events/condition.js';\nimport { disable } from '../rotationconstraint.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nvar DragRotate = /** @class */ (function (_super) {\n    __extends(DragRotate, _super);\n    /**\n     * @param {Options} [opt_options] Options.\n     */\n    function DragRotate(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            stopDown: FALSE,\n        }) || this;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.lastAngle_ = undefined;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    /**\n     * Handle pointer drag events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     */\n    DragRotate.prototype.handleDragEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return;\n        }\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (view.getConstraints().rotation === disable) {\n            return;\n        }\n        var size = map.getSize();\n        var offset = mapBrowserEvent.pixel;\n        var theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n        if (this.lastAngle_ !== undefined) {\n            var delta = theta - this.lastAngle_;\n            view.adjustRotationInternal(-delta);\n        }\n        this.lastAngle_ = theta;\n    };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    DragRotate.prototype.handleUpEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return true;\n        }\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        view.endInteraction(this.duration_);\n        return false;\n    };\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    DragRotate.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return false;\n        }\n        if (mouseActionButton(mapBrowserEvent) &&\n            this.condition_(mapBrowserEvent)) {\n            var map = mapBrowserEvent.map;\n            map.getView().beginInteraction();\n            this.lastAngle_ = undefined;\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return DragRotate;\n}(PointerInteraction));\nexport default DragRotate;\n//# sourceMappingURL=DragRotate.js.map","/**\n * @module ol/render/Box\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\nvar RenderBox = /** @class */ (function (_super) {\n    __extends(RenderBox, _super);\n    /**\n     * @param {string} className CSS class name.\n     */\n    function RenderBox(className) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {import(\"../geom/Polygon.js\").default}\n         * @private\n         */\n        _this.geometry_ = null;\n        /**\n         * @type {HTMLDivElement}\n         * @private\n         */\n        _this.element_ = document.createElement('div');\n        _this.element_.style.position = 'absolute';\n        _this.element_.style.pointerEvents = 'auto';\n        _this.element_.className = 'ol-box ' + className;\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = null;\n        /**\n         * @private\n         * @type {import(\"../pixel.js\").Pixel}\n         */\n        _this.startPixel_ = null;\n        /**\n         * @private\n         * @type {import(\"../pixel.js\").Pixel}\n         */\n        _this.endPixel_ = null;\n        return _this;\n    }\n    /**\n     * Clean up.\n     */\n    RenderBox.prototype.disposeInternal = function () {\n        this.setMap(null);\n    };\n    /**\n     * @private\n     */\n    RenderBox.prototype.render_ = function () {\n        var startPixel = this.startPixel_;\n        var endPixel = this.endPixel_;\n        var px = 'px';\n        var style = this.element_.style;\n        style.left = Math.min(startPixel[0], endPixel[0]) + px;\n        style.top = Math.min(startPixel[1], endPixel[1]) + px;\n        style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n        style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n    };\n    /**\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    RenderBox.prototype.setMap = function (map) {\n        if (this.map_) {\n            this.map_.getOverlayContainer().removeChild(this.element_);\n            var style = this.element_.style;\n            style.left = 'inherit';\n            style.top = 'inherit';\n            style.width = 'inherit';\n            style.height = 'inherit';\n        }\n        this.map_ = map;\n        if (this.map_) {\n            this.map_.getOverlayContainer().appendChild(this.element_);\n        }\n    };\n    /**\n     * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n     * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n     */\n    RenderBox.prototype.setPixels = function (startPixel, endPixel) {\n        this.startPixel_ = startPixel;\n        this.endPixel_ = endPixel;\n        this.createOrUpdateGeometry();\n        this.render_();\n    };\n    /**\n     * Creates or updates the cached geometry.\n     */\n    RenderBox.prototype.createOrUpdateGeometry = function () {\n        var startPixel = this.startPixel_;\n        var endPixel = this.endPixel_;\n        var pixels = [\n            startPixel,\n            [startPixel[0], endPixel[1]],\n            endPixel,\n            [endPixel[0], startPixel[1]],\n        ];\n        var coordinates = pixels.map(this.map_.getCoordinateFromPixelInternal, this.map_);\n        // close the polygon\n        coordinates[4] = coordinates[0].slice();\n        if (!this.geometry_) {\n            this.geometry_ = new Polygon([coordinates]);\n        }\n        else {\n            this.geometry_.setCoordinates([coordinates]);\n        }\n    };\n    /**\n     * @return {import(\"../geom/Polygon.js\").default} Geometry.\n     */\n    RenderBox.prototype.getGeometry = function () {\n        return this.geometry_;\n    };\n    return RenderBox;\n}(Disposable));\nexport default RenderBox;\n//# sourceMappingURL=Box.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport { mouseActionButton } from '../events/condition.js';\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n/**\n * @enum {string}\n */\nvar DragBoxEventType = {\n    /**\n     * Triggered upon drag box start.\n     * @event DragBoxEvent#boxstart\n     * @api\n     */\n    BOXSTART: 'boxstart',\n    /**\n     * Triggered on drag when box is active.\n     * @event DragBoxEvent#boxdrag\n     * @api\n     */\n    BOXDRAG: 'boxdrag',\n    /**\n     * Triggered upon drag box end.\n     * @event DragBoxEvent#boxend\n     * @api\n     */\n    BOXEND: 'boxend',\n    /**\n     * Triggered upon drag box canceled.\n     * @event DragBoxEvent#boxcancel\n     * @api\n     */\n    BOXCANCEL: 'boxcancel',\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nvar DragBoxEvent = /** @class */ (function (_super) {\n    __extends(DragBoxEvent, _super);\n    /**\n     * @param {string} type The event type.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n     */\n    function DragBoxEvent(type, coordinate, mapBrowserEvent) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The coordinate of the drag event.\n         * @const\n         * @type {import(\"../coordinate.js\").Coordinate}\n         * @api\n         */\n        _this.coordinate = coordinate;\n        /**\n         * @const\n         * @type {import(\"../MapBrowserEvent.js\").default}\n         * @api\n         */\n        _this.mapBrowserEvent = mapBrowserEvent;\n        return _this;\n    }\n    return DragBoxEvent;\n}(Event));\nexport { DragBoxEvent };\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'boxcancel'|'boxdrag'|'boxend'|'boxstart', DragBoxEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'boxcancel'|'boxdrag'|'boxend', Return>} DragBoxOnSignature\n */\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nvar DragBox = /** @class */ (function (_super) {\n    __extends(DragBox, _super);\n    /**\n     * @param {Options} [opt_options] Options.\n     */\n    function DragBox(opt_options) {\n        var _this = _super.call(this) || this;\n        /***\n         * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n         */\n        _this.on;\n        /***\n         * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n         */\n        _this.once;\n        /***\n         * @type {DragBoxOnSignature<void>}\n         */\n        _this.un;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @type {import(\"../render/Box.js\").default}\n         * @private\n         */\n        _this.box_ = new RenderBox(options.className || 'ol-dragbox');\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n        if (options.onBoxEnd) {\n            _this.onBoxEnd = options.onBoxEnd;\n        }\n        /**\n         * @type {import(\"../pixel.js\").Pixel}\n         * @private\n         */\n        _this.startPixel_ = null;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : mouseActionButton;\n        /**\n         * @private\n         * @type {EndCondition}\n         */\n        _this.boxEndCondition_ = options.boxEndCondition\n            ? options.boxEndCondition\n            : _this.defaultBoxEndCondition;\n        return _this;\n    }\n    /**\n     * The default condition for determining whether the boxend event\n     * should fire.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n     *     leading to the box end.\n     * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n     * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n     * @return {boolean} Whether or not the boxend condition should be fired.\n     */\n    DragBox.prototype.defaultBoxEndCondition = function (mapBrowserEvent, startPixel, endPixel) {\n        var width = endPixel[0] - startPixel[0];\n        var height = endPixel[1] - startPixel[1];\n        return width * width + height * height >= this.minArea_;\n    };\n    /**\n     * Returns geometry of last drawn box.\n     * @return {import(\"../geom/Polygon.js\").default} Geometry.\n     * @api\n     */\n    DragBox.prototype.getGeometry = function () {\n        return this.box_.getGeometry();\n    };\n    /**\n     * Handle pointer drag events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     */\n    DragBox.prototype.handleDragEvent = function (mapBrowserEvent) {\n        this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n        this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXDRAG, mapBrowserEvent.coordinate, mapBrowserEvent));\n    };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    DragBox.prototype.handleUpEvent = function (mapBrowserEvent) {\n        this.box_.setMap(null);\n        var completeBox = this.boxEndCondition_(mapBrowserEvent, this.startPixel_, mapBrowserEvent.pixel);\n        if (completeBox) {\n            this.onBoxEnd(mapBrowserEvent);\n        }\n        this.dispatchEvent(new DragBoxEvent(completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL, mapBrowserEvent.coordinate, mapBrowserEvent));\n        return false;\n    };\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    DragBox.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (this.condition_(mapBrowserEvent)) {\n            this.startPixel_ = mapBrowserEvent.pixel;\n            this.box_.setMap(mapBrowserEvent.map);\n            this.box_.setPixels(this.startPixel_, this.startPixel_);\n            this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXSTART, mapBrowserEvent.coordinate, mapBrowserEvent));\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * Function to execute just before `onboxend` is fired\n     * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n     */\n    DragBox.prototype.onBoxEnd = function (event) { };\n    return DragBox;\n}(PointerInteraction));\nexport default DragBox;\n//# sourceMappingURL=DragBox.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport { easeOut } from '../easing.js';\nimport { shiftKeyOnly } from '../events/condition.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nvar DragZoom = /** @class */ (function (_super) {\n    __extends(DragZoom, _super);\n    /**\n     * @param {Options} [opt_options] Options.\n     */\n    function DragZoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var condition = options.condition ? options.condition : shiftKeyOnly;\n        _this = _super.call(this, {\n            condition: condition,\n            className: options.className || 'ol-dragzoom',\n            minArea: options.minArea,\n        }) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 200;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.out_ = options.out !== undefined ? options.out : false;\n        return _this;\n    }\n    /**\n     * Function to execute just before `onboxend` is fired\n     * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n     */\n    DragZoom.prototype.onBoxEnd = function (event) {\n        var map = this.getMap();\n        var view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n        var geometry = this.getGeometry();\n        if (this.out_) {\n            var rotatedExtent = view.rotatedExtentForGeometry(geometry);\n            var resolution = view.getResolutionForExtentInternal(rotatedExtent);\n            var factor = view.getResolution() / resolution;\n            geometry = geometry.clone();\n            geometry.scale(factor * factor);\n        }\n        view.fitInternal(geometry, {\n            duration: this.duration_,\n            easing: easeOut,\n        });\n    };\n    return DragZoom;\n}(DragBox));\nexport default DragZoom;\n//# sourceMappingURL=DragZoom.js.map","/**\n * @module ol/events/KeyCode\n */\n/**\n * @enum {number}\n * @const\n */\nexport default {\n    LEFT: 37,\n    UP: 38,\n    RIGHT: 39,\n    DOWN: 40,\n};\n//# sourceMappingURL=KeyCode.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, { pan } from './Interaction.js';\nimport KeyCode from '../events/KeyCode.js';\nimport { noModifierKeys, targetNotEditable } from '../events/condition.js';\nimport { rotate as rotateCoordinate } from '../coordinate.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.noModifierKeys} and\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nvar KeyboardPan = /** @class */ (function (_super) {\n    __extends(KeyboardPan, _super);\n    /**\n     * @param {Options} [opt_options] Options.\n     */\n    function KeyboardPan(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options || {};\n        /**\n         * @private\n         * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n         * @return {boolean} Combined condition result.\n         */\n        _this.defaultCondition_ = function (mapBrowserEvent) {\n            return (noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent));\n        };\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ =\n            options.condition !== undefined\n                ? options.condition\n                : _this.defaultCondition_;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 100;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelDelta_ =\n            options.pixelDelta !== undefined ? options.pixelDelta : 128;\n        return _this;\n    }\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n     * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n     * pressed).\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     * @this {KeyboardPan}\n     */\n    KeyboardPan.prototype.handleEvent = function (mapBrowserEvent) {\n        var stopEvent = false;\n        if (mapBrowserEvent.type == EventType.KEYDOWN) {\n            var keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n            var keyCode = keyEvent.keyCode;\n            if (this.condition_(mapBrowserEvent) &&\n                (keyCode == KeyCode.DOWN ||\n                    keyCode == KeyCode.LEFT ||\n                    keyCode == KeyCode.RIGHT ||\n                    keyCode == KeyCode.UP)) {\n                var map = mapBrowserEvent.map;\n                var view = map.getView();\n                var mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n                var deltaX = 0, deltaY = 0;\n                if (keyCode == KeyCode.DOWN) {\n                    deltaY = -mapUnitsDelta;\n                }\n                else if (keyCode == KeyCode.LEFT) {\n                    deltaX = -mapUnitsDelta;\n                }\n                else if (keyCode == KeyCode.RIGHT) {\n                    deltaX = mapUnitsDelta;\n                }\n                else {\n                    deltaY = mapUnitsDelta;\n                }\n                var delta = [deltaX, deltaY];\n                rotateCoordinate(delta, view.getRotation());\n                pan(view, delta, this.duration_);\n                keyEvent.preventDefault();\n                stopEvent = true;\n            }\n        }\n        return !stopEvent;\n    };\n    return KeyboardPan;\n}(Interaction));\nexport default KeyboardPan;\n//# sourceMappingURL=KeyboardPan.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, { zoomByDelta } from './Interaction.js';\nimport { targetNotEditable } from '../events/condition.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nvar KeyboardZoom = /** @class */ (function (_super) {\n    __extends(KeyboardZoom, _super);\n    /**\n     * @param {Options} [opt_options] Options.\n     */\n    function KeyboardZoom(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : targetNotEditable;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.delta_ = options.delta ? options.delta : 1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 100;\n        return _this;\n    }\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n     * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n     * key pressed was '+' or '-').\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     * @this {KeyboardZoom}\n     */\n    KeyboardZoom.prototype.handleEvent = function (mapBrowserEvent) {\n        var stopEvent = false;\n        if (mapBrowserEvent.type == EventType.KEYDOWN ||\n            mapBrowserEvent.type == EventType.KEYPRESS) {\n            var keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n            var charCode = keyEvent.charCode;\n            if (this.condition_(mapBrowserEvent) &&\n                (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))) {\n                var map = mapBrowserEvent.map;\n                var delta = charCode == '+'.charCodeAt(0) ? this.delta_ : -this.delta_;\n                var view = map.getView();\n                zoomByDelta(view, delta, undefined, this.duration_);\n                keyEvent.preventDefault();\n                stopEvent = true;\n            }\n        }\n        return !stopEvent;\n    };\n    return KeyboardZoom;\n}(Interaction));\nexport default KeyboardZoom;\n//# sourceMappingURL=KeyboardZoom.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, { zoomByDelta } from './Interaction.js';\nimport { DEVICE_PIXEL_RATIO, FIREFOX } from '../has.js';\nimport { all, always, focusWithTabindex } from '../events/condition.js';\nimport { clamp } from '../math.js';\n/**\n * @enum {string}\n */\nexport var Mode = {\n    TRACKPAD: 'trackpad',\n    WHEEL: 'wheel',\n};\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nvar MouseWheelZoom = /** @class */ (function (_super) {\n    __extends(MouseWheelZoom, _super);\n    /**\n     * @param {Options} [opt_options] Options.\n     */\n    function MouseWheelZoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, \n        /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.totalDelta_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.lastDelta_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.useAnchor_ =\n            options.useAnchor !== undefined ? options.useAnchor : true;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.constrainResolution_ =\n            options.constrainResolution !== undefined\n                ? options.constrainResolution\n                : false;\n        var condition = options.condition ? options.condition : always;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.onFocusOnly\n            ? all(focusWithTabindex, condition)\n            : condition;\n        /**\n         * @private\n         * @type {?import(\"../coordinate.js\").Coordinate}\n         */\n        _this.lastAnchor_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.startTime_ = undefined;\n        /**\n         * @private\n         * @type {?}\n         */\n        _this.timeoutId_;\n        /**\n         * @private\n         * @type {Mode|undefined}\n         */\n        _this.mode_ = undefined;\n        /**\n         * Trackpad events separated by this delay will be considered separate\n         * interactions.\n         * @type {number}\n         */\n        _this.trackpadEventGap_ = 400;\n        /**\n         * @type {?}\n         */\n        _this.trackpadTimeoutId_;\n        /**\n         * The number of delta values per zoom level\n         * @private\n         * @type {number}\n         */\n        _this.deltaPerZoom_ = 300;\n        return _this;\n    }\n    /**\n     * @private\n     */\n    MouseWheelZoom.prototype.endInteraction_ = function () {\n        this.trackpadTimeoutId_ = undefined;\n        var view = this.getMap().getView();\n        view.endInteraction(undefined, this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0, this.lastAnchor_);\n    };\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n     * zooms the map.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     */\n    MouseWheelZoom.prototype.handleEvent = function (mapBrowserEvent) {\n        if (!this.condition_(mapBrowserEvent)) {\n            return true;\n        }\n        var type = mapBrowserEvent.type;\n        if (type !== EventType.WHEEL) {\n            return true;\n        }\n        var map = mapBrowserEvent.map;\n        var wheelEvent = /** @type {WheelEvent} */ (mapBrowserEvent.originalEvent);\n        wheelEvent.preventDefault();\n        if (this.useAnchor_) {\n            this.lastAnchor_ = mapBrowserEvent.coordinate;\n        }\n        // Delta normalisation inspired by\n        // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n        var delta;\n        if (mapBrowserEvent.type == EventType.WHEEL) {\n            delta = wheelEvent.deltaY;\n            if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n                delta /= DEVICE_PIXEL_RATIO;\n            }\n            if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n                delta *= 40;\n            }\n        }\n        if (delta === 0) {\n            return false;\n        }\n        else {\n            this.lastDelta_ = delta;\n        }\n        var now = Date.now();\n        if (this.startTime_ === undefined) {\n            this.startTime_ = now;\n        }\n        if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n            this.mode_ = Math.abs(delta) < 4 ? Mode.TRACKPAD : Mode.WHEEL;\n        }\n        var view = map.getView();\n        if (this.mode_ === Mode.TRACKPAD &&\n            !(view.getConstrainResolution() || this.constrainResolution_)) {\n            if (this.trackpadTimeoutId_) {\n                clearTimeout(this.trackpadTimeoutId_);\n            }\n            else {\n                if (view.getAnimating()) {\n                    view.cancelAnimations();\n                }\n                view.beginInteraction();\n            }\n            this.trackpadTimeoutId_ = setTimeout(this.endInteraction_.bind(this), this.timeout_);\n            view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n            this.startTime_ = now;\n            return false;\n        }\n        this.totalDelta_ += delta;\n        var timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n        clearTimeout(this.timeoutId_);\n        this.timeoutId_ = setTimeout(this.handleWheelZoom_.bind(this, map), timeLeft);\n        return false;\n    };\n    /**\n     * @private\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    MouseWheelZoom.prototype.handleWheelZoom_ = function (map) {\n        var view = map.getView();\n        if (view.getAnimating()) {\n            view.cancelAnimations();\n        }\n        var delta = -clamp(this.totalDelta_, -this.maxDelta_ * this.deltaPerZoom_, this.maxDelta_ * this.deltaPerZoom_) / this.deltaPerZoom_;\n        if (view.getConstrainResolution() || this.constrainResolution_) {\n            // view has a zoom constraint, zoom by 1\n            delta = delta ? (delta > 0 ? 1 : -1) : 0;\n        }\n        zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n        this.mode_ = undefined;\n        this.totalDelta_ = 0;\n        this.lastAnchor_ = null;\n        this.startTime_ = undefined;\n        this.timeoutId_ = undefined;\n    };\n    /**\n     * Enable or disable using the mouse's location as an anchor when zooming\n     * @param {boolean} useAnchor true to zoom to the mouse's location, false\n     * to zoom to the center of the map\n     * @api\n     */\n    MouseWheelZoom.prototype.setMouseAnchor = function (useAnchor) {\n        this.useAnchor_ = useAnchor;\n        if (!useAnchor) {\n            this.lastAnchor_ = null;\n        }\n    };\n    return MouseWheelZoom;\n}(Interaction));\nexport default MouseWheelZoom;\n//# sourceMappingURL=MouseWheelZoom.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, { centroid as centroidFromPointers, } from './Pointer.js';\nimport { FALSE } from '../functions.js';\nimport { disable } from '../rotationconstraint.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nvar PinchRotate = /** @class */ (function (_super) {\n    __extends(PinchRotate, _super);\n    /**\n     * @param {Options} [opt_options] Options.\n     */\n    function PinchRotate(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n        if (!pointerOptions.stopDown) {\n            pointerOptions.stopDown = FALSE;\n        }\n        _this = _super.call(this, pointerOptions) || this;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        _this.anchor_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.lastAngle_ = undefined;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.rotating_ = false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.rotationDelta_ = 0.0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    /**\n     * Handle pointer drag events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     */\n    PinchRotate.prototype.handleDragEvent = function (mapBrowserEvent) {\n        var rotationDelta = 0.0;\n        var touch0 = this.targetPointers[0];\n        var touch1 = this.targetPointers[1];\n        // angle between touches\n        var angle = Math.atan2(touch1.clientY - touch0.clientY, touch1.clientX - touch0.clientX);\n        if (this.lastAngle_ !== undefined) {\n            var delta = angle - this.lastAngle_;\n            this.rotationDelta_ += delta;\n            if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n                this.rotating_ = true;\n            }\n            rotationDelta = delta;\n        }\n        this.lastAngle_ = angle;\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (view.getConstraints().rotation === disable) {\n            return;\n        }\n        // rotate anchor point.\n        // FIXME: should be the intersection point between the lines:\n        //     touch0,touch1 and previousTouch0,previousTouch1\n        var viewportPosition = map.getViewport().getBoundingClientRect();\n        var centroid = centroidFromPointers(this.targetPointers);\n        centroid[0] -= viewportPosition.left;\n        centroid[1] -= viewportPosition.top;\n        this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n        // rotate\n        if (this.rotating_) {\n            map.render();\n            view.adjustRotationInternal(rotationDelta, this.anchor_);\n        }\n    };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    PinchRotate.prototype.handleUpEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length < 2) {\n            var map = mapBrowserEvent.map;\n            var view = map.getView();\n            view.endInteraction(this.duration_);\n            return false;\n        }\n        else {\n            return true;\n        }\n    };\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    PinchRotate.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length >= 2) {\n            var map = mapBrowserEvent.map;\n            this.anchor_ = null;\n            this.lastAngle_ = undefined;\n            this.rotating_ = false;\n            this.rotationDelta_ = 0.0;\n            if (!this.handlingDownUpSequence) {\n                map.getView().beginInteraction();\n            }\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return PinchRotate;\n}(PointerInteraction));\nexport default PinchRotate;\n//# sourceMappingURL=PinchRotate.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, { centroid as centroidFromPointers, } from './Pointer.js';\nimport { FALSE } from '../functions.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nvar PinchZoom = /** @class */ (function (_super) {\n    __extends(PinchZoom, _super);\n    /**\n     * @param {Options} [opt_options] Options.\n     */\n    function PinchZoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n        if (!pointerOptions.stopDown) {\n            pointerOptions.stopDown = FALSE;\n        }\n        _this = _super.call(this, pointerOptions) || this;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        _this.anchor_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 400;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.lastDistance_ = undefined;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.lastScaleDelta_ = 1;\n        return _this;\n    }\n    /**\n     * Handle pointer drag events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     */\n    PinchZoom.prototype.handleDragEvent = function (mapBrowserEvent) {\n        var scaleDelta = 1.0;\n        var touch0 = this.targetPointers[0];\n        var touch1 = this.targetPointers[1];\n        var dx = touch0.clientX - touch1.clientX;\n        var dy = touch0.clientY - touch1.clientY;\n        // distance between touches\n        var distance = Math.sqrt(dx * dx + dy * dy);\n        if (this.lastDistance_ !== undefined) {\n            scaleDelta = this.lastDistance_ / distance;\n        }\n        this.lastDistance_ = distance;\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (scaleDelta != 1.0) {\n            this.lastScaleDelta_ = scaleDelta;\n        }\n        // scale anchor point.\n        var viewportPosition = map.getViewport().getBoundingClientRect();\n        var centroid = centroidFromPointers(this.targetPointers);\n        centroid[0] -= viewportPosition.left;\n        centroid[1] -= viewportPosition.top;\n        this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n        // scale, bypass the resolution constraint\n        map.render();\n        view.adjustResolutionInternal(scaleDelta, this.anchor_);\n    };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    PinchZoom.prototype.handleUpEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length < 2) {\n            var map = mapBrowserEvent.map;\n            var view = map.getView();\n            var direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n            view.endInteraction(this.duration_, direction);\n            return false;\n        }\n        else {\n            return true;\n        }\n    };\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    PinchZoom.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length >= 2) {\n            var map = mapBrowserEvent.map;\n            this.anchor_ = null;\n            this.lastDistance_ = undefined;\n            this.lastScaleDelta_ = 1;\n            if (!this.handlingDownUpSequence) {\n                map.getView().beginInteraction();\n            }\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return PinchZoom;\n}(PointerInteraction));\nexport default PinchZoom;\n//# sourceMappingURL=PinchZoom.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Map\n */\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport PluggableMap from './PluggableMap.js';\nimport { assign } from './obj.js';\nimport { defaults as defaultControls } from './control.js';\nimport { defaults as defaultInteractions } from './interaction.js';\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map';\n *     import View from 'ol/View';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *\n *     var map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~Group}\n * is a subclass of {@link module:ol/layer/Base}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @api\n */\nvar Map = /** @class */ (function (_super) {\n    __extends(Map, _super);\n    /**\n     * @param {import(\"./PluggableMap.js\").MapOptions} options Map options.\n     */\n    function Map(options) {\n        var _this = this;\n        options = assign({}, options);\n        if (!options.controls) {\n            options.controls = defaultControls();\n        }\n        if (!options.interactions) {\n            options.interactions = defaultInteractions({\n                onFocusOnly: true,\n            });\n        }\n        _this = _super.call(this, options) || this;\n        return _this;\n    }\n    Map.prototype.createRenderer = function () {\n        return new CompositeMapRenderer(this);\n    };\n    return Map;\n}(PluggableMap));\nexport default Map;\n//# sourceMappingURL=Map.js.map","/**\n * @module ol/control\n */\nimport Attribution from './control/Attribution.js';\nimport Collection from './Collection.js';\nimport Rotate from './control/Rotate.js';\nimport Zoom from './control/Zoom.js';\nexport { default as Attribution } from './control/Attribution.js';\nexport { default as Control } from './control/Control.js';\nexport { default as FullScreen } from './control/FullScreen.js';\nexport { default as MousePosition } from './control/MousePosition.js';\nexport { default as OverviewMap } from './control/OverviewMap.js';\nexport { default as Rotate } from './control/Rotate.js';\nexport { default as ScaleLine } from './control/ScaleLine.js';\nexport { default as Zoom } from './control/Zoom.js';\nexport { default as ZoomSlider } from './control/ZoomSlider.js';\nexport { default as ZoomToExtent } from './control/ZoomToExtent.js';\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./control/Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./control/Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./control/Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n * @api\n */\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [opt_options]\n * Defaults options.\n * @return {Collection<import(\"./control/Control.js\").default>}\n * Controls.\n * @api\n */\nexport function defaults(opt_options) {\n    var options = opt_options ? opt_options : {};\n    var controls = new Collection();\n    var zoomControl = options.zoom !== undefined ? options.zoom : true;\n    if (zoomControl) {\n        controls.push(new Zoom(options.zoomOptions));\n    }\n    var rotateControl = options.rotate !== undefined ? options.rotate : true;\n    if (rotateControl) {\n        controls.push(new Rotate(options.rotateOptions));\n    }\n    var attributionControl = options.attribution !== undefined ? options.attribution : true;\n    if (attributionControl) {\n        controls.push(new Attribution(options.attributionOptions));\n    }\n    return controls;\n}\n//# sourceMappingURL=control.js.map","/**\n * @module ol/interaction\n */\nimport Collection from './Collection.js';\nimport DoubleClickZoom from './interaction/DoubleClickZoom.js';\nimport DragPan from './interaction/DragPan.js';\nimport DragRotate from './interaction/DragRotate.js';\nimport DragZoom from './interaction/DragZoom.js';\nimport KeyboardPan from './interaction/KeyboardPan.js';\nimport KeyboardZoom from './interaction/KeyboardZoom.js';\nimport Kinetic from './Kinetic.js';\nimport MouseWheelZoom from './interaction/MouseWheelZoom.js';\nimport PinchRotate from './interaction/PinchRotate.js';\nimport PinchZoom from './interaction/PinchZoom.js';\nexport { default as DoubleClickZoom } from './interaction/DoubleClickZoom.js';\nexport { default as DragAndDrop } from './interaction/DragAndDrop.js';\nexport { default as DragBox } from './interaction/DragBox.js';\nexport { default as DragPan } from './interaction/DragPan.js';\nexport { default as DragRotate } from './interaction/DragRotate.js';\nexport { default as DragRotateAndZoom } from './interaction/DragRotateAndZoom.js';\nexport { default as DragZoom } from './interaction/DragZoom.js';\nexport { default as Draw } from './interaction/Draw.js';\nexport { default as Extent } from './interaction/Extent.js';\nexport { default as Interaction } from './interaction/Interaction.js';\nexport { default as KeyboardPan } from './interaction/KeyboardPan.js';\nexport { default as KeyboardZoom } from './interaction/KeyboardZoom.js';\nexport { default as Modify } from './interaction/Modify.js';\nexport { default as MouseWheelZoom } from './interaction/MouseWheelZoom.js';\nexport { default as PinchRotate } from './interaction/PinchRotate.js';\nexport { default as PinchZoom } from './interaction/PinchZoom.js';\nexport { default as Pointer } from './interaction/Pointer.js';\nexport { default as Select } from './interaction/Select.js';\nexport { default as Snap } from './interaction/Snap.js';\nexport { default as Translate } from './interaction/Translate.js';\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction} instances and insert\n * them into a {@link module:ol/Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [opt_options] Defaults options.\n * @return {import(\"./Collection.js\").default<import(\"./interaction/Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(opt_options) {\n    var options = opt_options ? opt_options : {};\n    var interactions = new Collection();\n    var kinetic = new Kinetic(-0.005, 0.05, 100);\n    var altShiftDragRotate = options.altShiftDragRotate !== undefined\n        ? options.altShiftDragRotate\n        : true;\n    if (altShiftDragRotate) {\n        interactions.push(new DragRotate());\n    }\n    var doubleClickZoom = options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n    if (doubleClickZoom) {\n        interactions.push(new DoubleClickZoom({\n            delta: options.zoomDelta,\n            duration: options.zoomDuration,\n        }));\n    }\n    var dragPan = options.dragPan !== undefined ? options.dragPan : true;\n    if (dragPan) {\n        interactions.push(new DragPan({\n            onFocusOnly: options.onFocusOnly,\n            kinetic: kinetic,\n        }));\n    }\n    var pinchRotate = options.pinchRotate !== undefined ? options.pinchRotate : true;\n    if (pinchRotate) {\n        interactions.push(new PinchRotate());\n    }\n    var pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n    if (pinchZoom) {\n        interactions.push(new PinchZoom({\n            duration: options.zoomDuration,\n        }));\n    }\n    var keyboard = options.keyboard !== undefined ? options.keyboard : true;\n    if (keyboard) {\n        interactions.push(new KeyboardPan());\n        interactions.push(new KeyboardZoom({\n            delta: options.zoomDelta,\n            duration: options.zoomDuration,\n        }));\n    }\n    var mouseWheelZoom = options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n    if (mouseWheelZoom) {\n        interactions.push(new MouseWheelZoom({\n            onFocusOnly: options.onFocusOnly,\n            duration: options.zoomDuration,\n        }));\n    }\n    var shiftDragZoom = options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n    if (shiftDragZoom) {\n        interactions.push(new DragZoom({\n            duration: options.zoomDuration,\n        }));\n    }\n    return interactions;\n}\n//# sourceMappingURL=interaction.js.map","/**\n * @module ol/structs/LRUCache\n */\nimport { assert } from '../asserts.js';\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Object} newer Newer.\n * @property {Object} older Older.\n * @property {*} value_ Value.\n */\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nvar LRUCache = /** @class */ (function () {\n    /**\n     * @param {number} [opt_highWaterMark] High water mark.\n     */\n    function LRUCache(opt_highWaterMark) {\n        /**\n         * Desired max cache size after expireCache(). If set to 0, no cache entries\n         * will be pruned at all.\n         * @type {number}\n         */\n        this.highWaterMark =\n            opt_highWaterMark !== undefined ? opt_highWaterMark : 2048;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.count_ = 0;\n        /**\n         * @private\n         * @type {!Object<string, Entry>}\n         */\n        this.entries_ = {};\n        /**\n         * @private\n         * @type {?Entry}\n         */\n        this.oldest_ = null;\n        /**\n         * @private\n         * @type {?Entry}\n         */\n        this.newest_ = null;\n    }\n    /**\n     * @return {boolean} Can expire cache.\n     */\n    LRUCache.prototype.canExpireCache = function () {\n        return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n    };\n    /**\n     * FIXME empty description for jsdoc\n     */\n    LRUCache.prototype.clear = function () {\n        this.count_ = 0;\n        this.entries_ = {};\n        this.oldest_ = null;\n        this.newest_ = null;\n    };\n    /**\n     * @param {string} key Key.\n     * @return {boolean} Contains key.\n     */\n    LRUCache.prototype.containsKey = function (key) {\n        return this.entries_.hasOwnProperty(key);\n    };\n    /**\n     * @param {function(T, string, LRUCache<T>): ?} f The function\n     *     to call for every entry from the oldest to the newer. This function takes\n     *     3 arguments (the entry value, the entry key and the LRUCache object).\n     *     The return value is ignored.\n     */\n    LRUCache.prototype.forEach = function (f) {\n        var entry = this.oldest_;\n        while (entry) {\n            f(entry.value_, entry.key_, this);\n            entry = entry.newer;\n        }\n    };\n    /**\n     * @param {string} key Key.\n     * @param {*} [opt_options] Options (reserved for subclasses).\n     * @return {T} Value.\n     */\n    LRUCache.prototype.get = function (key, opt_options) {\n        var entry = this.entries_[key];\n        assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n        if (entry === this.newest_) {\n            return entry.value_;\n        }\n        else if (entry === this.oldest_) {\n            this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n            this.oldest_.older = null;\n        }\n        else {\n            entry.newer.older = entry.older;\n            entry.older.newer = entry.newer;\n        }\n        entry.newer = null;\n        entry.older = this.newest_;\n        this.newest_.newer = entry;\n        this.newest_ = entry;\n        return entry.value_;\n    };\n    /**\n     * Remove an entry from the cache.\n     * @param {string} key The entry key.\n     * @return {T} The removed entry.\n     */\n    LRUCache.prototype.remove = function (key) {\n        var entry = this.entries_[key];\n        assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n        if (entry === this.newest_) {\n            this.newest_ = /** @type {Entry} */ (entry.older);\n            if (this.newest_) {\n                this.newest_.newer = null;\n            }\n        }\n        else if (entry === this.oldest_) {\n            this.oldest_ = /** @type {Entry} */ (entry.newer);\n            if (this.oldest_) {\n                this.oldest_.older = null;\n            }\n        }\n        else {\n            entry.newer.older = entry.older;\n            entry.older.newer = entry.newer;\n        }\n        delete this.entries_[key];\n        --this.count_;\n        return entry.value_;\n    };\n    /**\n     * @return {number} Count.\n     */\n    LRUCache.prototype.getCount = function () {\n        return this.count_;\n    };\n    /**\n     * @return {Array<string>} Keys.\n     */\n    LRUCache.prototype.getKeys = function () {\n        var keys = new Array(this.count_);\n        var i = 0;\n        var entry;\n        for (entry = this.newest_; entry; entry = entry.older) {\n            keys[i++] = entry.key_;\n        }\n        return keys;\n    };\n    /**\n     * @return {Array<T>} Values.\n     */\n    LRUCache.prototype.getValues = function () {\n        var values = new Array(this.count_);\n        var i = 0;\n        var entry;\n        for (entry = this.newest_; entry; entry = entry.older) {\n            values[i++] = entry.value_;\n        }\n        return values;\n    };\n    /**\n     * @return {T} Last value.\n     */\n    LRUCache.prototype.peekLast = function () {\n        return this.oldest_.value_;\n    };\n    /**\n     * @return {string} Last key.\n     */\n    LRUCache.prototype.peekLastKey = function () {\n        return this.oldest_.key_;\n    };\n    /**\n     * Get the key of the newest item in the cache.  Throws if the cache is empty.\n     * @return {string} The newest key.\n     */\n    LRUCache.prototype.peekFirstKey = function () {\n        return this.newest_.key_;\n    };\n    /**\n     * @return {T} value Value.\n     */\n    LRUCache.prototype.pop = function () {\n        var entry = this.oldest_;\n        delete this.entries_[entry.key_];\n        if (entry.newer) {\n            entry.newer.older = null;\n        }\n        this.oldest_ = /** @type {Entry} */ (entry.newer);\n        if (!this.oldest_) {\n            this.newest_ = null;\n        }\n        --this.count_;\n        return entry.value_;\n    };\n    /**\n     * @param {string} key Key.\n     * @param {T} value Value.\n     */\n    LRUCache.prototype.replace = function (key, value) {\n        this.get(key); // update `newest_`\n        this.entries_[key].value_ = value;\n    };\n    /**\n     * @param {string} key Key.\n     * @param {T} value Value.\n     */\n    LRUCache.prototype.set = function (key, value) {\n        assert(!(key in this.entries_), 16); // Tried to set a value for a key that is used already\n        var entry = {\n            key_: key,\n            newer: null,\n            older: this.newest_,\n            value_: value,\n        };\n        if (!this.newest_) {\n            this.oldest_ = entry;\n        }\n        else {\n            this.newest_.newer = entry;\n        }\n        this.newest_ = entry;\n        this.entries_[key] = entry;\n        ++this.count_;\n    };\n    /**\n     * Set a maximum number of entries for the cache.\n     * @param {number} size Cache size.\n     * @api\n     */\n    LRUCache.prototype.setSize = function (size) {\n        this.highWaterMark = size;\n    };\n    return LRUCache;\n}());\nexport default LRUCache;\n//# sourceMappingURL=LRUCache.js.map","/**\n * @module ol/tilecoord\n */\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [opt_tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, opt_tileCoord) {\n    if (opt_tileCoord !== undefined) {\n        opt_tileCoord[0] = z;\n        opt_tileCoord[1] = x;\n        opt_tileCoord[2] = y;\n        return opt_tileCoord;\n    }\n    else {\n        return [z, x, y];\n    }\n}\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n    return z + '/' + x + '/' + y;\n}\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n    return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n    var _a = tileKey\n        .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n        .split(',')\n        .map(Number), z = _a[0], x = _a[1], y = _a[2];\n    return getKeyZXY(z, x, y);\n}\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n    return key.split('/').map(Number);\n}\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n    return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n    var z = tileCoord[0];\n    var x = tileCoord[1];\n    var y = tileCoord[2];\n    if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n        return false;\n    }\n    var tileRange = tileGrid.getFullTileRange(z);\n    if (!tileRange) {\n        return true;\n    }\n    else {\n        return tileRange.containsXY(x, y);\n    }\n}\n//# sourceMappingURL=tilecoord.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport { fromKey, getKey } from './tilecoord.js';\nvar TileCache = /** @class */ (function (_super) {\n    __extends(TileCache, _super);\n    function TileCache() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {!Object<string, boolean>} usedTiles Used tiles.\n     */\n    TileCache.prototype.expireCache = function (usedTiles) {\n        while (this.canExpireCache()) {\n            var tile = this.peekLast();\n            if (tile.getKey() in usedTiles) {\n                break;\n            }\n            else {\n                this.pop().release();\n            }\n        }\n    };\n    /**\n     * Prune all tiles from the cache that don't have the same z as the newest tile.\n     */\n    TileCache.prototype.pruneExceptNewestZ = function () {\n        if (this.getCount() === 0) {\n            return;\n        }\n        var key = this.peekFirstKey();\n        var tileCoord = fromKey(key);\n        var z = tileCoord[0];\n        this.forEach(function (tile) {\n            if (tile.tileCoord[0] !== z) {\n                this.remove(getKey(tile.tileCoord));\n                tile.release();\n            }\n        }.bind(this));\n    };\n    return TileCache;\n}(LRUCache));\nexport default TileCache;\n//# sourceMappingURL=TileCache.js.map","/**\n * @module ol/TileRange\n */\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nvar TileRange = /** @class */ (function () {\n    /**\n     * @param {number} minX Minimum X.\n     * @param {number} maxX Maximum X.\n     * @param {number} minY Minimum Y.\n     * @param {number} maxY Maximum Y.\n     */\n    function TileRange(minX, maxX, minY, maxY) {\n        /**\n         * @type {number}\n         */\n        this.minX = minX;\n        /**\n         * @type {number}\n         */\n        this.maxX = maxX;\n        /**\n         * @type {number}\n         */\n        this.minY = minY;\n        /**\n         * @type {number}\n         */\n        this.maxY = maxY;\n    }\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @return {boolean} Contains tile coordinate.\n     */\n    TileRange.prototype.contains = function (tileCoord) {\n        return this.containsXY(tileCoord[1], tileCoord[2]);\n    };\n    /**\n     * @param {TileRange} tileRange Tile range.\n     * @return {boolean} Contains.\n     */\n    TileRange.prototype.containsTileRange = function (tileRange) {\n        return (this.minX <= tileRange.minX &&\n            tileRange.maxX <= this.maxX &&\n            this.minY <= tileRange.minY &&\n            tileRange.maxY <= this.maxY);\n    };\n    /**\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @return {boolean} Contains coordinate.\n     */\n    TileRange.prototype.containsXY = function (x, y) {\n        return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n    };\n    /**\n     * @param {TileRange} tileRange Tile range.\n     * @return {boolean} Equals.\n     */\n    TileRange.prototype.equals = function (tileRange) {\n        return (this.minX == tileRange.minX &&\n            this.minY == tileRange.minY &&\n            this.maxX == tileRange.maxX &&\n            this.maxY == tileRange.maxY);\n    };\n    /**\n     * @param {TileRange} tileRange Tile range.\n     */\n    TileRange.prototype.extend = function (tileRange) {\n        if (tileRange.minX < this.minX) {\n            this.minX = tileRange.minX;\n        }\n        if (tileRange.maxX > this.maxX) {\n            this.maxX = tileRange.maxX;\n        }\n        if (tileRange.minY < this.minY) {\n            this.minY = tileRange.minY;\n        }\n        if (tileRange.maxY > this.maxY) {\n            this.maxY = tileRange.maxY;\n        }\n    };\n    /**\n     * @return {number} Height.\n     */\n    TileRange.prototype.getHeight = function () {\n        return this.maxY - this.minY + 1;\n    };\n    /**\n     * @return {import(\"./size.js\").Size} Size.\n     */\n    TileRange.prototype.getSize = function () {\n        return [this.getWidth(), this.getHeight()];\n    };\n    /**\n     * @return {number} Width.\n     */\n    TileRange.prototype.getWidth = function () {\n        return this.maxX - this.minX + 1;\n    };\n    /**\n     * @param {TileRange} tileRange Tile range.\n     * @return {boolean} Intersects.\n     */\n    TileRange.prototype.intersects = function (tileRange) {\n        return (this.minX <= tileRange.maxX &&\n            this.maxX >= tileRange.minX &&\n            this.minY <= tileRange.maxY &&\n            this.maxY >= tileRange.minY);\n    };\n    return TileRange;\n}());\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n    if (tileRange !== undefined) {\n        tileRange.minX = minX;\n        tileRange.maxX = maxX;\n        tileRange.minY = minY;\n        tileRange.maxY = maxY;\n        return tileRange;\n    }\n    else {\n        return new TileRange(minX, maxX, minY, maxY);\n    }\n}\nexport default TileRange;\n//# sourceMappingURL=TileRange.js.map","/**\n * @module ol/layer/TileProperty\n */\n/**\n * @enum {string}\n */\nexport default {\n    PRELOAD: 'preload',\n    USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n//# sourceMappingURL=TileProperty.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\nimport { assign } from '../obj.js';\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:source'|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *   'change:source'|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} BaseTileLayerOnSignature\n */\n/**\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {TileSourceType} [source] Source for this layer.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../PluggableMap.js\").default#addLayer map.addLayer()}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @extends {Layer<TileSourceType>}\n * @api\n */\nvar BaseTileLayer = /** @class */ (function (_super) {\n    __extends(BaseTileLayer, _super);\n    /**\n     * @param {Options<TileSourceType>} [opt_options] Tile layer options.\n     */\n    function BaseTileLayer(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var baseOptions = assign({}, options);\n        delete baseOptions.preload;\n        delete baseOptions.useInterimTilesOnError;\n        _this = _super.call(this, baseOptions) || this;\n        /***\n         * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n         */\n        _this.on;\n        /***\n         * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n         */\n        _this.once;\n        /***\n         * @type {BaseTileLayerOnSignature<void>}\n         */\n        _this.un;\n        _this.setPreload(options.preload !== undefined ? options.preload : 0);\n        _this.setUseInterimTilesOnError(options.useInterimTilesOnError !== undefined\n            ? options.useInterimTilesOnError\n            : true);\n        return _this;\n    }\n    /**\n     * Return the level as number to which we will preload tiles up to.\n     * @return {number} The level to preload tiles up to.\n     * @observable\n     * @api\n     */\n    BaseTileLayer.prototype.getPreload = function () {\n        return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n    };\n    /**\n     * Set the level as number to which we will preload tiles up to.\n     * @param {number} preload The level to preload tiles up to.\n     * @observable\n     * @api\n     */\n    BaseTileLayer.prototype.setPreload = function (preload) {\n        this.set(TileProperty.PRELOAD, preload);\n    };\n    /**\n     * Whether we use interim tiles on error.\n     * @return {boolean} Use interim tiles on error.\n     * @observable\n     * @api\n     */\n    BaseTileLayer.prototype.getUseInterimTilesOnError = function () {\n        return /** @type {boolean} */ (this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR));\n    };\n    /**\n     * Set whether we use interim tiles on error.\n     * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n     * @observable\n     * @api\n     */\n    BaseTileLayer.prototype.setUseInterimTilesOnError = function (useInterimTilesOnError) {\n        this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n    };\n    return BaseTileLayer;\n}(Layer));\nexport default BaseTileLayer;\n//# sourceMappingURL=BaseTile.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport { apply as applyTransform, compose as composeTransform, makeInverse, } from '../../transform.js';\nimport { assign } from '../../obj.js';\nimport { createEmpty, equals, getIntersection, getTopLeft, } from '../../extent.js';\nimport { cssOpacity } from '../../css.js';\nimport { fromUserExtent } from '../../proj.js';\nimport { getUid } from '../../util.js';\nimport { numberSafeCompareFunction } from '../../array.js';\nimport { toString as toTransformString } from '../../transform.js';\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n */\nvar CanvasTileLayerRenderer = /** @class */ (function (_super) {\n    __extends(CanvasTileLayerRenderer, _super);\n    /**\n     * @param {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default} tileLayer Tile layer.\n     */\n    function CanvasTileLayerRenderer(tileLayer) {\n        var _this = _super.call(this, tileLayer) || this;\n        /**\n         * Rendered extent has changed since the previous `renderFrame()` call\n         * @type {boolean}\n         */\n        _this.extentChanged = true;\n        /**\n         * @private\n         * @type {?import(\"../../extent.js\").Extent}\n         */\n        _this.renderedExtent_ = null;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.renderedPixelRatio;\n        /**\n         * @protected\n         * @type {import(\"../../proj/Projection.js\").default}\n         */\n        _this.renderedProjection = null;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.renderedRevision;\n        /**\n         * @protected\n         * @type {!Array<import(\"../../Tile.js\").default>}\n         */\n        _this.renderedTiles = [];\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.newTiles_ = false;\n        /**\n         * @protected\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.tmpExtent = createEmpty();\n        /**\n         * @private\n         * @type {import(\"../../TileRange.js\").default}\n         */\n        _this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n        return _this;\n    }\n    /**\n     * @protected\n     * @param {import(\"../../Tile.js\").default} tile Tile.\n     * @return {boolean} Tile is drawable.\n     */\n    CanvasTileLayerRenderer.prototype.isDrawableTile = function (tile) {\n        var tileLayer = this.getLayer();\n        var tileState = tile.getState();\n        var useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n        return (tileState == TileState.LOADED ||\n            tileState == TileState.EMPTY ||\n            (tileState == TileState.ERROR && !useInterimTilesOnError));\n    };\n    /**\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {!import(\"../../Tile.js\").default} Tile.\n     */\n    CanvasTileLayerRenderer.prototype.getTile = function (z, x, y, frameState) {\n        var pixelRatio = frameState.pixelRatio;\n        var projection = frameState.viewState.projection;\n        var tileLayer = this.getLayer();\n        var tileSource = tileLayer.getSource();\n        var tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n        if (tile.getState() == TileState.ERROR) {\n            if (!tileLayer.getUseInterimTilesOnError()) {\n                // When useInterimTilesOnError is false, we consider the error tile as loaded.\n                tile.setState(TileState.LOADED);\n            }\n            else if (tileLayer.getPreload() > 0) {\n                // Preloaded tiles for lower resolutions might have finished loading.\n                this.newTiles_ = true;\n            }\n        }\n        if (!this.isDrawableTile(tile)) {\n            tile = tile.getInterimTile();\n        }\n        return tile;\n    };\n    /**\n     * @param {Object<number, Object<string, import(\"../../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n     * @param {number} zoom Zoom level.\n     * @param {import(\"../../Tile.js\").default} tile Tile.\n     * @return {boolean|void} If `false`, the tile will not be considered loaded.\n     */\n    CanvasTileLayerRenderer.prototype.loadedTileCallback = function (tiles, zoom, tile) {\n        if (this.isDrawableTile(tile)) {\n            return _super.prototype.loadedTileCallback.call(this, tiles, zoom, tile);\n        }\n        return false;\n    };\n    /**\n     * Determine whether render should be called.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {boolean} Layer is ready to be rendered.\n     */\n    CanvasTileLayerRenderer.prototype.prepareFrame = function (frameState) {\n        return !!this.getLayer().getSource();\n    };\n    /**\n     * Render the layer.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {HTMLElement} target Target that may be used to render content to.\n     * @return {HTMLElement} The rendered element.\n     */\n    CanvasTileLayerRenderer.prototype.renderFrame = function (frameState, target) {\n        var layerState = frameState.layerStatesArray[frameState.layerIndex];\n        var viewState = frameState.viewState;\n        var projection = viewState.projection;\n        var viewResolution = viewState.resolution;\n        var viewCenter = viewState.center;\n        var rotation = viewState.rotation;\n        var pixelRatio = frameState.pixelRatio;\n        var tileLayer = this.getLayer();\n        var tileSource = tileLayer.getSource();\n        var sourceRevision = tileSource.getRevision();\n        var tileGrid = tileSource.getTileGridForProjection(projection);\n        var z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n        var tileResolution = tileGrid.getResolution(z);\n        var extent = frameState.extent;\n        var layerExtent = layerState.extent && fromUserExtent(layerState.extent, projection);\n        if (layerExtent) {\n            extent = getIntersection(extent, fromUserExtent(layerState.extent, projection));\n        }\n        var tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n        // desired dimensions of the canvas in pixels\n        var width = Math.round(frameState.size[0] * tilePixelRatio);\n        var height = Math.round(frameState.size[1] * tilePixelRatio);\n        if (rotation) {\n            var size = Math.round(Math.sqrt(width * width + height * height));\n            width = size;\n            height = size;\n        }\n        var dx = (tileResolution * width) / 2 / tilePixelRatio;\n        var dy = (tileResolution * height) / 2 / tilePixelRatio;\n        var canvasExtent = [\n            viewCenter[0] - dx,\n            viewCenter[1] - dy,\n            viewCenter[0] + dx,\n            viewCenter[1] + dy,\n        ];\n        var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n        /**\n         * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n         */\n        var tilesToDrawByZ = {};\n        tilesToDrawByZ[z] = {};\n        var findLoadedTiles = this.createLoadedTileFinder(tileSource, projection, tilesToDrawByZ);\n        var tmpExtent = this.tmpExtent;\n        var tmpTileRange = this.tmpTileRange_;\n        this.newTiles_ = false;\n        for (var x = tileRange.minX; x <= tileRange.maxX; ++x) {\n            for (var y = tileRange.minY; y <= tileRange.maxY; ++y) {\n                var tile = this.getTile(z, x, y, frameState);\n                if (this.isDrawableTile(tile)) {\n                    var uid = getUid(this);\n                    if (tile.getState() == TileState.LOADED) {\n                        tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n                        var inTransition = tile.inTransition(uid);\n                        if (!this.newTiles_ &&\n                            (inTransition || this.renderedTiles.indexOf(tile) === -1)) {\n                            this.newTiles_ = true;\n                        }\n                    }\n                    if (tile.getAlpha(uid, frameState.time) === 1) {\n                        // don't look for alt tiles if alpha is 1\n                        continue;\n                    }\n                }\n                var childTileRange = tileGrid.getTileCoordChildTileRange(tile.tileCoord, tmpTileRange, tmpExtent);\n                var covered = false;\n                if (childTileRange) {\n                    covered = findLoadedTiles(z + 1, childTileRange);\n                }\n                if (!covered) {\n                    tileGrid.forEachTileCoordParentTileRange(tile.tileCoord, findLoadedTiles, tmpTileRange, tmpExtent);\n                }\n            }\n        }\n        var canvasScale = tileResolution / viewResolution;\n        // set forward and inverse pixel transforms\n        composeTransform(this.pixelTransform, frameState.size[0] / 2, frameState.size[1] / 2, 1 / tilePixelRatio, 1 / tilePixelRatio, rotation, -width / 2, -height / 2);\n        var canvasTransform = toTransformString(this.pixelTransform);\n        this.useContainer(target, canvasTransform, layerState.opacity);\n        var context = this.context;\n        var canvas = context.canvas;\n        makeInverse(this.inversePixelTransform, this.pixelTransform);\n        // set scale transform for calculating tile positions on the canvas\n        composeTransform(this.tempTransform, width / 2, height / 2, canvasScale, canvasScale, 0, -width / 2, -height / 2);\n        if (canvas.width != width || canvas.height != height) {\n            canvas.width = width;\n            canvas.height = height;\n        }\n        else if (!this.containerReused) {\n            context.clearRect(0, 0, width, height);\n        }\n        if (layerExtent) {\n            this.clipUnrotated(context, frameState, layerExtent);\n        }\n        assign(context, tileSource.getContextOptions());\n        this.preRender(context, frameState);\n        this.renderedTiles.length = 0;\n        /** @type {Array<number>} */\n        var zs = Object.keys(tilesToDrawByZ).map(Number);\n        zs.sort(numberSafeCompareFunction);\n        var clips, clipZs, currentClip;\n        if (layerState.opacity === 1 &&\n            (!this.containerReused ||\n                tileSource.getOpaque(frameState.viewState.projection))) {\n            zs = zs.reverse();\n        }\n        else {\n            clips = [];\n            clipZs = [];\n        }\n        for (var i = zs.length - 1; i >= 0; --i) {\n            var currentZ = zs[i];\n            var currentTilePixelSize = tileSource.getTilePixelSize(currentZ, pixelRatio, projection);\n            var currentResolution = tileGrid.getResolution(currentZ);\n            var currentScale = currentResolution / tileResolution;\n            var dx_1 = currentTilePixelSize[0] * currentScale * canvasScale;\n            var dy_1 = currentTilePixelSize[1] * currentScale * canvasScale;\n            var originTileCoord = tileGrid.getTileCoordForCoordAndZ(getTopLeft(canvasExtent), currentZ);\n            var originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n            var origin_1 = applyTransform(this.tempTransform, [\n                (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n                    tileResolution,\n                (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n                    tileResolution,\n            ]);\n            var tileGutter = tilePixelRatio * tileSource.getGutterForProjection(projection);\n            var tilesToDraw = tilesToDrawByZ[currentZ];\n            for (var tileCoordKey in tilesToDraw) {\n                var tile = /** @type {import(\"../../ImageTile.js\").default} */ (tilesToDraw[tileCoordKey]);\n                var tileCoord = tile.tileCoord;\n                // Calculate integer positions and sizes so that tiles align\n                var xIndex = originTileCoord[1] - tileCoord[1];\n                var nextX = Math.round(origin_1[0] - (xIndex - 1) * dx_1);\n                var yIndex = originTileCoord[2] - tileCoord[2];\n                var nextY = Math.round(origin_1[1] - (yIndex - 1) * dy_1);\n                var x = Math.round(origin_1[0] - xIndex * dx_1);\n                var y = Math.round(origin_1[1] - yIndex * dy_1);\n                var w = nextX - x;\n                var h = nextY - y;\n                var transition = z === currentZ;\n                var inTransition = transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n                if (!inTransition) {\n                    if (clips) {\n                        // Clip mask for regions in this tile that already filled by a higher z tile\n                        context.save();\n                        currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n                        for (var i_1 = 0, ii = clips.length; i_1 < ii; ++i_1) {\n                            if (z !== currentZ && currentZ < clipZs[i_1]) {\n                                var clip = clips[i_1];\n                                context.beginPath();\n                                // counter-clockwise (outer ring) for current tile\n                                context.moveTo(currentClip[0], currentClip[1]);\n                                context.lineTo(currentClip[2], currentClip[3]);\n                                context.lineTo(currentClip[4], currentClip[5]);\n                                context.lineTo(currentClip[6], currentClip[7]);\n                                // clockwise (inner ring) for higher z tile\n                                context.moveTo(clip[6], clip[7]);\n                                context.lineTo(clip[4], clip[5]);\n                                context.lineTo(clip[2], clip[3]);\n                                context.lineTo(clip[0], clip[1]);\n                                context.clip();\n                            }\n                        }\n                        clips.push(currentClip);\n                        clipZs.push(currentZ);\n                    }\n                    else {\n                        context.clearRect(x, y, w, h);\n                    }\n                }\n                this.drawTileImage(tile, frameState, x, y, w, h, tileGutter, transition);\n                if (clips && !inTransition) {\n                    context.restore();\n                    this.renderedTiles.unshift(tile);\n                }\n                else {\n                    this.renderedTiles.push(tile);\n                }\n                this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n            }\n        }\n        this.renderedRevision = sourceRevision;\n        this.renderedResolution = tileResolution;\n        this.extentChanged =\n            !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n        this.renderedExtent_ = canvasExtent;\n        this.renderedPixelRatio = pixelRatio;\n        this.renderedProjection = projection;\n        this.manageTilePyramid(frameState, tileSource, tileGrid, pixelRatio, projection, extent, z, tileLayer.getPreload());\n        this.scheduleExpireCache(frameState, tileSource);\n        this.postRender(context, frameState);\n        if (layerState.extent) {\n            context.restore();\n        }\n        if (canvasTransform !== canvas.style.transform) {\n            canvas.style.transform = canvasTransform;\n        }\n        var opacity = cssOpacity(layerState.opacity);\n        var container = this.container;\n        if (opacity !== container.style.opacity) {\n            container.style.opacity = opacity;\n        }\n        return this.container;\n    };\n    /**\n     * @param {import(\"../../ImageTile.js\").default} tile Tile.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {number} x Left of the tile.\n     * @param {number} y Top of the tile.\n     * @param {number} w Width of the tile.\n     * @param {number} h Height of the tile.\n     * @param {number} gutter Tile gutter.\n     * @param {boolean} transition Apply an alpha transition.\n     */\n    CanvasTileLayerRenderer.prototype.drawTileImage = function (tile, frameState, x, y, w, h, gutter, transition) {\n        var image = this.getTileImage(tile);\n        if (!image) {\n            return;\n        }\n        var uid = getUid(this);\n        var alpha = transition ? tile.getAlpha(uid, frameState.time) : 1;\n        var alphaChanged = alpha !== this.context.globalAlpha;\n        if (alphaChanged) {\n            this.context.save();\n            this.context.globalAlpha = alpha;\n        }\n        this.context.drawImage(image, gutter, gutter, image.width - 2 * gutter, image.height - 2 * gutter, x, y, w, h);\n        if (alphaChanged) {\n            this.context.restore();\n        }\n        if (alpha !== 1) {\n            frameState.animate = true;\n        }\n        else if (transition) {\n            tile.endTransition(uid);\n        }\n    };\n    /**\n     * @return {HTMLCanvasElement} Image\n     */\n    CanvasTileLayerRenderer.prototype.getImage = function () {\n        var context = this.context;\n        return context ? context.canvas : null;\n    };\n    /**\n     * Get the image from a tile.\n     * @param {import(\"../../ImageTile.js\").default} tile Tile.\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n     * @protected\n     */\n    CanvasTileLayerRenderer.prototype.getTileImage = function (tile) {\n        return tile.getImage();\n    };\n    /**\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n     * @protected\n     */\n    CanvasTileLayerRenderer.prototype.scheduleExpireCache = function (frameState, tileSource) {\n        if (tileSource.canExpireCache()) {\n            /**\n             * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n             * @param {import(\"../../PluggableMap.js\").default} map Map.\n             * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n             */\n            var postRenderFunction = function (tileSource, map, frameState) {\n                var tileSourceKey = getUid(tileSource);\n                if (tileSourceKey in frameState.usedTiles) {\n                    tileSource.expireCache(frameState.viewState.projection, frameState.usedTiles[tileSourceKey]);\n                }\n            }.bind(null, tileSource);\n            frameState.postRenderFunctions.push(\n            /** @type {import(\"../../PluggableMap.js\").PostRenderFunction} */ (postRenderFunction));\n        }\n    };\n    /**\n     * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n     * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n     * @param {import('../../Tile.js').default} tile Tile.\n     * @protected\n     */\n    CanvasTileLayerRenderer.prototype.updateUsedTiles = function (usedTiles, tileSource, tile) {\n        // FIXME should we use tilesToDrawByZ instead?\n        var tileSourceKey = getUid(tileSource);\n        if (!(tileSourceKey in usedTiles)) {\n            usedTiles[tileSourceKey] = {};\n        }\n        usedTiles[tileSourceKey][tile.getKey()] = true;\n    };\n    /**\n     * Manage tile pyramid.\n     * This function performs a number of functions related to the tiles at the\n     * current zoom and lower zoom levels:\n     * - registers idle tiles in frameState.wantedTiles so that they are not\n     *   discarded by the tile queue\n     * - enqueues missing tiles\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n     * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n     * @param {import(\"../../extent.js\").Extent} extent Extent.\n     * @param {number} currentZ Current Z.\n     * @param {number} preload Load low resolution tiles up to 'preload' levels.\n     * @param {function(import(\"../../Tile.js\").default):void} [opt_tileCallback] Tile callback.\n     * @protected\n     */\n    CanvasTileLayerRenderer.prototype.manageTilePyramid = function (frameState, tileSource, tileGrid, pixelRatio, projection, extent, currentZ, preload, opt_tileCallback) {\n        var tileSourceKey = getUid(tileSource);\n        if (!(tileSourceKey in frameState.wantedTiles)) {\n            frameState.wantedTiles[tileSourceKey] = {};\n        }\n        var wantedTiles = frameState.wantedTiles[tileSourceKey];\n        var tileQueue = frameState.tileQueue;\n        var minZoom = tileGrid.getMinZoom();\n        var tileCount = 0;\n        var tile, tileRange, tileResolution, x, y, z;\n        for (z = minZoom; z <= currentZ; ++z) {\n            tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n            tileResolution = tileGrid.getResolution(z);\n            for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n                for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n                    if (currentZ - z <= preload) {\n                        ++tileCount;\n                        tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n                        if (tile.getState() == TileState.IDLE) {\n                            wantedTiles[tile.getKey()] = true;\n                            if (!tileQueue.isKeyQueued(tile.getKey())) {\n                                tileQueue.enqueue([\n                                    tile,\n                                    tileSourceKey,\n                                    tileGrid.getTileCoordCenter(tile.tileCoord),\n                                    tileResolution,\n                                ]);\n                            }\n                        }\n                        if (opt_tileCallback !== undefined) {\n                            opt_tileCallback(tile);\n                        }\n                    }\n                    else {\n                        tileSource.useTile(z, x, y, projection);\n                    }\n                }\n            }\n        }\n        tileSource.updateCacheSize(tileCount, projection);\n    };\n    return CanvasTileLayerRenderer;\n}(CanvasLayerRenderer));\n/**\n * @function\n * @return {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default}\n */\nCanvasTileLayerRenderer.prototype.getLayer;\nexport default CanvasTileLayerRenderer;\n//# sourceMappingURL=TileLayer.js.map","/**\n * @module ol/reproj\n */\nimport { IMAGE_SMOOTHING_DISABLED } from './source/common.js';\nimport { assign } from './obj.js';\nimport { containsCoordinate, createEmpty, extend, forEachCorner, getCenter, getHeight, getTopLeft, getWidth, } from './extent.js';\nimport { createCanvasContext2D } from './dom.js';\nimport { getPointResolution, transform } from './proj.js';\nimport { solveLinearSystem } from './math.js';\nvar brokenDiagonalRendering_;\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n    ctx.beginPath();\n    ctx.moveTo(0, 0);\n    ctx.lineTo(u1, v1);\n    ctx.lineTo(u2, v2);\n    ctx.closePath();\n    ctx.save();\n    ctx.clip();\n    ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n    ctx.restore();\n}\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n    // the values ought to be close to the rgba(210, 0, 0, 0.75)\n    return (Math.abs(data[offset * 4] - 210) > 2 ||\n        Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2);\n}\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * IE also doesn't. Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n    if (brokenDiagonalRendering_ === undefined) {\n        var ctx = document.createElement('canvas').getContext('2d');\n        ctx.globalCompositeOperation = 'lighter';\n        ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n        drawTestTriangle(ctx, 4, 5, 4, 0);\n        drawTestTriangle(ctx, 4, 5, 0, 5);\n        var data = ctx.getImageData(0, 0, 3, 3).data;\n        brokenDiagonalRendering_ =\n            verifyBrokenDiagonalRendering(data, 0) ||\n                verifyBrokenDiagonalRendering(data, 4) ||\n                verifyBrokenDiagonalRendering(data, 8);\n    }\n    return brokenDiagonalRendering_;\n}\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(sourceProj, targetProj, targetCenter, targetResolution) {\n    var sourceCenter = transform(targetCenter, targetProj, sourceProj);\n    // calculate the ideal resolution of the source data\n    var sourceResolution = getPointResolution(targetProj, targetResolution, targetCenter);\n    var targetMetersPerUnit = targetProj.getMetersPerUnit();\n    if (targetMetersPerUnit !== undefined) {\n        sourceResolution *= targetMetersPerUnit;\n    }\n    var sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n    if (sourceMetersPerUnit !== undefined) {\n        sourceResolution /= sourceMetersPerUnit;\n    }\n    // Based on the projection properties, the point resolution at the specified\n    // coordinates may be slightly different. We need to reverse-compensate this\n    // in order to achieve optimal results.\n    var sourceExtent = sourceProj.getExtent();\n    if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n        var compensationFactor = getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n            sourceResolution;\n        if (isFinite(compensationFactor) && compensationFactor > 0) {\n            sourceResolution /= compensationFactor;\n        }\n    }\n    return sourceResolution;\n}\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(sourceProj, targetProj, targetExtent, targetResolution) {\n    var targetCenter = getCenter(targetExtent);\n    var sourceResolution = calculateSourceResolution(sourceProj, targetProj, targetCenter, targetResolution);\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n        forEachCorner(targetExtent, function (corner) {\n            sourceResolution = calculateSourceResolution(sourceProj, targetProj, corner, targetResolution);\n            return isFinite(sourceResolution) && sourceResolution > 0;\n        });\n    }\n    return sourceResolution;\n}\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n */\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [opt_renderEdges] Render reprojection edges.\n * @param {object} [opt_contextOptions] Properties to set on the canvas context.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(width, height, pixelRatio, sourceResolution, sourceExtent, targetResolution, targetExtent, triangulation, sources, gutter, opt_renderEdges, opt_contextOptions) {\n    var context = createCanvasContext2D(Math.round(pixelRatio * width), Math.round(pixelRatio * height));\n    assign(context, opt_contextOptions);\n    if (sources.length === 0) {\n        return context.canvas;\n    }\n    context.scale(pixelRatio, pixelRatio);\n    function pixelRound(value) {\n        return Math.round(value * pixelRatio) / pixelRatio;\n    }\n    context.globalCompositeOperation = 'lighter';\n    var sourceDataExtent = createEmpty();\n    sources.forEach(function (src, i, arr) {\n        extend(sourceDataExtent, src.extent);\n    });\n    var canvasWidthInUnits = getWidth(sourceDataExtent);\n    var canvasHeightInUnits = getHeight(sourceDataExtent);\n    var stitchContext = createCanvasContext2D(Math.round((pixelRatio * canvasWidthInUnits) / sourceResolution), Math.round((pixelRatio * canvasHeightInUnits) / sourceResolution));\n    assign(stitchContext, opt_contextOptions);\n    var stitchScale = pixelRatio / sourceResolution;\n    sources.forEach(function (src, i, arr) {\n        var xPos = src.extent[0] - sourceDataExtent[0];\n        var yPos = -(src.extent[3] - sourceDataExtent[3]);\n        var srcWidth = getWidth(src.extent);\n        var srcHeight = getHeight(src.extent);\n        // This test should never fail -- but it does. Need to find a fix the upstream condition\n        if (src.image.width > 0 && src.image.height > 0) {\n            stitchContext.drawImage(src.image, gutter, gutter, src.image.width - 2 * gutter, src.image.height - 2 * gutter, xPos * stitchScale, yPos * stitchScale, srcWidth * stitchScale, srcHeight * stitchScale);\n        }\n    });\n    var targetTopLeft = getTopLeft(targetExtent);\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n        /* Calculate affine transform (src -> dst)\n         * Resulting matrix can be used to transform coordinate\n         * from `sourceProjection` to destination pixels.\n         *\n         * To optimize number of context calls and increase numerical stability,\n         * we also do the following operations:\n         * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n         * here before solving the linear system so [ui, vi] are pixel coordinates.\n         *\n         * Src points: xi, yi\n         * Dst points: ui, vi\n         * Affine coefficients: aij\n         *\n         * | x0 y0 1  0  0 0 |   |a00|   |u0|\n         * | x1 y1 1  0  0 0 |   |a01|   |u1|\n         * | x2 y2 1  0  0 0 | x |a02| = |u2|\n         * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n         * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n         * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n         */\n        var source = triangle.source;\n        var target = triangle.target;\n        var x0 = source[0][0], y0 = source[0][1];\n        var x1 = source[1][0], y1 = source[1][1];\n        var x2 = source[2][0], y2 = source[2][1];\n        // Make sure that everything is on pixel boundaries\n        var u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n        var v0 = pixelRound(-(target[0][1] - targetTopLeft[1]) / targetResolution);\n        var u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n        var v1 = pixelRound(-(target[1][1] - targetTopLeft[1]) / targetResolution);\n        var u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n        var v2 = pixelRound(-(target[2][1] - targetTopLeft[1]) / targetResolution);\n        // Shift all the source points to improve numerical stability\n        // of all the subsequent calculations. The [x0, y0] is used here.\n        // This is also used to simplify the linear system.\n        var sourceNumericalShiftX = x0;\n        var sourceNumericalShiftY = y0;\n        x0 = 0;\n        y0 = 0;\n        x1 -= sourceNumericalShiftX;\n        y1 -= sourceNumericalShiftY;\n        x2 -= sourceNumericalShiftX;\n        y2 -= sourceNumericalShiftY;\n        var augmentedMatrix = [\n            [x1, y1, 0, 0, u1 - u0],\n            [x2, y2, 0, 0, u2 - u0],\n            [0, 0, x1, y1, v1 - v0],\n            [0, 0, x2, y2, v2 - v0],\n        ];\n        var affineCoefs = solveLinearSystem(augmentedMatrix);\n        if (!affineCoefs) {\n            return;\n        }\n        context.save();\n        context.beginPath();\n        if (isBrokenDiagonalRendering() ||\n            opt_contextOptions === IMAGE_SMOOTHING_DISABLED) {\n            // Make sure that all lines are horizontal or vertical\n            context.moveTo(u1, v1);\n            // This is the diagonal line. Do it in 4 steps\n            var steps = 4;\n            var ud = u0 - u1;\n            var vd = v0 - v1;\n            for (var step = 0; step < steps; step++) {\n                // Go horizontally\n                context.lineTo(u1 + pixelRound(((step + 1) * ud) / steps), v1 + pixelRound((step * vd) / (steps - 1)));\n                // Go vertically\n                if (step != steps - 1) {\n                    context.lineTo(u1 + pixelRound(((step + 1) * ud) / steps), v1 + pixelRound(((step + 1) * vd) / (steps - 1)));\n                }\n            }\n            // We are almost at u0r, v0r\n            context.lineTo(u2, v2);\n        }\n        else {\n            context.moveTo(u1, v1);\n            context.lineTo(u0, v0);\n            context.lineTo(u2, v2);\n        }\n        context.clip();\n        context.transform(affineCoefs[0], affineCoefs[2], affineCoefs[1], affineCoefs[3], u0, v0);\n        context.translate(sourceDataExtent[0] - sourceNumericalShiftX, sourceDataExtent[3] - sourceNumericalShiftY);\n        context.scale(sourceResolution / pixelRatio, -sourceResolution / pixelRatio);\n        context.drawImage(stitchContext.canvas, 0, 0);\n        context.restore();\n    });\n    if (opt_renderEdges) {\n        context.save();\n        context.globalCompositeOperation = 'source-over';\n        context.strokeStyle = 'black';\n        context.lineWidth = 1;\n        triangulation.getTriangles().forEach(function (triangle, i, arr) {\n            var target = triangle.target;\n            var u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n            var v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n            var u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n            var v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n            var u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n            var v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n            context.beginPath();\n            context.moveTo(u1, v1);\n            context.lineTo(u0, v0);\n            context.lineTo(u2, v2);\n            context.closePath();\n            context.stroke();\n        });\n        context.restore();\n    }\n    return context.canvas;\n}\n//# sourceMappingURL=reproj.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @extends {BaseTileLayer<TileSourceType>}\n * @api\n */\nvar TileLayer = /** @class */ (function (_super) {\n    __extends(TileLayer, _super);\n    /**\n     * @param {import(\"./BaseTile.js\").Options<TileSourceType>} [opt_options] Tile layer options.\n     */\n    function TileLayer(opt_options) {\n        return _super.call(this, opt_options) || this;\n    }\n    /**\n     * Create a renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n     * @protected\n     */\n    TileLayer.prototype.createRenderer = function () {\n        return new CanvasTileLayerRenderer(this);\n    };\n    return TileLayer;\n}(BaseTileLayer));\nexport default TileLayer;\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/reproj/Triangulation\n */\nimport { boundingExtent, createEmpty, extendCoordinate, getArea, getBottomLeft, getBottomRight, getTopLeft, getTopRight, getWidth, intersects, } from '../extent.js';\nimport { getTransform } from '../proj.js';\nimport { log2, modulo } from '../math.js';\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nvar MAX_SUBDIVISION = 10;\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nvar MAX_TRIANGLE_WIDTH = 0.25;\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nvar Triangulation = /** @class */ (function () {\n    /**\n     * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n     * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n     * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n     * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n     * @param {number} errorThreshold Acceptable error (in source units).\n     * @param {?number} opt_destinationResolution The (optional) resolution of the destination.\n     */\n    function Triangulation(sourceProj, targetProj, targetExtent, maxSourceExtent, errorThreshold, opt_destinationResolution) {\n        /**\n         * @type {import(\"../proj/Projection.js\").default}\n         * @private\n         */\n        this.sourceProj_ = sourceProj;\n        /**\n         * @type {import(\"../proj/Projection.js\").default}\n         * @private\n         */\n        this.targetProj_ = targetProj;\n        /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n        var transformInvCache = {};\n        var transformInv = getTransform(this.targetProj_, this.sourceProj_);\n        /**\n         * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n         * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n         * @private\n         */\n        this.transformInv_ = function (c) {\n            var key = c[0] + '/' + c[1];\n            if (!transformInvCache[key]) {\n                transformInvCache[key] = transformInv(c);\n            }\n            return transformInvCache[key];\n        };\n        /**\n         * @type {import(\"../extent.js\").Extent}\n         * @private\n         */\n        this.maxSourceExtent_ = maxSourceExtent;\n        /**\n         * @type {number}\n         * @private\n         */\n        this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n        /**\n         * @type {Array<Triangle>}\n         * @private\n         */\n        this.triangles_ = [];\n        /**\n         * Indicates that the triangulation crosses edge of the source projection.\n         * @type {boolean}\n         * @private\n         */\n        this.wrapsXInSource_ = false;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this.canWrapXInSource_ =\n            this.sourceProj_.canWrapX() &&\n                !!maxSourceExtent &&\n                !!this.sourceProj_.getExtent() &&\n                getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent());\n        /**\n         * @type {?number}\n         * @private\n         */\n        this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n            ? getWidth(this.sourceProj_.getExtent())\n            : null;\n        /**\n         * @type {?number}\n         * @private\n         */\n        this.targetWorldWidth_ = this.targetProj_.getExtent()\n            ? getWidth(this.targetProj_.getExtent())\n            : null;\n        var destinationTopLeft = getTopLeft(targetExtent);\n        var destinationTopRight = getTopRight(targetExtent);\n        var destinationBottomRight = getBottomRight(targetExtent);\n        var destinationBottomLeft = getBottomLeft(targetExtent);\n        var sourceTopLeft = this.transformInv_(destinationTopLeft);\n        var sourceTopRight = this.transformInv_(destinationTopRight);\n        var sourceBottomRight = this.transformInv_(destinationBottomRight);\n        var sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n        /*\n         * The maxSubdivision controls how many splittings of the target area can\n         * be done. The idea here is to do a linear mapping of the target areas\n         * but the actual overal reprojection (can be) extremely non-linear. The\n         * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n         * tile size. However this function is also called to remap canvas rendered\n         * layers which can be much larger. This calculation increases the maxSubdivision\n         * value by the right factor so that each 256x256 pixel area has\n         * MAX_SUBDIVISION divisions.\n         */\n        var maxSubdivision = MAX_SUBDIVISION +\n            (opt_destinationResolution\n                ? Math.max(0, Math.ceil(log2(getArea(targetExtent) /\n                    (opt_destinationResolution *\n                        opt_destinationResolution *\n                        256 *\n                        256))))\n                : 0);\n        this.addQuad_(destinationTopLeft, destinationTopRight, destinationBottomRight, destinationBottomLeft, sourceTopLeft, sourceTopRight, sourceBottomRight, sourceBottomLeft, maxSubdivision);\n        if (this.wrapsXInSource_) {\n            var leftBound_1 = Infinity;\n            this.triangles_.forEach(function (triangle, i, arr) {\n                leftBound_1 = Math.min(leftBound_1, triangle.source[0][0], triangle.source[1][0], triangle.source[2][0]);\n            });\n            // Shift triangles to be as close to `leftBound` as possible\n            // (if the distance is more than `worldWidth / 2` it can be closer.\n            this.triangles_.forEach(function (triangle) {\n                if (Math.max(triangle.source[0][0], triangle.source[1][0], triangle.source[2][0]) -\n                    leftBound_1 >\n                    this.sourceWorldWidth_ / 2) {\n                    var newTriangle = [\n                        [triangle.source[0][0], triangle.source[0][1]],\n                        [triangle.source[1][0], triangle.source[1][1]],\n                        [triangle.source[2][0], triangle.source[2][1]],\n                    ];\n                    if (newTriangle[0][0] - leftBound_1 > this.sourceWorldWidth_ / 2) {\n                        newTriangle[0][0] -= this.sourceWorldWidth_;\n                    }\n                    if (newTriangle[1][0] - leftBound_1 > this.sourceWorldWidth_ / 2) {\n                        newTriangle[1][0] -= this.sourceWorldWidth_;\n                    }\n                    if (newTriangle[2][0] - leftBound_1 > this.sourceWorldWidth_ / 2) {\n                        newTriangle[2][0] -= this.sourceWorldWidth_;\n                    }\n                    // Rarely (if the extent contains both the dateline and prime meridian)\n                    // the shift can in turn break some triangles.\n                    // Detect this here and don't shift in such cases.\n                    var minX = Math.min(newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n                    var maxX = Math.max(newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n                    if (maxX - minX < this.sourceWorldWidth_ / 2) {\n                        triangle.source = newTriangle;\n                    }\n                }\n            }.bind(this));\n        }\n        transformInvCache = {};\n    }\n    /**\n     * Adds triangle to the triangulation.\n     * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n     * @private\n     */\n    Triangulation.prototype.addTriangle_ = function (a, b, c, aSrc, bSrc, cSrc) {\n        this.triangles_.push({\n            source: [aSrc, bSrc, cSrc],\n            target: [a, b, c],\n        });\n    };\n    /**\n     * Adds quad (points in clock-wise order) to the triangulation\n     * (and reprojects the vertices) if valid.\n     * Performs quad subdivision if needed to increase precision.\n     *\n     * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n     * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n     * @private\n     */\n    Triangulation.prototype.addQuad_ = function (a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n        var sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n        var sourceCoverageX = this.sourceWorldWidth_\n            ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n            : null;\n        var sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n        // when the quad is wrapped in the source projection\n        // it covers most of the projection extent, but not fully\n        var wrapsX = this.sourceProj_.canWrapX() &&\n            sourceCoverageX > 0.5 &&\n            sourceCoverageX < 1;\n        var needsSubdivision = false;\n        if (maxSubdivision > 0) {\n            if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n                var targetQuadExtent = boundingExtent([a, b, c, d]);\n                var targetCoverageX = getWidth(targetQuadExtent) / this.targetWorldWidth_;\n                needsSubdivision =\n                    targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n            }\n            if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n                needsSubdivision =\n                    sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n            }\n        }\n        if (!needsSubdivision && this.maxSourceExtent_) {\n            if (isFinite(sourceQuadExtent[0]) &&\n                isFinite(sourceQuadExtent[1]) &&\n                isFinite(sourceQuadExtent[2]) &&\n                isFinite(sourceQuadExtent[3])) {\n                if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n                    // whole quad outside source projection extent -> ignore\n                    return;\n                }\n            }\n        }\n        var isNotFinite = 0;\n        if (!needsSubdivision) {\n            if (!isFinite(aSrc[0]) ||\n                !isFinite(aSrc[1]) ||\n                !isFinite(bSrc[0]) ||\n                !isFinite(bSrc[1]) ||\n                !isFinite(cSrc[0]) ||\n                !isFinite(cSrc[1]) ||\n                !isFinite(dSrc[0]) ||\n                !isFinite(dSrc[1])) {\n                if (maxSubdivision > 0) {\n                    needsSubdivision = true;\n                }\n                else {\n                    // It might be the case that only 1 of the points is infinite. In this case\n                    // we can draw a single triangle with the other three points\n                    isNotFinite =\n                        (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n                            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n                            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n                            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n                    if (isNotFinite != 1 &&\n                        isNotFinite != 2 &&\n                        isNotFinite != 4 &&\n                        isNotFinite != 8) {\n                        return;\n                    }\n                }\n            }\n        }\n        if (maxSubdivision > 0) {\n            if (!needsSubdivision) {\n                var center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n                var centerSrc = this.transformInv_(center);\n                var dx = void 0;\n                if (wrapsX) {\n                    var centerSrcEstimX = (modulo(aSrc[0], sourceWorldWidth) +\n                        modulo(cSrc[0], sourceWorldWidth)) /\n                        2;\n                    dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n                }\n                else {\n                    dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n                }\n                var dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n                var centerSrcErrorSquared = dx * dx + dy * dy;\n                needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n            }\n            if (needsSubdivision) {\n                if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n                    // split horizontally (top & bottom)\n                    var bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n                    var bcSrc = this.transformInv_(bc);\n                    var da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n                    var daSrc = this.transformInv_(da);\n                    this.addQuad_(a, b, bc, da, aSrc, bSrc, bcSrc, daSrc, maxSubdivision - 1);\n                    this.addQuad_(da, bc, c, d, daSrc, bcSrc, cSrc, dSrc, maxSubdivision - 1);\n                }\n                else {\n                    // split vertically (left & right)\n                    var ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n                    var abSrc = this.transformInv_(ab);\n                    var cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n                    var cdSrc = this.transformInv_(cd);\n                    this.addQuad_(a, ab, cd, d, aSrc, abSrc, cdSrc, dSrc, maxSubdivision - 1);\n                    this.addQuad_(ab, b, c, cd, abSrc, bSrc, cSrc, cdSrc, maxSubdivision - 1);\n                }\n                return;\n            }\n        }\n        if (wrapsX) {\n            if (!this.canWrapXInSource_) {\n                return;\n            }\n            this.wrapsXInSource_ = true;\n        }\n        // Exactly zero or one of *Src is not finite\n        // The triangles must have the diagonal line as the first side\n        // This is to allow easy code in reproj.s to make it straight for broken\n        // browsers that can't handle diagonal clipping\n        if ((isNotFinite & 0xb) == 0) {\n            this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n        }\n        if ((isNotFinite & 0xe) == 0) {\n            this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n        }\n        if (isNotFinite) {\n            // Try the other two triangles\n            if ((isNotFinite & 0xd) == 0) {\n                this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n            }\n            if ((isNotFinite & 0x7) == 0) {\n                this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n            }\n        }\n    };\n    /**\n     * Calculates extent of the 'source' coordinates from all the triangles.\n     *\n     * @return {import(\"../extent.js\").Extent} Calculated extent.\n     */\n    Triangulation.prototype.calculateSourceExtent = function () {\n        var extent = createEmpty();\n        this.triangles_.forEach(function (triangle, i, arr) {\n            var src = triangle.source;\n            extendCoordinate(extent, src[0]);\n            extendCoordinate(extent, src[1]);\n            extendCoordinate(extent, src[2]);\n        });\n        return extent;\n    };\n    /**\n     * @return {Array<Triangle>} Array of the calculated triangles.\n     */\n    Triangulation.prototype.getTriangles = function () {\n        return this.triangles_;\n    };\n    return Triangulation;\n}());\nexport default Triangulation;\n//# sourceMappingURL=Triangulation.js.map","/**\n * @module ol/source/common\n */\n/**\n * Default WMS version.\n * @type {string}\n */\nexport var DEFAULT_WMS_VERSION = '1.3.0';\n/**\n * Context options to disable image smoothing.\n * @type {Object}\n */\nexport var IMAGE_SMOOTHING_DISABLED = {\n    imageSmoothingEnabled: false,\n    msImageSmoothingEnabled: false,\n};\n//# sourceMappingURL=common.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/reproj/Tile\n */\nimport { ERROR_THRESHOLD } from './common.js';\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport { calculateSourceExtentResolution, render as renderReprojected, } from '../reproj.js';\nimport { clamp } from '../math.js';\nimport { getArea, getIntersection } from '../extent.js';\nimport { listen, unlistenByKey } from '../events.js';\n/**\n * @typedef {function(number, number, number, number) : import(\"../Tile.js\").default} FunctionType\n */\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nvar ReprojTile = /** @class */ (function (_super) {\n    __extends(ReprojTile, _super);\n    /**\n     * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n     * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n     * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n     * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n     * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {number} gutter Gutter of the source tiles.\n     * @param {FunctionType} getTileFunction\n     *     Function returning source tiles (z, x, y, pixelRatio).\n     * @param {number} [opt_errorThreshold] Acceptable reprojection error (in px).\n     * @param {boolean} [opt_renderEdges] Render reprojection edges.\n     * @param {object} [opt_contextOptions] Properties to set on the canvas context.\n     */\n    function ReprojTile(sourceProj, sourceTileGrid, targetProj, targetTileGrid, tileCoord, wrappedTileCoord, pixelRatio, gutter, getTileFunction, opt_errorThreshold, opt_renderEdges, opt_contextOptions) {\n        var _this = _super.call(this, tileCoord, TileState.IDLE) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderEdges_ = opt_renderEdges !== undefined ? opt_renderEdges : false;\n        /**\n         * @private\n         * @type {object}\n         */\n        _this.contextOptions_ = opt_contextOptions;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ = pixelRatio;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.gutter_ = gutter;\n        /**\n         * @private\n         * @type {HTMLCanvasElement}\n         */\n        _this.canvas_ = null;\n        /**\n         * @private\n         * @type {import(\"../tilegrid/TileGrid.js\").default}\n         */\n        _this.sourceTileGrid_ = sourceTileGrid;\n        /**\n         * @private\n         * @type {import(\"../tilegrid/TileGrid.js\").default}\n         */\n        _this.targetTileGrid_ = targetTileGrid;\n        /**\n         * @private\n         * @type {import(\"../tilecoord.js\").TileCoord}\n         */\n        _this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n        /**\n         * @private\n         * @type {!Array<import(\"../Tile.js\").default>}\n         */\n        _this.sourceTiles_ = [];\n        /**\n         * @private\n         * @type {?Array<import(\"../events.js\").EventsKey>}\n         */\n        _this.sourcesListenerKeys_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.sourceZ_ = 0;\n        var targetExtent = targetTileGrid.getTileCoordExtent(_this.wrappedTileCoord_);\n        var maxTargetExtent = _this.targetTileGrid_.getExtent();\n        var maxSourceExtent = _this.sourceTileGrid_.getExtent();\n        var limitedTargetExtent = maxTargetExtent\n            ? getIntersection(targetExtent, maxTargetExtent)\n            : targetExtent;\n        if (getArea(limitedTargetExtent) === 0) {\n            // Tile is completely outside range -> EMPTY\n            // TODO: is it actually correct that the source even creates the tile ?\n            _this.state = TileState.EMPTY;\n            return _this;\n        }\n        var sourceProjExtent = sourceProj.getExtent();\n        if (sourceProjExtent) {\n            if (!maxSourceExtent) {\n                maxSourceExtent = sourceProjExtent;\n            }\n            else {\n                maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n            }\n        }\n        var targetResolution = targetTileGrid.getResolution(_this.wrappedTileCoord_[0]);\n        var sourceResolution = calculateSourceExtentResolution(sourceProj, targetProj, limitedTargetExtent, targetResolution);\n        if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n            // invalid sourceResolution -> EMPTY\n            // probably edges of the projections when no extent is defined\n            _this.state = TileState.EMPTY;\n            return _this;\n        }\n        var errorThresholdInPixels = opt_errorThreshold !== undefined ? opt_errorThreshold : ERROR_THRESHOLD;\n        /**\n         * @private\n         * @type {!import(\"./Triangulation.js\").default}\n         */\n        _this.triangulation_ = new Triangulation(sourceProj, targetProj, limitedTargetExtent, maxSourceExtent, sourceResolution * errorThresholdInPixels, targetResolution);\n        if (_this.triangulation_.getTriangles().length === 0) {\n            // no valid triangles -> EMPTY\n            _this.state = TileState.EMPTY;\n            return _this;\n        }\n        _this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n        var sourceExtent = _this.triangulation_.calculateSourceExtent();\n        if (maxSourceExtent) {\n            if (sourceProj.canWrapX()) {\n                sourceExtent[1] = clamp(sourceExtent[1], maxSourceExtent[1], maxSourceExtent[3]);\n                sourceExtent[3] = clamp(sourceExtent[3], maxSourceExtent[1], maxSourceExtent[3]);\n            }\n            else {\n                sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n            }\n        }\n        if (!getArea(sourceExtent)) {\n            _this.state = TileState.EMPTY;\n        }\n        else {\n            var sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(sourceExtent, _this.sourceZ_);\n            for (var srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n                for (var srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n                    var tile = getTileFunction(_this.sourceZ_, srcX, srcY, pixelRatio);\n                    if (tile) {\n                        _this.sourceTiles_.push(tile);\n                    }\n                }\n            }\n            if (_this.sourceTiles_.length === 0) {\n                _this.state = TileState.EMPTY;\n            }\n        }\n        return _this;\n    }\n    /**\n     * Get the HTML Canvas element for this tile.\n     * @return {HTMLCanvasElement} Canvas.\n     */\n    ReprojTile.prototype.getImage = function () {\n        return this.canvas_;\n    };\n    /**\n     * @private\n     */\n    ReprojTile.prototype.reproject_ = function () {\n        var sources = [];\n        this.sourceTiles_.forEach(function (tile, i, arr) {\n            if (tile && tile.getState() == TileState.LOADED) {\n                sources.push({\n                    extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n                    image: tile.getImage(),\n                });\n            }\n        }.bind(this));\n        this.sourceTiles_.length = 0;\n        if (sources.length === 0) {\n            this.state = TileState.ERROR;\n        }\n        else {\n            var z = this.wrappedTileCoord_[0];\n            var size = this.targetTileGrid_.getTileSize(z);\n            var width = typeof size === 'number' ? size : size[0];\n            var height = typeof size === 'number' ? size : size[1];\n            var targetResolution = this.targetTileGrid_.getResolution(z);\n            var sourceResolution = this.sourceTileGrid_.getResolution(this.sourceZ_);\n            var targetExtent = this.targetTileGrid_.getTileCoordExtent(this.wrappedTileCoord_);\n            this.canvas_ = renderReprojected(width, height, this.pixelRatio_, sourceResolution, this.sourceTileGrid_.getExtent(), targetResolution, targetExtent, this.triangulation_, sources, this.gutter_, this.renderEdges_, this.contextOptions_);\n            this.state = TileState.LOADED;\n        }\n        this.changed();\n    };\n    /**\n     * Load not yet loaded URI.\n     */\n    ReprojTile.prototype.load = function () {\n        if (this.state == TileState.IDLE) {\n            this.state = TileState.LOADING;\n            this.changed();\n            var leftToLoad_1 = 0;\n            this.sourcesListenerKeys_ = [];\n            this.sourceTiles_.forEach(function (tile, i, arr) {\n                var state = tile.getState();\n                if (state == TileState.IDLE || state == TileState.LOADING) {\n                    leftToLoad_1++;\n                    var sourceListenKey_1 = listen(tile, EventType.CHANGE, function (e) {\n                        var state = tile.getState();\n                        if (state == TileState.LOADED ||\n                            state == TileState.ERROR ||\n                            state == TileState.EMPTY) {\n                            unlistenByKey(sourceListenKey_1);\n                            leftToLoad_1--;\n                            if (leftToLoad_1 === 0) {\n                                this.unlistenSources_();\n                                this.reproject_();\n                            }\n                        }\n                    }, this);\n                    this.sourcesListenerKeys_.push(sourceListenKey_1);\n                }\n            }.bind(this));\n            if (leftToLoad_1 === 0) {\n                setTimeout(this.reproject_.bind(this), 0);\n            }\n            else {\n                this.sourceTiles_.forEach(function (tile, i, arr) {\n                    var state = tile.getState();\n                    if (state == TileState.IDLE) {\n                        tile.load();\n                    }\n                });\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    ReprojTile.prototype.unlistenSources_ = function () {\n        this.sourcesListenerKeys_.forEach(unlistenByKey);\n        this.sourcesListenerKeys_ = null;\n    };\n    return ReprojTile;\n}(Tile));\nexport default ReprojTile;\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/reproj/common\n */\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport var ERROR_THRESHOLD = 0.5;\n/**\n * Enable automatic reprojection of raster sources. Default is `true`.\n * TODO: decide if we want to expose this as a build flag or remove it\n * @type {boolean}\n */\nexport var ENABLE_RASTER_REPROJECTION = true;\n//# sourceMappingURL=common.js.map","/**\n * @module ol/source/TileEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when a tile starts loading.\n     * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n     * @api\n     */\n    TILELOADSTART: 'tileloadstart',\n    /**\n     * Triggered when a tile finishes loading, either when its data is loaded,\n     * or when loading was aborted because the tile is no longer needed.\n     * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n     * @api\n     */\n    TILELOADEND: 'tileloadend',\n    /**\n     * Triggered if tile loading results in an error.\n     * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n     * @api\n     */\n    TILELOADERROR: 'tileloaderror',\n};\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n//# sourceMappingURL=TileEventType.js.map","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, { createOrUpdate as createOrUpdateTileRange, } from '../TileRange.js';\nimport { DEFAULT_TILE_SIZE } from './common.js';\nimport { assert } from '../asserts.js';\nimport { clamp } from '../math.js';\nimport { createOrUpdate, getTopLeft } from '../extent.js';\nimport { createOrUpdate as createOrUpdateTileCoord } from '../tilecoord.js';\nimport { isSorted, linearFindNearest } from '../array.js';\nimport { toSize } from '../size.js';\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nvar tmpTileCoord = [0, 0, 0];\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nvar TileGrid = /** @class */ (function () {\n    /**\n     * @param {Options} options Tile grid options.\n     */\n    function TileGrid(options) {\n        /**\n         * @protected\n         * @type {number}\n         */\n        this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n        /**\n         * @private\n         * @type {!Array<number>}\n         */\n        this.resolutions_ = options.resolutions;\n        assert(isSorted(this.resolutions_, function (a, b) {\n            return b - a;\n        }, true), 17); // `resolutions` must be sorted in descending order\n        // check if we've got a consistent zoom factor and origin\n        var zoomFactor;\n        if (!options.origins) {\n            for (var i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n                if (!zoomFactor) {\n                    zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n                }\n                else {\n                    if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n                        zoomFactor = undefined;\n                        break;\n                    }\n                }\n            }\n        }\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.zoomFactor_ = zoomFactor;\n        /**\n         * @protected\n         * @type {number}\n         */\n        this.maxZoom = this.resolutions_.length - 1;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        this.origin_ = options.origin !== undefined ? options.origin : null;\n        /**\n         * @private\n         * @type {Array<import(\"../coordinate.js\").Coordinate>}\n         */\n        this.origins_ = null;\n        if (options.origins !== undefined) {\n            this.origins_ = options.origins;\n            assert(this.origins_.length == this.resolutions_.length, 20); // Number of `origins` and `resolutions` must be equal\n        }\n        var extent = options.extent;\n        if (extent !== undefined && !this.origin_ && !this.origins_) {\n            this.origin_ = getTopLeft(extent);\n        }\n        assert((!this.origin_ && this.origins_) || (this.origin_ && !this.origins_), 18); // Either `origin` or `origins` must be configured, never both\n        /**\n         * @private\n         * @type {Array<number|import(\"../size.js\").Size>}\n         */\n        this.tileSizes_ = null;\n        if (options.tileSizes !== undefined) {\n            this.tileSizes_ = options.tileSizes;\n            assert(this.tileSizes_.length == this.resolutions_.length, 19); // Number of `tileSizes` and `resolutions` must be equal\n        }\n        /**\n         * @private\n         * @type {number|import(\"../size.js\").Size}\n         */\n        this.tileSize_ =\n            options.tileSize !== undefined\n                ? options.tileSize\n                : !this.tileSizes_\n                    ? DEFAULT_TILE_SIZE\n                    : null;\n        assert((!this.tileSize_ && this.tileSizes_) ||\n            (this.tileSize_ && !this.tileSizes_), 22); // Either `tileSize` or `tileSizes` must be configured, never both\n        /**\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        this.extent_ = extent !== undefined ? extent : null;\n        /**\n         * @private\n         * @type {Array<import(\"../TileRange.js\").default>}\n         */\n        this.fullTileRanges_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        this.tmpSize_ = [0, 0];\n        /**\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        this.tmpExtent_ = [0, 0, 0, 0];\n        if (options.sizes !== undefined) {\n            this.fullTileRanges_ = options.sizes.map(function (size, z) {\n                var tileRange = new TileRange(Math.min(0, size[0]), Math.max(size[0] - 1, -1), Math.min(0, size[1]), Math.max(size[1] - 1, -1));\n                if (extent) {\n                    var restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n                    tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n                    tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n                    tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n                    tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n                }\n                return tileRange;\n            }, this);\n        }\n        else if (extent) {\n            this.calculateTileRanges_(extent);\n        }\n    }\n    /**\n     * Call a function with each tile coordinate for a given extent and zoom level.\n     *\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} zoom Integer zoom level.\n     * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n     * @api\n     */\n    TileGrid.prototype.forEachTileCoord = function (extent, zoom, callback) {\n        var tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n        for (var i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n            for (var j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n                callback([zoom, i, j]);\n            }\n        }\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n     * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary import(\"../TileRange.js\").default object.\n     * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary import(\"../extent.js\").Extent object.\n     * @return {boolean} Callback succeeded.\n     */\n    TileGrid.prototype.forEachTileCoordParentTileRange = function (tileCoord, callback, opt_tileRange, opt_extent) {\n        var tileRange, x, y;\n        var tileCoordExtent = null;\n        var z = tileCoord[0] - 1;\n        if (this.zoomFactor_ === 2) {\n            x = tileCoord[1];\n            y = tileCoord[2];\n        }\n        else {\n            tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n        }\n        while (z >= this.minZoom) {\n            if (this.zoomFactor_ === 2) {\n                x = Math.floor(x / 2);\n                y = Math.floor(y / 2);\n                tileRange = createOrUpdateTileRange(x, x, y, y, opt_tileRange);\n            }\n            else {\n                tileRange = this.getTileRangeForExtentAndZ(tileCoordExtent, z, opt_tileRange);\n            }\n            if (callback(z, tileRange)) {\n                return true;\n            }\n            --z;\n        }\n        return false;\n    };\n    /**\n     * Get the extent for this tile grid, if it was configured.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    TileGrid.prototype.getExtent = function () {\n        return this.extent_;\n    };\n    /**\n     * Get the maximum zoom level for the grid.\n     * @return {number} Max zoom.\n     * @api\n     */\n    TileGrid.prototype.getMaxZoom = function () {\n        return this.maxZoom;\n    };\n    /**\n     * Get the minimum zoom level for the grid.\n     * @return {number} Min zoom.\n     * @api\n     */\n    TileGrid.prototype.getMinZoom = function () {\n        return this.minZoom;\n    };\n    /**\n     * Get the origin for the grid at the given zoom level.\n     * @param {number} z Integer zoom level.\n     * @return {import(\"../coordinate.js\").Coordinate} Origin.\n     * @api\n     */\n    TileGrid.prototype.getOrigin = function (z) {\n        if (this.origin_) {\n            return this.origin_;\n        }\n        else {\n            return this.origins_[z];\n        }\n    };\n    /**\n     * Get the resolution for the given zoom level.\n     * @param {number} z Integer zoom level.\n     * @return {number} Resolution.\n     * @api\n     */\n    TileGrid.prototype.getResolution = function (z) {\n        return this.resolutions_[z];\n    };\n    /**\n     * Get the list of resolutions for the tile grid.\n     * @return {Array<number>} Resolutions.\n     * @api\n     */\n    TileGrid.prototype.getResolutions = function () {\n        return this.resolutions_;\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary import(\"../TileRange.js\").default object.\n     * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary import(\"../extent.js\").Extent object.\n     * @return {import(\"../TileRange.js\").default} Tile range.\n     */\n    TileGrid.prototype.getTileCoordChildTileRange = function (tileCoord, opt_tileRange, opt_extent) {\n        if (tileCoord[0] < this.maxZoom) {\n            if (this.zoomFactor_ === 2) {\n                var minX = tileCoord[1] * 2;\n                var minY = tileCoord[2] * 2;\n                return createOrUpdateTileRange(minX, minX + 1, minY, minY + 1, opt_tileRange);\n            }\n            var tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent || this.tmpExtent_);\n            return this.getTileRangeForExtentAndZ(tileCoordExtent, tileCoord[0] + 1, opt_tileRange);\n        }\n        return null;\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {number} z Integer zoom level.\n     * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary import(\"../TileRange.js\").default object.\n     * @return {import(\"../TileRange.js\").default} Tile range.\n     */\n    TileGrid.prototype.getTileRangeForTileCoordAndZ = function (tileCoord, z, opt_tileRange) {\n        if (z > this.maxZoom || z < this.minZoom) {\n            return null;\n        }\n        var tileCoordZ = tileCoord[0];\n        var tileCoordX = tileCoord[1];\n        var tileCoordY = tileCoord[2];\n        if (z === tileCoordZ) {\n            return createOrUpdateTileRange(tileCoordX, tileCoordY, tileCoordX, tileCoordY, opt_tileRange);\n        }\n        if (this.zoomFactor_) {\n            var factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n            var minX = Math.floor(tileCoordX * factor);\n            var minY = Math.floor(tileCoordY * factor);\n            if (z < tileCoordZ) {\n                return createOrUpdateTileRange(minX, minX, minY, minY, opt_tileRange);\n            }\n            var maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n            var maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n            return createOrUpdateTileRange(minX, maxX, minY, maxY, opt_tileRange);\n        }\n        var tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n        return this.getTileRangeForExtentAndZ(tileCoordExtent, z, opt_tileRange);\n    };\n    /**\n     * Get the extent for a tile range.\n     * @param {number} z Integer zoom level.\n     * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n     * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary import(\"../extent.js\").Extent object.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     */\n    TileGrid.prototype.getTileRangeExtent = function (z, tileRange, opt_extent) {\n        var origin = this.getOrigin(z);\n        var resolution = this.getResolution(z);\n        var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n        var minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n        var maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n        var minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n        var maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n        return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n    };\n    /**\n     * Get a tile range for the given extent and integer zoom level.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} z Integer zoom level.\n     * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary tile range object.\n     * @return {import(\"../TileRange.js\").default} Tile range.\n     */\n    TileGrid.prototype.getTileRangeForExtentAndZ = function (extent, z, opt_tileRange) {\n        var tileCoord = tmpTileCoord;\n        this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tileCoord);\n        var minX = tileCoord[1];\n        var minY = tileCoord[2];\n        this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tileCoord);\n        return createOrUpdateTileRange(minX, tileCoord[1], minY, tileCoord[2], opt_tileRange);\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n     */\n    TileGrid.prototype.getTileCoordCenter = function (tileCoord) {\n        var origin = this.getOrigin(tileCoord[0]);\n        var resolution = this.getResolution(tileCoord[0]);\n        var tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n        return [\n            origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n            origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n        ];\n    };\n    /**\n     * Get the extent of a tile coordinate.\n     *\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary extent object.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    TileGrid.prototype.getTileCoordExtent = function (tileCoord, opt_extent) {\n        var origin = this.getOrigin(tileCoord[0]);\n        var resolution = this.getResolution(tileCoord[0]);\n        var tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n        var minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n        var minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n        var maxX = minX + tileSize[0] * resolution;\n        var maxY = minY + tileSize[1] * resolution;\n        return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n    };\n    /**\n     * Get the tile coordinate for the given map coordinate and resolution.  This\n     * method considers that coordinates that intersect tile boundaries should be\n     * assigned the higher tile coordinate.\n     *\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {number} resolution Resolution.\n     * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n     * @api\n     */\n    TileGrid.prototype.getTileCoordForCoordAndResolution = function (coordinate, resolution, opt_tileCoord) {\n        return this.getTileCoordForXYAndResolution_(coordinate[0], coordinate[1], resolution, false, opt_tileCoord);\n    };\n    /**\n     * Note that this method should not be called for resolutions that correspond\n     * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {number} resolution Resolution (for a non-integer zoom level).\n     * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n     *     intersections go to the higher tile coordinate, let edge intersections\n     *     go to the lower tile coordinate.\n     * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n     * @private\n     */\n    TileGrid.prototype.getTileCoordForXYAndResolution_ = function (x, y, resolution, reverseIntersectionPolicy, opt_tileCoord) {\n        var z = this.getZForResolution(resolution);\n        var scale = resolution / this.getResolution(z);\n        var origin = this.getOrigin(z);\n        var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n        var adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n        var adjustY = reverseIntersectionPolicy ? 0.5 : 0;\n        var xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n        var yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);\n        var tileCoordX = (scale * xFromOrigin) / tileSize[0];\n        var tileCoordY = (scale * yFromOrigin) / tileSize[1];\n        if (reverseIntersectionPolicy) {\n            tileCoordX = Math.ceil(tileCoordX) - 1;\n            tileCoordY = Math.ceil(tileCoordY) - 1;\n        }\n        else {\n            tileCoordX = Math.floor(tileCoordX);\n            tileCoordY = Math.floor(tileCoordY);\n        }\n        return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n    };\n    /**\n     * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n     * they should have separate implementations.  This method is for integer zoom\n     * levels.  The other method should only be called for resolutions corresponding\n     * to non-integer zoom levels.\n     * @param {number} x Map x coordinate.\n     * @param {number} y Map y coordinate.\n     * @param {number} z Integer zoom level.\n     * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n     *     intersections go to the higher tile coordinate, let edge intersections\n     *     go to the lower tile coordinate.\n     * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n     * @private\n     */\n    TileGrid.prototype.getTileCoordForXYAndZ_ = function (x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n        var origin = this.getOrigin(z);\n        var resolution = this.getResolution(z);\n        var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n        var adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n        var adjustY = reverseIntersectionPolicy ? 0.5 : 0;\n        var xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n        var yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);\n        var tileCoordX = xFromOrigin / tileSize[0];\n        var tileCoordY = yFromOrigin / tileSize[1];\n        if (reverseIntersectionPolicy) {\n            tileCoordX = Math.ceil(tileCoordX) - 1;\n            tileCoordY = Math.ceil(tileCoordY) - 1;\n        }\n        else {\n            tileCoordX = Math.floor(tileCoordX);\n            tileCoordY = Math.floor(tileCoordY);\n        }\n        return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n    };\n    /**\n     * Get a tile coordinate given a map coordinate and zoom level.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {number} z Zoom level.\n     * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n     * @api\n     */\n    TileGrid.prototype.getTileCoordForCoordAndZ = function (coordinate, z, opt_tileCoord) {\n        return this.getTileCoordForXYAndZ_(coordinate[0], coordinate[1], z, false, opt_tileCoord);\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @return {number} Tile resolution.\n     */\n    TileGrid.prototype.getTileCoordResolution = function (tileCoord) {\n        return this.resolutions_[tileCoord[0]];\n    };\n    /**\n     * Get the tile size for a zoom level. The type of the return value matches the\n     * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n     * get an `import(\"../size.js\").Size`, run the result through `import(\"../size.js\").Size.toSize()`.\n     * @param {number} z Z.\n     * @return {number|import(\"../size.js\").Size} Tile size.\n     * @api\n     */\n    TileGrid.prototype.getTileSize = function (z) {\n        if (this.tileSize_) {\n            return this.tileSize_;\n        }\n        else {\n            return this.tileSizes_[z];\n        }\n    };\n    /**\n     * @param {number} z Zoom level.\n     * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n     */\n    TileGrid.prototype.getFullTileRange = function (z) {\n        if (!this.fullTileRanges_) {\n            return this.extent_\n                ? this.getTileRangeForExtentAndZ(this.extent_, z)\n                : null;\n        }\n        else {\n            return this.fullTileRanges_[z];\n        }\n    };\n    /**\n     * @param {number} resolution Resolution.\n     * @param {number|import(\"../array.js\").NearestDirectionFunction} [opt_direction]\n     *     If 0, the nearest resolution will be used.\n     *     If 1, the nearest higher resolution (lower Z) will be used. If -1, the\n     *     nearest lower resolution (higher Z) will be used. Default is 0.\n     *     Use a {@link module:ol/array~NearestDirectionFunction} for more precise control.\n     *\n     * For example to change tile Z at the midpoint of zoom levels\n     * ```js\n     * function(value, high, low) {\n     *   return value - low * Math.sqrt(high / low);\n     * }\n     * ```\n     * @return {number} Z.\n     * @api\n     */\n    TileGrid.prototype.getZForResolution = function (resolution, opt_direction) {\n        var z = linearFindNearest(this.resolutions_, resolution, opt_direction || 0);\n        return clamp(z, this.minZoom, this.maxZoom);\n    };\n    /**\n     * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n     * @private\n     */\n    TileGrid.prototype.calculateTileRanges_ = function (extent) {\n        var length = this.resolutions_.length;\n        var fullTileRanges = new Array(length);\n        for (var z = this.minZoom; z < length; ++z) {\n            fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n        }\n        this.fullTileRanges_ = fullTileRanges;\n    };\n    return TileGrid;\n}());\nexport default TileGrid;\n//# sourceMappingURL=TileGrid.js.map","/**\n * @module ol/tilegrid\n */\nimport Corner from './extent/Corner.js';\nimport TileGrid from './tilegrid/TileGrid.js';\nimport Units from './proj/Units.js';\nimport { DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE } from './tilegrid/common.js';\nimport { METERS_PER_UNIT, get as getProjection } from './proj.js';\nimport { containsCoordinate, createOrUpdate, getCorner, getHeight, getWidth, } from './extent.js';\nimport { toSize } from './size.js';\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n    var tileGrid = projection.getDefaultTileGrid();\n    if (!tileGrid) {\n        tileGrid = createForProjection(projection);\n        projection.setDefaultTileGrid(tileGrid);\n    }\n    return tileGrid;\n}\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n    var z = tileCoord[0];\n    var center = tileGrid.getTileCoordCenter(tileCoord);\n    var projectionExtent = extentFromProjection(projection);\n    if (!containsCoordinate(projectionExtent, center)) {\n        var worldWidth = getWidth(projectionExtent);\n        var worldsAway = Math.ceil((projectionExtent[0] - center[0]) / worldWidth);\n        center[0] += worldWidth * worldsAway;\n        return tileGrid.getTileCoordForCoordAndZ(center, z);\n    }\n    else {\n        return tileCoord;\n    }\n}\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [opt_maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [opt_tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent/Corner.js\").default} [opt_corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner) {\n    var corner = opt_corner !== undefined ? opt_corner : Corner.TOP_LEFT;\n    var resolutions = resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize);\n    return new TileGrid({\n        extent: extent,\n        origin: getCorner(extent, corner),\n        resolutions: resolutions,\n        tileSize: opt_tileSize,\n    });\n}\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [opt_options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(opt_options) {\n    var xyzOptions = opt_options || {};\n    var extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n    var gridOptions = {\n        extent: extent,\n        minZoom: xyzOptions.minZoom,\n        tileSize: xyzOptions.tileSize,\n        resolutions: resolutionsFromExtent(extent, xyzOptions.maxZoom, xyzOptions.tileSize, xyzOptions.maxResolution),\n    };\n    return new TileGrid(gridOptions);\n}\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [opt_maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [opt_tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [opt_maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize, opt_maxResolution) {\n    var maxZoom = opt_maxZoom !== undefined ? opt_maxZoom : DEFAULT_MAX_ZOOM;\n    var height = getHeight(extent);\n    var width = getWidth(extent);\n    var tileSize = toSize(opt_tileSize !== undefined ? opt_tileSize : DEFAULT_TILE_SIZE);\n    var maxResolution = opt_maxResolution > 0\n        ? opt_maxResolution\n        : Math.max(width / tileSize[0], height / tileSize[1]);\n    var length = maxZoom + 1;\n    var resolutions = new Array(length);\n    for (var z = 0; z < length; ++z) {\n        resolutions[z] = maxResolution / Math.pow(2, z);\n    }\n    return resolutions;\n}\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [opt_maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [opt_tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent/Corner.js\").default} [opt_corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, opt_maxZoom, opt_tileSize, opt_corner) {\n    var extent = extentFromProjection(projection);\n    return createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner);\n}\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n    projection = getProjection(projection);\n    var extent = projection.getExtent();\n    if (!extent) {\n        var half = (180 * METERS_PER_UNIT[Units.DEGREES]) / projection.getMetersPerUnit();\n        extent = createOrUpdate(-half, -half, half, half);\n    }\n    return extent;\n}\n//# sourceMappingURL=tilegrid.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport { abstract } from '../util.js';\nimport { assert } from '../asserts.js';\nimport { equivalent } from '../proj.js';\nimport { getKeyZXY, withinExtentAndZ } from '../tilecoord.js';\nimport { getForProjection as getTileGridForProjection, wrapX, } from '../tilegrid.js';\nimport { scale as scaleSize, toSize } from '../size.js';\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] CacheSize.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./State.js\").default} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nvar TileSource = /** @class */ (function (_super) {\n    __extends(TileSource, _super);\n    /**\n     * @param {Options} options SourceTile source options.\n     */\n    function TileSource(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            attributionsCollapsible: options.attributionsCollapsible,\n            projection: options.projection,\n            state: options.state,\n            wrapX: options.wrapX,\n        }) || this;\n        /***\n         * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n         */\n        _this.on;\n        /***\n         * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n         */\n        _this.once;\n        /***\n         * @type {TileSourceOnSignature<void>}\n         */\n        _this.un;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.tilePixelRatio_ =\n            options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n        /**\n         * @protected\n         * @type {import(\"../tilegrid/TileGrid.js\").default}\n         */\n        _this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n        var tileSize = [256, 256];\n        var tileGrid = options.tileGrid;\n        if (tileGrid) {\n            toSize(tileGrid.getTileSize(tileGrid.getMinZoom()), tileSize);\n        }\n        /**\n         * @protected\n         * @type {import(\"../TileCache.js\").default}\n         */\n        _this.tileCache = new TileCache(options.cacheSize || 0);\n        /**\n         * @protected\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.tmpSize = [0, 0];\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.key_ = options.key || '';\n        /**\n         * @protected\n         * @type {import(\"../Tile.js\").Options}\n         */\n        _this.tileOptions = { transition: options.transition };\n        /**\n         * zDirection hint, read by the renderer. Indicates which resolution should be used\n         * by a renderer if the views resolution does not match any resolution of the tile source.\n         * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n         * will be used. If -1, the nearest higher resolution will be used.\n         * @type {number|import(\"../array.js\").NearestDirectionFunction}\n         */\n        _this.zDirection = options.zDirection ? options.zDirection : 0;\n        return _this;\n    }\n    /**\n     * @return {boolean} Can expire cache.\n     */\n    TileSource.prototype.canExpireCache = function () {\n        return this.tileCache.canExpireCache();\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {!Object<string, boolean>} usedTiles Used tiles.\n     */\n    TileSource.prototype.expireCache = function (projection, usedTiles) {\n        var tileCache = this.getTileCacheForProjection(projection);\n        if (tileCache) {\n            tileCache.expireCache(usedTiles);\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {number} z Zoom level.\n     * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n     * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n     *     loaded tile.  If the callback returns `false`, the tile will not be\n     *     considered loaded.\n     * @return {boolean} The tile range is fully covered with loaded tiles.\n     */\n    TileSource.prototype.forEachLoadedTile = function (projection, z, tileRange, callback) {\n        var tileCache = this.getTileCacheForProjection(projection);\n        if (!tileCache) {\n            return false;\n        }\n        var covered = true;\n        var tile, tileCoordKey, loaded;\n        for (var x = tileRange.minX; x <= tileRange.maxX; ++x) {\n            for (var y = tileRange.minY; y <= tileRange.maxY; ++y) {\n                tileCoordKey = getKeyZXY(z, x, y);\n                loaded = false;\n                if (tileCache.containsKey(tileCoordKey)) {\n                    tile = /** @type {!import(\"../Tile.js\").default} */ (tileCache.get(tileCoordKey));\n                    loaded = tile.getState() === TileState.LOADED;\n                    if (loaded) {\n                        loaded = callback(tile) !== false;\n                    }\n                }\n                if (!loaded) {\n                    covered = false;\n                }\n            }\n        }\n        return covered;\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {number} Gutter.\n     */\n    TileSource.prototype.getGutterForProjection = function (projection) {\n        return 0;\n    };\n    /**\n     * Return the key to be used for all tiles in the source.\n     * @return {string} The key for all tiles.\n     * @protected\n     */\n    TileSource.prototype.getKey = function () {\n        return this.key_;\n    };\n    /**\n     * Set the value to be used as the key for all tiles in the source.\n     * @param {string} key The key for tiles.\n     * @protected\n     */\n    TileSource.prototype.setKey = function (key) {\n        if (this.key_ !== key) {\n            this.key_ = key;\n            this.changed();\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {boolean} Opaque.\n     */\n    TileSource.prototype.getOpaque = function (projection) {\n        return this.opaque_;\n    };\n    /**\n     * @return {Array<number>} Resolutions.\n     */\n    TileSource.prototype.getResolutions = function () {\n        return this.tileGrid.getResolutions();\n    };\n    /**\n     * @abstract\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!import(\"../Tile.js\").default} Tile.\n     */\n    TileSource.prototype.getTile = function (z, x, y, pixelRatio, projection) {\n        return abstract();\n    };\n    /**\n     * Return the tile grid of the tile source.\n     * @return {import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n     * @api\n     */\n    TileSource.prototype.getTileGrid = function () {\n        return this.tileGrid;\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n     */\n    TileSource.prototype.getTileGridForProjection = function (projection) {\n        if (!this.tileGrid) {\n            return getTileGridForProjection(projection);\n        }\n        else {\n            return this.tileGrid;\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {import(\"../TileCache.js\").default} Tile cache.\n     * @protected\n     */\n    TileSource.prototype.getTileCacheForProjection = function (projection) {\n        assert(equivalent(this.getProjection(), projection), 68 // A VectorTile source can only be rendered if it has a projection compatible with the view projection.\n        );\n        return this.tileCache;\n    };\n    /**\n     * Get the tile pixel ratio for this source. Subclasses may override this\n     * method, which is meant to return a supported pixel ratio that matches the\n     * provided `pixelRatio` as close as possible.\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {number} Tile pixel ratio.\n     */\n    TileSource.prototype.getTilePixelRatio = function (pixelRatio) {\n        return this.tilePixelRatio_;\n    };\n    /**\n     * @param {number} z Z.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {import(\"../size.js\").Size} Tile size.\n     */\n    TileSource.prototype.getTilePixelSize = function (z, pixelRatio, projection) {\n        var tileGrid = this.getTileGridForProjection(projection);\n        var tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n        var tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n        if (tilePixelRatio == 1) {\n            return tileSize;\n        }\n        else {\n            return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n        }\n    };\n    /**\n     * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n     * is outside the resolution and extent range of the tile grid, `null` will be\n     * returned.\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"../proj/Projection.js\").default} [opt_projection] Projection.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n     *     null if no tile URL should be created for the passed `tileCoord`.\n     */\n    TileSource.prototype.getTileCoordForTileUrlFunction = function (tileCoord, opt_projection) {\n        var projection = opt_projection !== undefined ? opt_projection : this.getProjection();\n        var tileGrid = this.getTileGridForProjection(projection);\n        if (this.getWrapX() && projection.isGlobal()) {\n            tileCoord = wrapX(tileGrid, tileCoord, projection);\n        }\n        return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n    };\n    /**\n     * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n     * @api\n     */\n    TileSource.prototype.clear = function () {\n        this.tileCache.clear();\n    };\n    TileSource.prototype.refresh = function () {\n        this.clear();\n        _super.prototype.refresh.call(this);\n    };\n    /**\n     * Increases the cache size if needed\n     * @param {number} tileCount Minimum number of tiles needed.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     */\n    TileSource.prototype.updateCacheSize = function (tileCount, projection) {\n        var tileCache = this.getTileCacheForProjection(projection);\n        if (tileCount > tileCache.highWaterMark) {\n            tileCache.highWaterMark = tileCount;\n        }\n    };\n    /**\n     * Marks a tile coord as being used, without triggering a load.\n     * @abstract\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     */\n    TileSource.prototype.useTile = function (z, x, y, projection) { };\n    return TileSource;\n}(Source));\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nvar TileSourceEvent = /** @class */ (function (_super) {\n    __extends(TileSourceEvent, _super);\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../Tile.js\").default} tile The tile.\n     */\n    function TileSourceEvent(type, tile) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The tile related to the event.\n         * @type {import(\"../Tile.js\").default}\n         * @api\n         */\n        _this.tile = tile;\n        return _this;\n    }\n    return TileSourceEvent;\n}(Event));\nexport { TileSourceEvent };\nexport default TileSource;\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/tileurlfunction\n */\nimport { assert } from './asserts.js';\nimport { modulo } from './math.js';\nimport { hash as tileCoordHash } from './tilecoord.js';\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n    var zRegEx = /\\{z\\}/g;\n    var xRegEx = /\\{x\\}/g;\n    var yRegEx = /\\{y\\}/g;\n    var dashYRegEx = /\\{-y\\}/g;\n    return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n        if (!tileCoord) {\n            return undefined;\n        }\n        else {\n            return template\n                .replace(zRegEx, tileCoord[0].toString())\n                .replace(xRegEx, tileCoord[1].toString())\n                .replace(yRegEx, tileCoord[2].toString())\n                .replace(dashYRegEx, function () {\n                var z = tileCoord[0];\n                var range = tileGrid.getFullTileRange(z);\n                assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n                var y = range.getHeight() - tileCoord[2] - 1;\n                return y.toString();\n            });\n        }\n    });\n}\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n    var len = templates.length;\n    var tileUrlFunctions = new Array(len);\n    for (var i = 0; i < len; ++i) {\n        tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n    }\n    return createFromTileUrlFunctions(tileUrlFunctions);\n}\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n    if (tileUrlFunctions.length === 1) {\n        return tileUrlFunctions[0];\n    }\n    return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n        if (!tileCoord) {\n            return undefined;\n        }\n        else {\n            var h = tileCoordHash(tileCoord);\n            var index = modulo(h, tileUrlFunctions.length);\n            return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n        }\n    });\n}\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n}\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n    var urls = [];\n    var match = /\\{([a-z])-([a-z])\\}/.exec(url);\n    if (match) {\n        // char range\n        var startCharCode = match[1].charCodeAt(0);\n        var stopCharCode = match[2].charCodeAt(0);\n        var charCode = void 0;\n        for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n            urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n        }\n        return urls;\n    }\n    match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n    if (match) {\n        // number range\n        var stop_1 = parseInt(match[2], 10);\n        for (var i = parseInt(match[1], 10); i <= stop_1; i++) {\n            urls.push(url.replace(match[0], i.toString()));\n        }\n        return urls;\n    }\n    urls.push(url);\n    return urls;\n}\n//# sourceMappingURL=tileurlfunction.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, { TileSourceEvent } from './Tile.js';\nimport TileState from '../TileState.js';\nimport { createFromTemplates, expandUrl } from '../tileurlfunction.js';\nimport { getKeyZXY } from '../tilecoord.js';\nimport { getUid } from '../util.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Cache size.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./State.js\").default} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] TileUrlFunction.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n */\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nvar UrlTile = /** @class */ (function (_super) {\n    __extends(UrlTile, _super);\n    /**\n     * @param {Options} options Image tile options.\n     */\n    function UrlTile(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            opaque: options.opaque,\n            projection: options.projection,\n            state: options.state,\n            tileGrid: options.tileGrid,\n            tilePixelRatio: options.tilePixelRatio,\n            wrapX: options.wrapX,\n            transition: options.transition,\n            key: options.key,\n            attributionsCollapsible: options.attributionsCollapsible,\n            zDirection: options.zDirection,\n        }) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.generateTileUrlFunction_ =\n            _this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n        /**\n         * @protected\n         * @type {import(\"../Tile.js\").LoadFunction}\n         */\n        _this.tileLoadFunction = options.tileLoadFunction;\n        if (options.tileUrlFunction) {\n            _this.tileUrlFunction = options.tileUrlFunction;\n        }\n        /**\n         * @protected\n         * @type {!Array<string>|null}\n         */\n        _this.urls = null;\n        if (options.urls) {\n            _this.setUrls(options.urls);\n        }\n        else if (options.url) {\n            _this.setUrl(options.url);\n        }\n        /**\n         * @private\n         * @type {!Object<string, boolean>}\n         */\n        _this.tileLoadingKeys_ = {};\n        return _this;\n    }\n    /**\n     * Return the tile load function of the source.\n     * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n     * @api\n     */\n    UrlTile.prototype.getTileLoadFunction = function () {\n        return this.tileLoadFunction;\n    };\n    /**\n     * Return the tile URL function of the source.\n     * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n     * @api\n     */\n    UrlTile.prototype.getTileUrlFunction = function () {\n        return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n            ? this.tileUrlFunction.bind(this)\n            : this.tileUrlFunction;\n    };\n    /**\n     * Return the URLs used for this source.\n     * When a tileUrlFunction is used instead of url or urls,\n     * null will be returned.\n     * @return {!Array<string>|null} URLs.\n     * @api\n     */\n    UrlTile.prototype.getUrls = function () {\n        return this.urls;\n    };\n    /**\n     * Handle tile change events.\n     * @param {import(\"../events/Event.js\").default} event Event.\n     * @protected\n     */\n    UrlTile.prototype.handleTileChange = function (event) {\n        var tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n        var uid = getUid(tile);\n        var tileState = tile.getState();\n        var type;\n        if (tileState == TileState.LOADING) {\n            this.tileLoadingKeys_[uid] = true;\n            type = TileEventType.TILELOADSTART;\n        }\n        else if (uid in this.tileLoadingKeys_) {\n            delete this.tileLoadingKeys_[uid];\n            type =\n                tileState == TileState.ERROR\n                    ? TileEventType.TILELOADERROR\n                    : tileState == TileState.LOADED\n                        ? TileEventType.TILELOADEND\n                        : undefined;\n        }\n        if (type != undefined) {\n            this.dispatchEvent(new TileSourceEvent(type, tile));\n        }\n    };\n    /**\n     * Set the tile load function of the source.\n     * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n     * @api\n     */\n    UrlTile.prototype.setTileLoadFunction = function (tileLoadFunction) {\n        this.tileCache.clear();\n        this.tileLoadFunction = tileLoadFunction;\n        this.changed();\n    };\n    /**\n     * Set the tile URL function of the source.\n     * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n     * @param {string} [key] Optional new tile key for the source.\n     * @api\n     */\n    UrlTile.prototype.setTileUrlFunction = function (tileUrlFunction, key) {\n        this.tileUrlFunction = tileUrlFunction;\n        this.tileCache.pruneExceptNewestZ();\n        if (typeof key !== 'undefined') {\n            this.setKey(key);\n        }\n        else {\n            this.changed();\n        }\n    };\n    /**\n     * Set the URL to use for requests.\n     * @param {string} url URL.\n     * @api\n     */\n    UrlTile.prototype.setUrl = function (url) {\n        var urls = expandUrl(url);\n        this.urls = urls;\n        this.setUrls(urls);\n    };\n    /**\n     * Set the URLs to use for requests.\n     * @param {Array<string>} urls URLs.\n     * @api\n     */\n    UrlTile.prototype.setUrls = function (urls) {\n        this.urls = urls;\n        var key = urls.join('\\n');\n        if (this.generateTileUrlFunction_) {\n            this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n        }\n        else {\n            this.setKey(key);\n        }\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    UrlTile.prototype.tileUrlFunction = function (tileCoord, pixelRatio, projection) {\n        return undefined;\n    };\n    /**\n     * Marks a tile coord as being used, without triggering a load.\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     */\n    UrlTile.prototype.useTile = function (z, x, y) {\n        var tileCoordKey = getKeyZXY(z, x, y);\n        if (this.tileCache.containsKey(tileCoordKey)) {\n            this.tileCache.get(tileCoordKey);\n        }\n    };\n    return UrlTile;\n}(TileSource));\nexport default UrlTile;\n//# sourceMappingURL=UrlTile.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/TileImage\n */\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport { ENABLE_RASTER_REPROJECTION } from '../reproj/common.js';\nimport { IMAGE_SMOOTHING_DISABLED } from './common.js';\nimport { equivalent, get as getProjection } from '../proj.js';\nimport { getKey, getKeyZXY } from '../tilecoord.js';\nimport { getForProjection as getTileGridForProjection } from '../tilegrid.js';\nimport { getUid } from '../util.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./State.js\").default} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nvar TileImage = /** @class */ (function (_super) {\n    __extends(TileImage, _super);\n    /**\n     * @param {!Options} options Image tile options.\n     */\n    function TileImage(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            opaque: options.opaque,\n            projection: options.projection,\n            state: options.state,\n            tileGrid: options.tileGrid,\n            tileLoadFunction: options.tileLoadFunction\n                ? options.tileLoadFunction\n                : defaultTileLoadFunction,\n            tilePixelRatio: options.tilePixelRatio,\n            tileUrlFunction: options.tileUrlFunction,\n            url: options.url,\n            urls: options.urls,\n            wrapX: options.wrapX,\n            transition: options.transition,\n            key: options.key,\n            attributionsCollapsible: options.attributionsCollapsible,\n            zDirection: options.zDirection,\n        }) || this;\n        /**\n         * @protected\n         * @type {?string}\n         */\n        _this.crossOrigin =\n            options.crossOrigin !== undefined ? options.crossOrigin : null;\n        /**\n         * @protected\n         * @type {typeof ImageTile}\n         */\n        _this.tileClass =\n            options.tileClass !== undefined ? options.tileClass : ImageTile;\n        /**\n         * @protected\n         * @type {!Object<string, TileCache>}\n         */\n        _this.tileCacheForProjection = {};\n        /**\n         * @protected\n         * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n         */\n        _this.tileGridForProjection = {};\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n        /**\n         * @private\n         * @type {object|undefined}\n         */\n        _this.contextOptions_ =\n            options.imageSmoothing === false ? IMAGE_SMOOTHING_DISABLED : undefined;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderReprojectionEdges_ = false;\n        return _this;\n    }\n    /**\n     * @return {boolean} Can expire cache.\n     */\n    TileImage.prototype.canExpireCache = function () {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            return _super.prototype.canExpireCache.call(this);\n        }\n        if (this.tileCache.canExpireCache()) {\n            return true;\n        }\n        else {\n            for (var key in this.tileCacheForProjection) {\n                if (this.tileCacheForProjection[key].canExpireCache()) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {!Object<string, boolean>} usedTiles Used tiles.\n     */\n    TileImage.prototype.expireCache = function (projection, usedTiles) {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            _super.prototype.expireCache.call(this, projection, usedTiles);\n            return;\n        }\n        var usedTileCache = this.getTileCacheForProjection(projection);\n        this.tileCache.expireCache(this.tileCache == usedTileCache ? usedTiles : {});\n        for (var id in this.tileCacheForProjection) {\n            var tileCache = this.tileCacheForProjection[id];\n            tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n        }\n    };\n    /**\n     * @return {Object|undefined} Context options.\n     */\n    TileImage.prototype.getContextOptions = function () {\n        return this.contextOptions_;\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {number} Gutter.\n     */\n    TileImage.prototype.getGutterForProjection = function (projection) {\n        if (ENABLE_RASTER_REPROJECTION &&\n            this.getProjection() &&\n            projection &&\n            !equivalent(this.getProjection(), projection)) {\n            return 0;\n        }\n        else {\n            return this.getGutter();\n        }\n    };\n    /**\n     * @return {number} Gutter.\n     */\n    TileImage.prototype.getGutter = function () {\n        return 0;\n    };\n    /**\n     * Return the key to be used for all tiles in the source.\n     * @return {string} The key for all tiles.\n     * @protected\n     */\n    TileImage.prototype.getKey = function () {\n        return (_super.prototype.getKey.call(this) +\n            (this.contextOptions_ ? '\\n' + JSON.stringify(this.contextOptions_) : ''));\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {boolean} Opaque.\n     */\n    TileImage.prototype.getOpaque = function (projection) {\n        if (ENABLE_RASTER_REPROJECTION &&\n            this.getProjection() &&\n            projection &&\n            !equivalent(this.getProjection(), projection)) {\n            return false;\n        }\n        else {\n            return _super.prototype.getOpaque.call(this, projection);\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n     */\n    TileImage.prototype.getTileGridForProjection = function (projection) {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            return _super.prototype.getTileGridForProjection.call(this, projection);\n        }\n        var thisProj = this.getProjection();\n        if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n            return this.tileGrid;\n        }\n        else {\n            var projKey = getUid(projection);\n            if (!(projKey in this.tileGridForProjection)) {\n                this.tileGridForProjection[projKey] =\n                    getTileGridForProjection(projection);\n            }\n            return this.tileGridForProjection[projKey];\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {import(\"../TileCache.js\").default} Tile cache.\n     */\n    TileImage.prototype.getTileCacheForProjection = function (projection) {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            return _super.prototype.getTileCacheForProjection.call(this, projection);\n        }\n        var thisProj = this.getProjection();\n        if (!thisProj || equivalent(thisProj, projection)) {\n            return this.tileCache;\n        }\n        else {\n            var projKey = getUid(projection);\n            if (!(projKey in this.tileCacheForProjection)) {\n                this.tileCacheForProjection[projKey] = new TileCache(this.tileCache.highWaterMark);\n            }\n            return this.tileCacheForProjection[projKey];\n        }\n    };\n    /**\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {string} key The key set on the tile.\n     * @return {!import(\"../Tile.js\").default} Tile.\n     * @private\n     */\n    TileImage.prototype.createTile_ = function (z, x, y, pixelRatio, projection, key) {\n        var tileCoord = [z, x, y];\n        var urlTileCoord = this.getTileCoordForTileUrlFunction(tileCoord, projection);\n        var tileUrl = urlTileCoord\n            ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n            : undefined;\n        var tile = new this.tileClass(tileCoord, tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY, tileUrl !== undefined ? tileUrl : '', this.crossOrigin, this.tileLoadFunction, this.tileOptions);\n        tile.key = key;\n        tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n        return tile;\n    };\n    /**\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!import(\"../Tile.js\").default} Tile.\n     */\n    TileImage.prototype.getTile = function (z, x, y, pixelRatio, projection) {\n        var sourceProjection = this.getProjection();\n        if (!ENABLE_RASTER_REPROJECTION ||\n            !sourceProjection ||\n            !projection ||\n            equivalent(sourceProjection, projection)) {\n            return this.getTileInternal(z, x, y, pixelRatio, sourceProjection || projection);\n        }\n        else {\n            var cache = this.getTileCacheForProjection(projection);\n            var tileCoord = [z, x, y];\n            var tile = void 0;\n            var tileCoordKey = getKey(tileCoord);\n            if (cache.containsKey(tileCoordKey)) {\n                tile = cache.get(tileCoordKey);\n            }\n            var key = this.getKey();\n            if (tile && tile.key == key) {\n                return tile;\n            }\n            else {\n                var sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n                var targetTileGrid = this.getTileGridForProjection(projection);\n                var wrappedTileCoord = this.getTileCoordForTileUrlFunction(tileCoord, projection);\n                var newTile = new ReprojTile(sourceProjection, sourceTileGrid, projection, targetTileGrid, tileCoord, wrappedTileCoord, this.getTilePixelRatio(pixelRatio), this.getGutter(), function (z, x, y, pixelRatio) {\n                    return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);\n                }.bind(this), this.reprojectionErrorThreshold_, this.renderReprojectionEdges_, this.contextOptions_);\n                newTile.key = key;\n                if (tile) {\n                    newTile.interimTile = tile;\n                    newTile.refreshInterimChain();\n                    cache.replace(tileCoordKey, newTile);\n                }\n                else {\n                    cache.set(tileCoordKey, newTile);\n                }\n                return newTile;\n            }\n        }\n    };\n    /**\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!import(\"../Tile.js\").default} Tile.\n     * @protected\n     */\n    TileImage.prototype.getTileInternal = function (z, x, y, pixelRatio, projection) {\n        var tile = null;\n        var tileCoordKey = getKeyZXY(z, x, y);\n        var key = this.getKey();\n        if (!this.tileCache.containsKey(tileCoordKey)) {\n            tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n            this.tileCache.set(tileCoordKey, tile);\n        }\n        else {\n            tile = this.tileCache.get(tileCoordKey);\n            if (tile.key != key) {\n                // The source's params changed. If the tile has an interim tile and if we\n                // can use it then we use it. Otherwise we create a new tile.  In both\n                // cases we attempt to assign an interim tile to the new tile.\n                var interimTile = tile;\n                tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n                //make the new tile the head of the list,\n                if (interimTile.getState() == TileState.IDLE) {\n                    //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n                    tile.interimTile = interimTile.interimTile;\n                }\n                else {\n                    tile.interimTile = interimTile;\n                }\n                tile.refreshInterimChain();\n                this.tileCache.replace(tileCoordKey, tile);\n            }\n        }\n        return tile;\n    };\n    /**\n     * Sets whether to render reprojection edges or not (usually for debugging).\n     * @param {boolean} render Render the edges.\n     * @api\n     */\n    TileImage.prototype.setRenderReprojectionEdges = function (render) {\n        if (!ENABLE_RASTER_REPROJECTION ||\n            this.renderReprojectionEdges_ == render) {\n            return;\n        }\n        this.renderReprojectionEdges_ = render;\n        for (var id in this.tileCacheForProjection) {\n            this.tileCacheForProjection[id].clear();\n        }\n        this.changed();\n    };\n    /**\n     * Sets the tile grid to use when reprojecting the tiles to the given\n     * projection instead of the default tile grid for the projection.\n     *\n     * This can be useful when the default tile grid cannot be created\n     * (e.g. projection has no extent defined) or\n     * for optimization reasons (custom tile size, resolutions, ...).\n     *\n     * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n     * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n     * @api\n     */\n    TileImage.prototype.setTileGridForProjection = function (projection, tilegrid) {\n        if (ENABLE_RASTER_REPROJECTION) {\n            var proj = getProjection(projection);\n            if (proj) {\n                var projKey = getUid(proj);\n                if (!(projKey in this.tileGridForProjection)) {\n                    this.tileGridForProjection[projKey] = tilegrid;\n                }\n            }\n        }\n    };\n    return TileImage;\n}(UrlTile));\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n    /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src =\n        src;\n}\nexport default TileImage;\n//# sourceMappingURL=TileImage.js.map","/**\n * @module ol/source/XYZ\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport TileImage from './TileImage.js';\nimport { createXYZ, extentFromProjection } from '../tilegrid.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if `url` or `urls` are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case\n * a `tileUrlFunction` can be used, such as:\n * ```js\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *      coordinate[1] + '/' + (-coordinate[2] - 1) + '.png';\n *  }\n * ```\n * @api\n */\nvar XYZ = /** @class */ (function (_super) {\n    __extends(XYZ, _super);\n    /**\n     * @param {Options} [opt_options] XYZ options.\n     */\n    function XYZ(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        var projection = options.projection !== undefined ? options.projection : 'EPSG:3857';\n        var tileGrid = options.tileGrid !== undefined\n            ? options.tileGrid\n            : createXYZ({\n                extent: extentFromProjection(projection),\n                maxResolution: options.maxResolution,\n                maxZoom: options.maxZoom,\n                minZoom: options.minZoom,\n                tileSize: options.tileSize,\n            });\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            crossOrigin: options.crossOrigin,\n            imageSmoothing: options.imageSmoothing,\n            opaque: options.opaque,\n            projection: projection,\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n            tileGrid: tileGrid,\n            tileLoadFunction: options.tileLoadFunction,\n            tilePixelRatio: options.tilePixelRatio,\n            tileUrlFunction: options.tileUrlFunction,\n            url: options.url,\n            urls: options.urls,\n            wrapX: options.wrapX !== undefined ? options.wrapX : true,\n            transition: options.transition,\n            attributionsCollapsible: options.attributionsCollapsible,\n            zDirection: options.zDirection,\n        }) || this;\n        return _this;\n    }\n    return XYZ;\n}(TileImage));\nexport default XYZ;\n//# sourceMappingURL=XYZ.js.map","/**\n * @module ol/source/OSM\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport XYZ from './XYZ.js';\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport var ATTRIBUTION = '&#169; ' +\n    '<a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">OpenStreetMap</a> ' +\n    'contributors.';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [url='https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nvar OSM = /** @class */ (function (_super) {\n    __extends(OSM, _super);\n    /**\n     * @param {Options} [opt_options] Open Street Map options.\n     */\n    function OSM(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        var attributions;\n        if (options.attributions !== undefined) {\n            attributions = options.attributions;\n        }\n        else {\n            attributions = [ATTRIBUTION];\n        }\n        var crossOrigin = options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';\n        var url = options.url !== undefined\n            ? options.url\n            : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n        _this = _super.call(this, {\n            attributions: attributions,\n            attributionsCollapsible: false,\n            cacheSize: options.cacheSize,\n            crossOrigin: crossOrigin,\n            imageSmoothing: options.imageSmoothing,\n            maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n            opaque: options.opaque !== undefined ? options.opaque : true,\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n            tileLoadFunction: options.tileLoadFunction,\n            transition: options.transition,\n            url: url,\n            wrapX: options.wrapX,\n            zDirection: options.zDirection,\n        }) || this;\n        return _this;\n    }\n    return OSM;\n}(XYZ));\nexport default OSM;\n//# sourceMappingURL=OSM.js.map","//~ import './style.css';\n//~ import {Map, View} from 'ol';\n\nimport {Map, View, Collection, Feature, Geolocation, Overlay} from 'ol';\nimport TileLayer from 'ol/layer/Tile';\nimport Vector from 'ol/layer/Vector';\nimport OSM from 'ol/source/OSM';\nimport XYZ from 'ol/source/XYZ';\nimport {fromLonLat,toLonLat} from 'ol/proj';\nimport {applyTransform} from 'ol/extent';\nimport {Polyline, WKT} from 'ol/format';\nimport {Point} from 'ol/geom';\nimport {getLength} from 'ol/sphere';\nimport {Style, Circle, Stroke, Fill, Icon} from 'ol/style';\nimport {Pointer, Snap, Draw, Modify} from 'ol/interaction';\n\n//~ import 'ol';\n//~ import 'ol.Map';\n//~ import 'ol.source.XYZ';\n//~ import 'ol.source.OSM';\n//~ import 'ol.layer.Tile';\n//~ import 'ol.source.Vector';\n//~ import 'ol.layer.Vector';\n//~ import 'ol.View';\n//~ import 'ol.proj';\n//~ import 'ol.proj.getTransform';\n//~ import 'ol.proj.toLonLat';\n//~ import 'ol.proj.fromLonLat';\n//~ import 'ol.extent.applyTransform';\n//~ import 'ol.Collection';\n//~ import 'ol.Feature';\n//~ import 'ol.geom.Point';\n//~ import 'ol.geom.GeometryType';\n//~ import 'ol.format.Polyline';\n//~ import 'ol.format.WKT';\n//~ import 'ol.sphere.getLength';\n//~ import 'ol.style.Style';\n//~ import 'ol.style.Circle';\n//~ import 'ol.style.Stroke';\n//~ import 'ol.style.Fill';\n//~ import 'ol.style.Icon';\n//~ import 'ol.Geolocation';\n//~ import 'ol.Overlay';\n//~ import 'ol.control.defaults';\n//~ import 'ol.interaction.defaults';\n//~ import 'ol.interaction.Pointer';\n//~ import 'ol.interaction.Snap';\n//~ import 'ol.interaction.Modify';\n//~ import 'ol.interaction.Draw';\n//~ import {proj, View} from 'ol';\nconst map = new Map({\n  target: 'map',\n  layers: [\n    new TileLayer({\n      source: new OSM()\n    })\n  ],\n  view: new View({\n    center: [0, 0],\n    zoom: 2\n  })\n});\n\n\n\n\n\n\n\n"],"names":["abstract","Error","uidCounter_","getUid","obj","ol_uid","String","extendStatics","__extends","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","__","this","constructor","create","_super","AssertionError","code","_this","message","split","name","BaseEvent","type","propagationStopped","defaultPrevented","target","preventDefault","stopPropagation","Disposable","disposed","dispose","disposeInternal","numberSafeCompareFunction","a","linearFindNearest","arr","direction","n","length","i","equals","arr1","arr2","len1","TRUE","FALSE","VOID","assign","var_sources","output","ii","arguments","source","key","clear","object","property","getValues","values","push","Target","opt_target","eventTarget_","pendingRemovals_","dispatching_","listeners_","addEventListener","listener","listeners","listenersForType","indexOf","dispatchEvent","event","evt","Event","propagate","dispatching","pendingRemovals","handleEvent","pr","removeEventListener","getListeners","undefined","hasListener","opt_type","keys","index","splice","listen","opt_this","opt_once","bind","originalListener_1","apply","eventsKey","listenOnce","unlistenByKey","Observable","on","once","un","revision_","changed","EventType","getRevision","onInternal","isArray","len","onceInternal","ol_key","unInternal","unByKey","EventTarget","ObjectEvent","oldValue","BaseObject","opt_values","values_","setProperties","get","value","getKeys","getProperties","hasProperties","notify","eventType","ObjectEventType","addChangeListener","removeChangeListener","set","opt_silent","applyProperties","unset","isEmpty","Property","CollectionEvent","opt_element","opt_index","element","Collection","opt_array","opt_options","options","unique_","unique","array_","assertUnique_","updateLength_","getLength","pop","extend","forEach","f","array","getArray","item","insertAt","elem","CollectionEventType","removeAt","remove","prev","setAt","j","opt_except","assert","assertion","errorCode","Units","RADIANS","DEGREES","FEET","METERS","PIXELS","TILE_PIXELS","USFEET","METERS_PER_UNIT","Math","PI","ua","navigator","userAgent","toLowerCase","FIREFOX","transformStringDiv","WEBKIT","MAC","DEVICE_PIXEL_RATIO","devicePixelRatio","WORKER_OFFSCREEN_CANVAS","WorkerGlobalScope","OffscreenCanvas","self","IMAGE_DECODE","Image","decode","PASSIVE_EVENT_LISTENERS","passive","defineProperty","window","error","transform","coordinate","x","y","compose","dx1","dy1","sx","sy","angle","dx2","dy2","sin","cos","makeInverse","mat","det","c","e","boundingExtent","coordinates","extent","createEmpty","extendCoordinate","closestSquaredDistanceXY","dx","dy","containsCoordinate","containsXY","coordinateRelationship","minX","minY","maxX","maxY","relationship","Relationship","Infinity","createOrUpdate","opt_extent","createOrUpdateEmpty","extent1","extent2","extendFlatCoordinates","flatCoordinates","offset","end","stride","extendXY","min","max","forEachCorner","callback","val","getBottomLeft","getBottomRight","getTopRight","getTopLeft","getArea","area","getWidth","getHeight","getCenter","getCorner","corner","Corner","getForViewAndSize","center","resolution","rotation","size","cosRotation","sinRotation","xCos","xSin","yCos","ySin","x0","x1","x2","x3","y0","y1","y2","y3","getIntersection","intersection","intersects","Projection","code_","units_","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","canWrapX","getCode","getExtent","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setExtent","setWorldExtent","setGetPointResolution","func","getPointResolutionFunc","clamp","cosh","exp","log2","log","LOG2E","squaredSegmentDistance","t","squaredDistance","toRadians","angleInDegrees","modulo","r","lerp","RADIUS","HALF_SIZE","EXTENT","WORLD_EXTENT","MAX_SAFE_Y","tan","EPSG3857Projection","units","point","PROJECTIONS","fromEPSG4326","input","opt_output","opt_dimension","dimension","slice","toEPSG4326","atan","EPSG4326Projection","opt_axisOrientation","cache","transforms","add","destination","transformFn","sourceCode","destinationCode","getDistance","c1","c2","opt_radius","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","sqrt","coordinate1","coordinate2","rotate","cosAngle","sinAngle","wrapX","projection","worldWidth","worldsAway","opt_sourceExtentWidth","projectionExtent","sourceExtentWidth","floor","getWorldsAway","cloneTransform","identityTransform","addProjection","addProj","addTransformFunc","projectionLike","replace","opt_units","pointResolution","getter","toEPSG4326_1","getTransformFromProjections","vertices","addEquivalentProjections","projections","addProjections","createProjection","defaultCode","equivalent","projection1","projection2","equalUnits","sourceProjection","destinationProjection","transformFunc","getTransformFunc","getTransform","projections2","forwardTransform","inverseTransform","toUserCoordinate","fromUserCoordinate","destProjection","fromUserExtent","EPSG3857_PROJECTIONS","EPSG4326_PROJECTIONS","tmpTransform","Geometry","fn","lastResult","lastArgs","lastThis","called","extentRevision_","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","simplifyTransformedInternal","revision","squaredTolerance","opt_transform","getSimplifiedGeometry","clone","applyTransform","nextArgs","arrayEquals","simplifyTransformed","closestPointXY","closestPoint","minSquaredDistance","coord","getClosestPoint","opt_closestPoint","NaN","intersectsCoordinate","computeExtent","isNaN","returnOrUpdate","anchor","scale","opt_sy","opt_anchor","simplify","tolerance","getType","intersectsExtent","translate","deltaX","deltaY","sourceProj","getProjection","inCoordinates","outCoordinates","pixelExtent","projectedExtent","composeTransform","opt_dest","dest","transform2D","getStrideForLayout","layout","GeometryLayout","SimpleGeometry","getCoordinates","getFirstCoordinate","getFlatCoordinates","getLastCoordinate","getLayout","simplifiedGeometry","getSimplifiedGeometryInternal","getStride","setFlatCoordinates","setCoordinates","opt_layout","setLayout","nesting","getLayoutForStride","anchorX","anchorY","k","assignClosest","offset1","offset2","maxSquaredDelta","squaredDelta","squaredDx","assignClosestPoint","maxDelta","isRing","opt_tmpPoint","tmpPoint","deflateCoordinates","snap","round","quantize","simplifiedFlatCoordinates","simplifiedOffset","inflateCoordinates","opt_coordinates","linearRing","twiceArea","LinearRing","maxDelta_","maxDeltaRevision_","linearRingArea","markers","stack","last","first","maxSquaredDistance","squaredDistance_1","douglasPeucker","GeometryType","Point","deflateCoordinate","linearRingContainsExtent","linearRingContainsXY","wn","linearRingsContainsXY","ends","intersectsLineString","coordinatesExtent","ret","forEachSegment","point1","point2","start","startRel","endRel","startX","startY","endX","endY","slope","intersectsSegment","intersectsLinearRingArray","intersectsLinearRing","tmp","linearRingIsClockwise","edge","orientLinearRings","opt_right","right","isClockwise","reverseCoordinates","Polygon","opt_ends","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","appendLinearRing","data","extension","polygon","arrayMaxSquaredDelta","assignClosestArrayPoint","getOrientedFlatCoordinates","linearRingsArea","opt_coordinatess","coordinatess","jj","inflateCoordinatesArray","getEnds","getFlatInteriorPoint","flatCenter","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","sort","segmentLength","abs","getInteriorPointOfArray","getInteriorPoint","getLinearRingCount","getLinearRing","getLinearRings","linearRings","linearRingsAreOriented","simplifiedEnds","quantizeArray","deflateCoordinatesArray","fromExtent","hasArea","toSize","opt_size","asString","color","g","toString","createCanvasContext2D","opt_width","opt_height","opt_canvasPool","opt_Context2DSettings","canvas","shift","document","createElement","style","all","width","height","getContext","replaceNode","newNode","oldNode","parent","parentNode","replaceChild","removeNode","node","removeChild","CLASS_HIDDEN","CLASS_CONTROL","CLASS_COLLAPSED","cssOpacity","opacity","checkedFonts","setSize","console","warn","BaseLayer","properties","LayerProperty","visible","zIndex","maxResolution","minResolution","minZoom","maxZoom","className_","className","state_","getClassName","getLayerState","opt_managed","state","layer","managed","getZIndex","getOpacity","sourceState","getSourceState","getVisible","getMaxResolution","getMinResolution","getMinZoom","getMaxZoom","getLayersArray","getLayerStatesArray","opt_states","setMaxResolution","setMinResolution","setMaxZoom","setMinZoom","setOpacity","setVisible","setZIndex","zindex","inView","layerState","viewState","zoom","Layer","baseOptions","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","renderer_","render","map","setMap","handleSourcePropertyChange_","setSource","states","getSource","getState","SourceState","handleSourceChange_","getFeatures","pixel","Promise","resolve","frameState","layerRenderer","getRenderer","prepareFrame","renderFrame","RenderEventType","layerStatesArray","some","arrayLayerState","createRenderer","hasRenderer","LayerRenderer","boundHandleImageChange_","handleImageChange_","layer_","declutterExecutorGroup","loadedTileCallback","tiles","tile","tileCoord","createLoadedTileFinder","tileRange","forEachLoadedTile","forEachFeatureAtCoordinate","hitTolerance","matches","getDataAtPixel","getLayer","handleFontsChanged","ImageState","renderIfReadyAndVisible","loadImage","image","imageState","load","RenderEvent","opt_inversePixelTransform","opt_frameState","opt_context","inversePixelTransform","context","CanvasLayerRenderer","container","renderedResolution","tempTransform","pixelTransform","containerReused","useContainer","layerClassName","firstElementChild","HTMLCanvasElement","position","appendChild","left","transformOrigin","clipUnrotated","topLeft","topRight","bottomRight","bottomLeft","coordinateToPixelTransform","inverted","save","beginPath","moveTo","lineTo","clip","dispatchRenderEvent_","event_1","preRender","postRender","getRenderTransform","pixelRatio","offsetX","renderPixel","layerExtent","pixelToCoordinateTransform","newCanvas","newContext","clearRect","drawImage","getImageData","err","Uint8Array","getKey","src","crossOrigin","shared","IconImageCache","cache_","cacheSize_","maxCacheSize_","canExpireCache","expire","iconImage","maxCacheSize","ImageBase","pixelRatio_","getImage","getPixelRatio","getResolution","listenImage","loadHandler","errorHandler","img","promise","listening_1","then","catch","listenerKeys","ImageWrapper","imageLoadFunction","src_","image_","unlisten_","imageLoadFunction_","handleImageError_","unlistenImage_","handleImageLoad_","setImage","adaptAttributions","attributionLike","Source","attributions_","attributions","attributionsCollapsible_","attributionsCollapsible","loading","wrapX_","viewResolver","viewRejector","viewPromise_","reject","getAttributions","getAttributionsCollapsible","getResolutions","getView","getWrapX","getContextOptions","refresh","setAttributions","setState","easeIn","pow","easeOut","inAndOut","linear","Tile","interimTile","transition_","transition","transitionStarts_","release","getInterimTile","TileState","refreshInterimChain","getTileCoord","getAlpha","id","time","delta","inTransition","endTransition","ImageTile","tileLoadFunction","crossOrigin_","tileLoadFunction_","ctx","fillStyle","fillRect","naturalWidth","naturalHeight","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","begin","update","Date","now","lastIndex","firstIndex","duration","getAngle","expireIconCache","iconImageCache","MapRenderer","map_","dispatchRenderEvent","calculateMatrices2D","checkWrapped","thisArg","layerFilter","thisArg2","result","feature","geometry","translatedCoordinate","offsets","layerStates","numLayers","tmpCoord","callback_1","order","m","distanceSq","forEachLayerAtPixel","hasFeatureAtCoordinate","getMap","scheduleExpireIconCache","postRenderFunctions","CompositeMapRenderer","fontChangeListenerKey_","redrawText","element_","CLASS_UNSELECTABLE","getViewport","insertBefore","firstChild","children_","renderedVisible_","declutterLayers","previousElement","layerIndex","renderDeclutter","children","oldChildren","childNodes","oldChild","newChild","replaceChildren","display","LayerGroup","layers","layersListenerKeys_","listenerKeys_","handleLayersChanged_","setLayers","handleLayerChange_","getLayers","handleLayersAdd_","handleLayersRemove_","layersArray","collectionEvent","pos","ownLayerState","defaultZIndex","MapEvent","MapBrowserEvent","originalEvent","opt_dragging","pixel_","coordinate_","dragging","getEventPixel","enumerable","configurable","getCoordinateFromPixel","SINGLECLICK","CLICK","DBLCLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","MapBrowserEventHandler","moveTolerance","clickTimeoutId_","emulateClicks_","dragging_","dragListenerKeys_","moveTolerance_","down_","activePointers_","trackedTouches_","pointerdownListenerKey_","PointerEventType","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","relayEvent_","boundHandleTouchMove_","handleTouchMove_","emulateClick_","pointerEvent","newEvent","MapBrowserEventType","clearTimeout","setTimeout","updateActivePointers_","pointerId","handlePointerUp_","isMouseActionButton_","button","doc","getOwnerDocument","handlePointerMove_","getRootNode","isMoving_","cancelable","clientX","clientY","DROP","PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isKeyQueued","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","TileQueue","tilePriorityFunction","tileChangeCallback","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","getTilesLoading","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","DEFAULT_TILE_SIZE","createExtent","onlyCenter","smooth","opt_isMoving","opt_centerShift","viewWidth","viewHeight","shiftX","shiftY","ratio","none","getViewportClampedResolution","maxExtent","viewportSize","showFullExtent","xResolution","yResolution","getSmoothClampedResolution","createMinMaxResolution","opt_smooth","opt_maxExtent","opt_showFullExtent","cappedMaxRes","disable","animationCallback","returnValue","isNoopAnimation","animation","sourceCenter","targetCenter","coordinatesEqual","sourceResolution","targetResolution","sourceRotation","targetRotation","calculateCenterOn","rotX","rotY","View","hints_","animations_","updateAnimationKey_","projection_","viewportSize_","targetCenter_","targetResolution_","targetRotation_","nextCenter_","nextResolution_","nextRotation_","cancelAnchor_","applyOptions_","resolutionConstraintInfo","resolutionConstraint","defaultMaxZoom","defaultZoomFactor","zoomFactor","multiWorld","smoothResolutionConstraint","projExtent","constrainOnlyCenter","resolutions","constrainResolution","capped","z","createSnapToResolutions","defaultMaxResolution","defaultMinResolution","power","opt_minResolution","minZoomLevel","ceil","cappedZoomLevel","zoomLevel","createSnapToPower","constraint","createResolutionConstraint","maxResolution_","minResolution_","zoomFactor_","resolutions_","padding_","padding","minZoom_","centerConstraint","smoothExtentConstraint","centerNone","createCenterConstraint","rotationConstraint","enableRotation","constrainRotation","opt_tolerance","rotationNone","theta","createRotationConstraint","constraints_","setRotation","setCenterInternal","setResolution","setZoom","options_","oldPadding","newPadding","offsetY","getUpdatedOptions_","newOptions","getZoom","getCenterInternal","getRotation","animate","var_args","isDef","getAnimating","resolveConstraints","args","animateInternal","animationCount","series","complete","easing","getResolutionForZoom","setHint","ViewHint","updateAnimations_","getInteracting","cancelAnimations","cancelAnimationFrame","more","seriesComplete","elapsed","fraction","progress","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","filter","Boolean","requestAnimationFrame","currentCenter","rotateCoordinate","currentResolution","opt_rotation","w","h","setViewportSize","ViewProperty","getConstraints","getConstrainResolution","getHints","opt_hints","calculateExtent","toUserExtent","calculateExtentInternal","getViewportSizeMinusPadding_","getZoomForResolution","setConstrainResolution","enabled","getResolutionForExtent","getResolutionForExtentInternal","getResolutionForValueFunction","opt_power","getConstrainedResolution","getValueForResolutionFunction","logPower","reducedSize","nextCenter","nextResolution","nextRotation","nearest","baseLevel","fit","geometryOrExtent","polygonFromExtent","fitInternal","rotatedExtentForGeometry","coords","minRotX","minRotY","maxRotX","maxRotY","rotatedExtent","centerRot","centerX","centerY","getConstrainedCenter","centerOn","centerOnInternal","calculateCenterShift","centerShift","shiftedCenter","adjustCenter","deltaCoordinates","setCenter","adjustCenterInternal","adjustResolution","adjustResolutionInternal","isMoving","newResolution","adjustZoom","adjustRotation","adjustRotationInternal","newRotation","hint","opt_doNotCancelAnims","opt_forceMoving","newCenter","opt_duration","opt_resolutionDirection","beginInteraction","endInteraction","endInteractionInternal","opt_targetResolution","getConstrainedZoom","targetZoom","opt_direction","targetRes","PluggableMap","optionsInternal","keyboardEventTarget","getElementById","controls","interactions","overlays","layerGroup","MapProperty","view","createOptionsInternal","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","renderFrame_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","overflow","overlayContainer_","pointerEvents","overlayContainerStopEvent_","mapBrowserEventHandler_","keyboardEventTarget_","keyHandlerKeys_","overlays_","overlayIdIndex_","handleResize_","postRenderFunctions_","tileQueue_","getTilePriority","handleTileChange_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","viewOptions","setView","addOverlayInternal_","getId","control","interaction","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","addOverlay","overlay","getOverlays","setTarget","forEachFeatureAtPixel","getCoordinateFromPixelInternal","getFeaturesAtPixel","features","hasFeatureAtPixel","getEventCoordinate","getEventCoordinateInternal","viewportPosition","getBoundingClientRect","eventPosition","changedTouches","top","getTarget","getTargetElement","getOverlayById","group","collection","getLoading","getPixelFromCoordinate","viewCoordinate","getPixelFromCoordinateInternal","getSize","getOverlayContainer","getOverlayContainerStopEvent","targetElement","ownerDocument","tileSourceKey","tileCenter","tileResolution","wantedTiles","browserEvent","mapBrowserEvent","handleMapBrowserEvent","rootNode","contains","documentElement","interactionsArray","getActive","handlePostRender","tileQueue","hints","viewHints","lowOnFrameBudget","updateSize","handleViewPropertyChanged_","updateViewportSize_","isRendered","renderSync","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","declutterTree","usedTiles","nextExtent","MapEventType","setLayerGroup","computedStyle","getComputedStyle","offsetWidth","parseFloat","offsetHeight","getClientRects","parseInt","Control","target_","mapEvent","Attribution","ulElement_","collapsed_","collapsed","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","tipLabel","expandClassName","collapseLabel","collapseClassName","collapseLabel_","textContent","label","label_","activeLabel","toggleButton_","setAttribute","title","handleClick_","cssClasses","renderedAttributions_","collectSourceAttributions_","lookup","visibleAttributions","attributionGetter","setCollapsible","updateElement_","lastChild","removeChildren","innerHTML","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","Rotate","compassClassName","callResetNorth_","resetNorth","duration_","autoHide_","autoHide","rotation_","resetNorth_","Zoom","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","zoomByDelta_","currentZoom","newZoom","zoomByDelta","Interaction","setActive","InteractionProperty","active","DoubleClickZoom","delta_","stopEvent","shiftKey","centroid","PointerInteraction","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","trackedPointers_","targetPointers","getPointerCount","updateTrackedPointers_","handledUp","handled","isPointerDraggingEvent","conditions","pass","altShiftKeysOnly","altKey","metaKey","ctrlKey","focusWithTabindex","hasAttribute","activeElement","focus","always","mouseActionButton","noModifierKeys","shiftKeyOnly","targetNotEditable","tagName","mouseOnly","pointerType","primaryAction","isPrimary","DragPan","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition","condition_","onFocusOnly","noKinetic_","centroidFromPointers","scaleCoordinate","distance","centerpx","DragRotate","lastAngle_","RenderBox","geometry_","startPixel_","endPixel_","render_","startPixel","endPixel","px","setPixels","createOrUpdateGeometry","getGeometry","DragBoxEventType","DragBoxEvent","DragBox","box_","minArea_","minArea","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","completeBox","DragZoom","out_","out","factor","KeyboardPan","defaultCondition_","pixelDelta_","pixelDelta","keyEvent","keyCode","KeyCode","mapUnitsDelta","pan","KeyboardZoom","charCode","charCodeAt","Mode","MouseWheelZoom","totalDelta_","lastDelta_","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","endInteraction_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","timeLeft","handleWheelZoom_","setMouseAnchor","PinchRotate","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","PinchZoom","lastDistance_","lastScaleDelta_","scaleDelta","Map","zoomOptions","rotateOptions","attribution","attributionOptions","defaultControls","altShiftDragRotate","doubleClickZoom","zoomDelta","zoomDuration","dragPan","pinchRotate","pinchZoom","keyboard","mouseWheelZoom","shiftDragZoom","defaultInteractions","LRUCache","opt_highWaterMark","highWaterMark","count_","entries_","oldest_","newest_","containsKey","entry","value_","key_","newer","older","peekLast","peekLastKey","peekFirstKey","opt_tileCoord","getKeyZXY","TileCache","expireCache","pruneExceptNewestZ","Number","fromKey","TileRange","containsTileRange","BaseTileLayer","preload","useInterimTilesOnError","setPreload","setUseInterimTilesOnError","getPreload","TileProperty","getUseInterimTilesOnError","CanvasTileLayerRenderer","tileLayer","extentChanged","renderedExtent_","renderedPixelRatio","renderedProjection","renderedRevision","renderedTiles","newTiles_","tmpExtent","tmpTileRange_","isDrawableTile","tileState","getTile","viewResolution","viewCenter","tileSource","sourceRevision","getTileGridForProjection","getZForResolution","zDirection","tilePixelRatio","getTilePixelRatio","canvasExtent","getTileRangeForExtentAndZ","tilesToDrawByZ","findLoadedTiles","tmpTileRange","uid","childTileRange","getTileCoordChildTileRange","covered","forEachTileCoordParentTileRange","canvasScale","canvasTransform","transformString","join","toTransformString","clips","clipZs","currentClip","zs","getOpaque","reverse","currentZ","currentTilePixelSize","getTilePixelSize","currentScale","dx_1","dy_1","originTileCoord","getTileCoordForCoordAndZ","originTileExtent","getTileCoordExtent","origin_1","tileGutter","getGutterForProjection","tilesToDraw","tileCoordKey","xIndex","nextX","yIndex","nextY","i_1","drawTileImage","restore","unshift","updateUsedTiles","manageTilePyramid","scheduleExpireCache","gutter","getTileImage","alpha","alphaChanged","globalAlpha","postRenderFunction","opt_tileCallback","tileCount","getTileCoordCenter","useTile","updateCacheSize","brokenDiagonalRendering_","TileLayer","Triangulation","targetProj","targetExtent","maxSourceExtent","errorThreshold","opt_destinationResolution","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","addQuad_","leftBound_1","triangle","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","isFinite","isNotFinite","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","getTriangles","IMAGE_SMOOTHING_DISABLED","imageSmoothingEnabled","msImageSmoothingEnabled","drawTestTriangle","u1","v1","u2","v2","closePath","verifyBrokenDiagonalRendering","calculateSourceResolution","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","triangulation","sources","opt_renderEdges","opt_contextOptions","pixelRound","globalCompositeOperation","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","affineCoefs","maxRow","maxEl","absValue","coef","l","solveLinearSystem","isBrokenDiagonalRendering","ud","vd","step","steps","strokeStyle","lineWidth","stroke","ReprojTile","sourceTileGrid","targetTileGrid","wrappedTileCoord","getTileFunction","opt_errorThreshold","renderEdges_","contextOptions_","gutter_","canvas_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","maxTargetExtent","limitedTargetExtent","sourceProjExtent","calculateSourceExtentResolution","errorThresholdInPixels","triangulation_","sourceRange","srcX","srcY","reproject_","getTileSize","renderReprojected","leftToLoad_1","sourceListenKey_1","unlistenSources_","tmpTileCoord","TileGrid","opt_strict","compare","every","currentVal","res","origins","origin_","origin","origins_","tileSizes_","tileSizes","tileSize_","tileSize","fullTileRanges_","tmpSize_","tmpExtent_","sizes","restrictedTileRange","calculateTileRanges_","forEachTileCoord","opt_tileRange","tileCoordExtent","createOrUpdateTileRange","getOrigin","getTileRangeForTileCoordAndZ","tileCoordZ","tileCoordX","tileCoordY","getTileRangeExtent","getTileCoordForXYAndZ_","getTileCoordForCoordAndResolution","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","adjustX","adjustY","xFromOrigin","yFromOrigin","createOrUpdateTileCoord","getTileCoordResolution","getFullTileRange","fullTileRanges","getForProjection","opt_maxZoom","opt_tileSize","opt_corner","resolutionsFromExtent","createForExtent","extentFromProjection","createForProjection","opt_maxResolution","half","TileSource","opaque_","opaque","tilePixelRatio_","tileCache","cacheSize","tmpSize","tileOptions","getTileCacheForProjection","loaded","setKey","getTileGrid","getTileCoordForTileUrlFunction","opt_projection","withinExtentAndZ","TileSourceEvent","createFromTemplate","template","zRegEx","xRegEx","yRegEx","dashYRegEx","range","createFromTemplates","templates","tileUrlFunctions","tileCoordHash","createFromTileUrlFunctions","UrlTile","generateTileUrlFunction_","tileUrlFunction","urls","setUrls","url","setUrl","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getPrototypeOf","getUrls","TileEventType","setTileLoadFunction","setTileUrlFunction","match","exec","startCharCode","stopCharCode","fromCharCode","stop_1","expandUrl","defaultTileLoadFunction","imageTile","TileImage","tileClass","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","imageSmoothing","renderReprojectionEdges_","usedTileCache","getGutter","JSON","stringify","thisProj","projKey","createTile_","urlTileCoord","tileUrl","newTile","getTileInternal","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","XYZ","xyzOptions","gridOptions","createXYZ","OSM"],"mappings":"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"}